{
    "version": "https://jsonfeed.org/version/1",
    "title": "Vegetable Blog • All posts by \"android逆向工具\" category",
    "description": "",
    "home_page_url": "http://ericcd.com",
    "items": [
        {
            "id": "http://ericcd.com/2022/02/27/Frida-2022-2-27-1/",
            "url": "http://ericcd.com/2022/02/27/Frida-2022-2-27-1/",
            "title": "Frida-2022.2.27-1",
            "date_published": "2022-02-27T03:18:05.000Z",
            "content_html": "<p>利用 Frida 进行脱壳的过程记录。<br />\n<span id=\"more\"></span></p>\n<h2 id=\"工具准备\"><a class=\"anchor\" href=\"#工具准备\">#</a> 工具准备</h2>\n<p>通过以下命令安装 Frida 模块：<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip install frida</span><br><span class=\"line\">$ pip install frida-tools</span><br></pre></td></tr></table></figure><br />\n 通过 github 下载 android 设备对应的 frida-server，通过以下命令将 frida-server 传输到 /data/local/tmp 目录下并设置可执行权限。<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ adb push frida-server /data/local/tmp</span><br><span class=\"line\">$ adb shell</span><br><span class=\"line\">$ cd /data/local/tmp</span><br><span class=\"line\">$ chmod 777 frida-server</span><br></pre></td></tr></table></figure><br />\n 使用以下命令安装 frida-dexdump<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip install frida-dexdump</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"脱壳过程\"><a class=\"anchor\" href=\"#脱壳过程\">#</a> 脱壳过程</h2>\n<p>首先将 apk 安装到设备中。<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ adb install apk</span><br></pre></td></tr></table></figure></p>\n<p>进入 frida-server 的存放目录，运行 frida-server。<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ adb shell</span><br><span class=\"line\">$ cd /data/local/tmp</span><br><span class=\"line\">$ ./frida-server</span><br></pre></td></tr></table></figure><br />\n 另外打开一个 cmd，执行以下命令进行脱壳：<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ frida -dexdump -U -f apk.packagename distPath</span><br></pre></td></tr></table></figure></p>\n<p>apk.packagename 为需要脱壳的 apk 的包名，distPath 为用户指定的 dex 存放地址。<br />\nFrida 是一款很好用的工具，它的其它功能有待后续尝试。</p>\n",
            "tags": [
                "Frida",
                "apk脱壳"
            ]
        },
        {
            "id": "http://ericcd.com/2022/02/27/Android-reverce-2022.2.27-3/",
            "url": "http://ericcd.com/2022/02/27/Android-reverce-2022.2.27-3/",
            "title": "Android 逆向学习 - 2022.2.27-3",
            "date_published": "2022-02-27T03:07:59.000Z",
            "content_html": "<p>JEB 使用记录。<br />\n<span id=\"more\"></span><br />\n1.ctrl+b 设置断点 (只能在 smali 中设置)。<br />\n2. 快捷键 q 切换代码界面。<br />\n3.Debugger-&gt;start-&gt;attach。选择 Process 附加，之后程序开始运行。</p>\n",
            "tags": [
                "JEB"
            ]
        },
        {
            "id": "http://ericcd.com/2022/02/27/Android-reverce-2022.2.27-2/",
            "url": "http://ericcd.com/2022/02/27/Android-reverce-2022.2.27-2/",
            "title": "Android 逆向学习 - 2022.2.27-2",
            "date_published": "2022-02-27T02:34:09.000Z",
            "content_html": "<p>ddms 工具使用记录。<br />\n<span id=\"more\"></span></p>\n<h2 id=\"打开-ddms\"><a class=\"anchor\" href=\"#打开-ddms\">#</a> 打开 ddms</h2>\n<p>在配置好 sdk 环境的前提下，通过命令行输入 ddms 直接打开。</p>\n<h2 id=\"过滤器使用\"><a class=\"anchor\" href=\"#过滤器使用\">#</a> 过滤器使用</h2>\n<p>通 apk 报名设置过滤器。</p>\n<h2 id=\"配合插桩调试\"><a class=\"anchor\" href=\"#配合插桩调试\">#</a> 配合插桩调试</h2>\n<ol>\n<li>通过 Android Killer 在代码中插入日志输出代码。</li>\n<li>通过 ddms 查看输出的日志信息。</li>\n</ol>\n<p>因为需要使用寄存器存放输出的日志字符串，所以需要确定声明的寄存器数量 (.locals) 是否足够。</p>\n<h2 id=\"栈跟踪\"><a class=\"anchor\" href=\"#栈跟踪\">#</a> 栈跟踪</h2>\n<p>通过插桩找到目标，之后往上分析堆栈确定调用过程。</p>\n<h2 id=\"方法刨析\"><a class=\"anchor\" href=\"#方法刨析\">#</a> 方法刨析</h2>\n<p>设置方法刨析，开始刨析后运行 app 中想要分析的功能，之后立即停止方法刨析。凭此获得方法调用表。</p>\n",
            "tags": [
                "ddms"
            ]
        },
        {
            "id": "http://ericcd.com/2022/02/27/android-reverce-2022.2.27-1/",
            "url": "http://ericcd.com/2022/02/27/android-reverce-2022.2.27-1/",
            "title": "Android 逆向学习 - 2022.2.27-1",
            "date_published": "2022-02-27T01:52:01.000Z",
            "content_html": "<p>使用 Android Studio 进行动态调试。<br />\n<span id=\"more\"></span><br />\n1.File-&gt;settings-&gt;plugins-&gt;install plugin from disk。通过以上步骤导入 smalidea。<br />\n2. 使用 Android Killer 打开目标 apk，右键注册机，进入文件路径，将 Project 文件通过 AS 的 import settings 导入。<br />\n3. 右键 smali 文件，选择 make directory as test sources root，赋予文件权限。<br />\n4. 进入 File-&gt;project structure，选择 sdk 版本。<br />\n5.Run-&gt;edit configurations，添加一个 Remote 调试器，设置端口号与 module。<br />\n6. 使用 adb shell ps 查看进程信息。<br />\n7.adb forward tcp: 调试器端口号 jdwp: 待调试进程 ID。</p>\n<p>接下来就能开始进行动态调试。（Androidmanifest 中的 android:debuggable 需要设置为 true)</p>\n",
            "tags": [
                "Android Studio"
            ]
        }
    ]
}